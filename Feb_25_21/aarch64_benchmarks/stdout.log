Architecture:        aarch64
Byte Order:          Little Endian
CPU(s):              4
On-line CPU(s) list: 0-3
Thread(s) per core:  1
Core(s) per socket:  4
Socket(s):           1
Vendor ID:           ARM
Model:               1
Model name:          Cortex-A35
Stepping:            r0p1
CPU max MHz:         1300.0000
CPU min MHz:         598.0000
BogoMIPS:            26.00
Flags:               fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid
================================================================================
/root/i-benchmarks/word2vec/bin
perf stat -o ../data/word2vec_perf_output_1614242536695196733.txt --per-core -a taskset -c 0-3 ./word2vec -train ../data/text8_1.7mb -output ../data/text8-vector.bin -cbow 1 -size 200 -window 8 -negative 25 -hs 0 -sample 1e-4 -threads 4 -binary 1 -iter 15
Starting training using file ../data/text8_1.7mb
Vocab size: 5847
Words in train file: 252418
Alpha: 0.000197  Progress: 99.92%  Words/thread/sec: 10.92k  # started on Thu Feb 25 08:42:16 2021


 Performance counter stats for 'system wide':

S0-C0           1           91912.45 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              20303      context-switches          #    0.221 K/sec                  
S0-C0           1                704      cpu-migrations            #    0.008 K/sec                  
S0-C0           1               1033      page-faults               #    0.011 K/sec                  
S0-C0           1         2873479348      cycles                    #    0.031 GHz                    
S0-C0           1         2296836536      instructions              #    0.80  insn per cycle         
S0-C0           1         4161463156      branches                  #   45.276 M/sec                  
S0-C0           1           66932202      branch-misses             #    1.61% of all branches        
S0-C1           1           91912.45 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              16985      context-switches          #    0.185 K/sec                  
S0-C1           1                679      cpu-migrations            #    0.007 K/sec                  
S0-C1           1                995      page-faults               #    0.011 K/sec                  
S0-C1           1         2708589840      cycles                    #    0.029 GHz                    
S0-C1           1         2405753898      instructions              #    0.89  insn per cycle         
S0-C1           1         4181925532      branches                  #   45.499 M/sec                  
S0-C1           1           61428160      branch-misses             #    1.47% of all branches        
S0-C2           1           91912.45 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              13110      context-switches          #    0.143 K/sec                  
S0-C2           1                613      cpu-migrations            #    0.007 K/sec                  
S0-C2           1                941      page-faults               #    0.010 K/sec                  
S0-C2           1         2172579383      cycles                    #    0.024 GHz                    
S0-C2           1         2133836859      instructions              #    0.98  insn per cycle         
S0-C2           1         4151914681      branches                  #   45.172 M/sec                  
S0-C2           1           59294127      branch-misses             #    1.43% of all branches        
S0-C3           1           91912.44 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               6014      context-switches          #    0.065 K/sec                  
S0-C3           1                495      cpu-migrations            #    0.005 K/sec                  
S0-C3           1             131157      page-faults               #    0.001 M/sec                  
S0-C3           1         2765604758      cycles                    #    0.030 GHz                    
S0-C3           1         4270816472      instructions              #    1.54  insn per cycle         
S0-C3           1           21970085      branches                  #    0.239 M/sec                  
S0-C3           1           63356897      branch-misses             #  288.38% of all branches        

      91.913441146 seconds time elapsed

perf stat -o ../data/word2vec_perf_output_no_branch_1614242536703122790.txt --per-core -a taskset -c 0-3 ./word2vec_no-guess-branch-probability -train ../data/text8_3.3mb -output ../data/text8-vector.bin -cbow 1 -size 200 -window 8 -negative 25 -hs 0 -sample 1e-4 -threads 4 -binary 1 -iter 15
Starting training using file ../data/text8_3.3mb
Vocab size: 9546
Words in train file: 524166
Alpha: 0.000005  Progress: 100.43%  Words/thread/sec: 21.37k  # started on Thu Feb 25 08:43:49 2021


 Performance counter stats for 'system wide':

S0-C0           1           98878.86 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              32190      context-switches          #    0.326 K/sec                  
S0-C0           1               1273      cpu-migrations            #    0.013 K/sec                  
S0-C0           1                120      page-faults               #    0.001 K/sec                  
S0-C0           1         3408951623      cycles                    #    0.034 GHz                    
S0-C0           1         1657756125      instructions              #    0.49  insn per cycle         
S0-C0           1         1273285956      branches                  #   12.877 M/sec                  
S0-C0           1           63842880      branch-misses             #    5.01% of all branches        
S0-C1           1           98878.86 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              16578      context-switches          #    0.168 K/sec                  
S0-C1           1                908      cpu-migrations            #    0.009 K/sec                  
S0-C1           1                115      page-faults               #    0.001 K/sec                  
S0-C1           1         1076596217      cycles                    #    0.011 GHz                    
S0-C1           1         2574412010      instructions              #    2.39  insn per cycle         
S0-C1           1         1276548635      branches                  #   12.910 M/sec                  
S0-C1           1           58584248      branch-misses             #    4.59% of all branches        
S0-C2           1           98878.86 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              20385      context-switches          #    0.206 K/sec                  
S0-C2           1                851      cpu-migrations            #    0.009 K/sec                  
S0-C2           1              29640      page-faults               #    0.300 K/sec                  
S0-C2           1         2822814184      cycles                    #    0.029 GHz                    
S0-C2           1         3214170592      instructions              #    1.14  insn per cycle         
S0-C2           1         1313882820      branches                  #   13.288 M/sec                  
S0-C2           1           61321051      branch-misses             #    4.67% of all branches        
S0-C3           1           98878.86 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              15070      context-switches          #    0.152 K/sec                  
S0-C3           1                877      cpu-migrations            #    0.009 K/sec                  
S0-C3           1             102667      page-faults               #    0.001 M/sec                  
S0-C3           1         2052331153      cycles                    #    0.021 GHz                    
S0-C3           1          585295942      instructions              #    0.29  insn per cycle         
S0-C3           1         1580330149      branches                  #   15.982 M/sec                  
S0-C3           1           67343873      branch-misses             #    4.26% of all branches        

      98.879894343 seconds time elapsed

================================================================================
++ pwd
++ date +%s%N
+ GREP_PERF=/root/i-benchmarks/MPI/bin/grep_perf_output_1614242729796774624.txt
+ NUMBER_OF_THREADS=16
+ getopts t:o:h o
+ case $o in
+ NUMBER_OF_THREADS=4
+ getopts t:o:h o
+ source /etc/profile
++ '[' -x /usr/bin/id ']'
++ '[' -z 0 ']'
+++ /usr/bin/id -un
++ USER=root
++ LOGNAME=root
++ MAIL=/var/spool/mail/root
++ '[' 0 = 0 ']'
++ pathmunge /usr/sbin
++ case ":${PATH}:" in
++ pathmunge /usr/local/sbin
++ case ":${PATH}:" in
+++ /usr/bin/hostname
++ HOSTNAME=
++ HISTSIZE=1000
++ '[' '' = ignorespace ']'
++ export HISTCONTROL=ignoredups
++ HISTCONTROL=ignoredups
++ export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL
++ '[' 0 -gt 199 ']'
++ umask 022
++ for i in /etc/profile.d/*.sh /etc/profile.d/sh.local
++ '[' -r '/etc/profile.d/*.sh' ']'
++ for i in /etc/profile.d/*.sh /etc/profile.d/sh.local
++ '[' -r /etc/profile.d/sh.local ']'
++ unset i
++ unset -f pathmunge
++ '[' -n '5.0.3(1)-release' ']'
++ '[' -f /etc/bashrc ']'
++ export BigdataBench_HOMEMPI=/root/i-benchmarks/MPI/bin/mpi/BigDataBench_V4.0_MPI/
++ BigdataBench_HOMEMPI=/root/i-benchmarks/MPI/bin/mpi/BigDataBench_V4.0_MPI/
++ export JAVA_HOME=
++ JAVA_HOME=
++ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin
++ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin
++ export CLASSPATH=.:/jre/lib:/lib/tools.jar
++ CLASSPATH=.:/jre/lib:/lib/tools.jar
++ export JRE_HOME=/jre
++ JRE_HOME=/jre
++ export MPI_HOME=/root/i-benchmarks/MPI/bin/mpi/dest
++ MPI_HOME=/root/i-benchmarks/MPI/bin/mpi/dest
++ export HYDRA_HOST_FILE=/etc/hydra/hosts
++ HYDRA_HOST_FILE=/etc/hydra/hosts
++ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin
++ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin
++ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin
++ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin
++ export LD_LIBRARY_PATH=:/root/i-benchmarks/MPI/bin/mpi/dest/lib
++ LD_LIBRARY_PATH=:/root/i-benchmarks/MPI/bin/mpi/dest/lib
+ echo 'perf stat -o /root/i-benchmarks/MPI/bin/grep_perf_output_1614242729796774624.txt --per-core -a taskset -c 0-3 ./mpi_grep_benchmark.sh -t 4'
perf stat -o /root/i-benchmarks/MPI/bin/grep_perf_output_1614242729796774624.txt --per-core -a taskset -c 0-3 ./mpi_grep_benchmark.sh -t 4
+ perf stat -o /root/i-benchmarks/MPI/bin/grep_perf_output_1614242729796774624.txt --per-core -a taskset -c 0-3 ./mpi_grep_benchmark.sh -t 4
+ NUMBER_OF_THREADS=16
+ getopts t:h o
+ case $o in
+ NUMBER_OF_THREADS=4
+ getopts t:h o
+ cd /root/i-benchmarks/MPI/bin/mpi/BigDataBench_V4.0_MPI//MicroBenchmark/OfflineAnalytics/Grep
+ INPUT='4\ne'
+ echo -e '4\ne'
+ ./run_Grep.sh
please print your total processes
please print the pattern
Process 0 of 4 is on ba554f194a2d
Process 1 of 4 is on ba554f194a2d
Process 3 of 4 is on ba554f194a2d
##folder
Process 2 of 4 is on ba554f194a2d
##folder
##folder##folder

process file　./data/128MB_input1
process file　./data/128MB_input1
process file　./data/128MB_input1
process file　./data/128MB_input1
process file　./data/lda_wiki1w_1
process file　./data/lda_wiki1w_1
process file　./data/lda_wiki1w_1
process file　./data/lda_wiki1w_1
process file　./data/512MB_input_16
process file　./data/512MB_input_16
process file　./data/512MB_input_16
process file　./data/512MB_input_16
process file　./data/246MB_input
process file　./data/246MB_input
process file　./data/246MB_input
process file　./data/246MB_input
process file　./data/512MB_input_12
process file　./data/512MB_input_12
process file　./data/512MB_input_12
process file　./data/512MB_input_12
process file　./data/128MB_input4
process file　./data/128MB_input4
process file　./data/128MB_input4
process file　./data/128MB_input4
process file　./data/512MB_input_9
process file　./data/512MB_input_9
process file　./data/512MB_input_9
process file　./data/512MB_input_9
process file　./data/512MB_input_15
process file　./data/512MB_input_15
process file　./data/512MB_input_15
process file　./data/512MB_input_15
process file　./data/512MB_input_5
process file　./data/512MB_input_5
process file　./data/512MB_input_5
process file　./data/512MB_input_5
process file　./data/128MB_input5
process file　./data/128MB_input5
process file　./data/128MB_input5
process file　./data/128MB_input5
process file　./data/512MB_input
process file　./data/512MB_input
process file　./data/512MB_input
process file　./data/512MB_input
process file　./data/512MB_input_18
process file　./data/512MB_input_18
process file　./data/512MB_input_18
process file　./data/512MB_input_18
process file　./data/512MB_input_11
process file　./data/512MB_input_11
process file　./data/512MB_input_11
process file　./data/512MB_input_11
process file　./data/256MB_input
process file　./data/256MB_input
process file　./data/256MB_input
process file　./data/256MB_input
process file　./data/128MB_input2
process file　./data/128MB_input3
process file　./data/128MB_input2
process file　./data/128MB_input2
process file　./data/128MB_input2
process file　./data/512MB_input_6
process file　./data/128MB_input3
process file　./data/128MB_input3
process file　./data/128MB_input3
process file　./data/512MB_input_6
process file　./data/512MB_input_6
process file　./data/512MB_input_6
process file　./data/512MB_input_13
process file　./data/512MB_input_13
process file　./data/512MB_input_13
process file　./data/512MB_input_13
process file　./data/512MB_input_2
process file　./data/512MB_input_2
process file　./data/512MB_input_2
process file　./data/512MB_input_2
process file　./data/512MB_input_17
process file　./data/512MB_input_3
process file　./data/512MB_input_14
process file　./data/512MB_input_8
process file　./data/512MB_input_17
process file　./data/512MB_input_17
process file　./data/512MB_input_17
process file　./data/512MB_input_10
process file　./data/512MB_input_3
process file　./data/512MB_input_3
process file　./data/512MB_input_3
process file　./data/512MB_input_4
process file　./data/512MB_input_14
process file　./data/512MB_input_14
process file　./data/512MB_input_14
process file　./data/lda_wiki1w_2
process file　./data/512MB_input_8
process file　./data/512MB_input_8
process file　./data/512MB_input_8
process file　./data/512MB_input_7
process file　./data/512MB_input_10
process file　./data/512MB_input_10
process file　./data/512MB_input_10
process file　./data/512MB_input_4
process file　./data/512MB_input_4
process file　./data/512MB_input_4
process file　./data/lda_wiki1w_2
process file　./data/lda_wiki1w_2
process file　./data/lda_wiki1w_2
process file　./data/512MB_input_7
process file　./data/512MB_input_7
process file　./data/512MB_input_7
Total Count 1028366326
wall clock time = 143.644
+ cd -
/root/i-benchmarks/MPI/bin
+ '[' -z '' ']'
+ cat /root/i-benchmarks/MPI/bin/grep_perf_output_1614242729796774624.txt
# started on Thu Feb 25 08:45:29 2021


 Performance counter stats for 'system wide':

S0-C0           1          144052.34 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              35342      context-switches          #    0.245 K/sec                  
S0-C0           1                728      cpu-migrations            #    0.005 K/sec                  
S0-C0           1               2057      page-faults               #    0.014 K/sec                  
S0-C0           1         2630751928      cycles                    #    0.018 GHz                    
S0-C0           1         1470094828      instructions              #    0.56  insn per cycle         
S0-C0           1          353549602      branches                  #    2.454 M/sec                  
S0-C0           1          383152178      branch-misses             #  108.37% of all branches        
S0-C1           1          144052.34 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              34950      context-switches          #    0.243 K/sec                  
S0-C1           1                763      cpu-migrations            #    0.005 K/sec                  
S0-C1           1               2657      page-faults               #    0.018 K/sec                  
S0-C1           1          619020411      cycles                    #    0.004 GHz                    
S0-C1           1         3988821068      instructions              #    6.44  insn per cycle         
S0-C1           1         1784985333      branches                  #   12.391 M/sec                  
S0-C1           1          509965353      branch-misses             #   28.57% of all branches        
S0-C2           1          144052.35 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              30449      context-switches          #    0.211 K/sec                  
S0-C2           1                629      cpu-migrations            #    0.004 K/sec                  
S0-C2           1               2920      page-faults               #    0.020 K/sec                  
S0-C2           1         3032611432      cycles                    #    0.021 GHz                    
S0-C2           1         1174534662      instructions              #    0.39  insn per cycle         
S0-C2           1         3175335364      branches                  #   22.043 M/sec                  
S0-C2           1          572277006      branch-misses             #   18.02% of all branches        
S0-C3           1          144052.35 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              48342      context-switches          #    0.336 K/sec                  
S0-C3           1                548      cpu-migrations            #    0.004 K/sec                  
S0-C3           1               2837      page-faults               #    0.020 K/sec                  
S0-C3           1         2890310268      cycles                    #    0.020 GHz                    
S0-C3           1         2301684727      instructions              #    0.80  insn per cycle         
S0-C3           1         1587975208      branches                  #   11.024 M/sec                  
S0-C3           1          484321870      branch-misses             #   30.50% of all branches        

     144.053825119 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/lda_perf_output_1614242874087849522.txt --per-core -a taskset -c 0-3 ./mpi_lda_benchmark.sh -t 4
please print your total processes
Training data loaded
Training data loaded
Training data loaded
Training data loaded
Iteration 0 ...
Iteration 1 ...
Iteration 2 ...
Iteration 3 ...
/root/i-benchmarks/MPI/bin
# started on Thu Feb 25 08:47:54 2021


 Performance counter stats for 'system wide':

S0-C0           1           11037.00 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               1849      context-switches          #    0.168 K/sec                  
S0-C0           1                 42      cpu-migrations            #    0.004 K/sec                  
S0-C0           1               9137      page-faults               #    0.828 K/sec                  
S0-C0           1         1249436399      cycles                    #    0.113 GHz                    
S0-C0           1         3275739416      instructions              #    2.62  insn per cycle         
S0-C0           1          985646573      branches                  #   89.304 M/sec                  
S0-C0           1           81655464      branch-misses             #    8.28% of all branches        
S0-C1           1           11037.00 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               1799      context-switches          #    0.163 K/sec                  
S0-C1           1                 49      cpu-migrations            #    0.004 K/sec                  
S0-C1           1               9245      page-faults               #    0.838 K/sec                  
S0-C1           1         1295553024      cycles                    #    0.117 GHz                    
S0-C1           1         3222717360      instructions              #    2.49  insn per cycle         
S0-C1           1          976560915      branches                  #   88.481 M/sec                  
S0-C1           1           81600145      branch-misses             #    8.36% of all branches        
S0-C2           1           11037.00 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               2132      context-switches          #    0.193 K/sec                  
S0-C2           1                 49      cpu-migrations            #    0.004 K/sec                  
S0-C2           1               9705      page-faults               #    0.879 K/sec                  
S0-C2           1         1244562167      cycles                    #    0.113 GHz                    
S0-C2           1         3296085075      instructions              #    2.65  insn per cycle         
S0-C2           1          990237766      branches                  #   89.720 M/sec                  
S0-C2           1           81689358      branch-misses             #    8.25% of all branches        
S0-C3           1           11037.00 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1                804      context-switches          #    0.073 K/sec                  
S0-C3           1                 43      cpu-migrations            #    0.004 K/sec                  
S0-C3           1               9439      page-faults               #    0.855 K/sec                  
S0-C3           1         1296500165      cycles                    #    0.117 GHz                    
S0-C3           1         3259900772      instructions              #    2.51  insn per cycle         
S0-C3           1          981650080      branches                  #   88.942 M/sec                  
S0-C3           1           81139412      branch-misses             #    8.27% of all branches        

      11.037459551 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/NaiveBayes_perf_output_1614242885337692899.txt --per-core -a taskset -c 0-3 ./mpi_naive_bayes_benchmark.sh -t 4

real	0m16.471s
user	1m3.613s
sys	0m0.740s

real	0m11.847s
user	0m46.603s
sys	0m0.558s
/root/i-benchmarks/MPI/bin
# started on Thu Feb 25 08:48:05 2021


 Performance counter stats for 'system wide':

S0-C0           1           28330.85 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               4929      context-switches          #    0.174 K/sec                  
S0-C0           1                 95      cpu-migrations            #    0.003 K/sec                  
S0-C0           1               4095      page-faults               #    0.145 K/sec                  
S0-C0           1         2050664881      cycles                    #    0.072 GHz                    
S0-C0           1         2117713854      instructions              #    1.03  insn per cycle         
S0-C0           1          245852233      branches                  #    8.678 M/sec                  
S0-C0           1          320924864      branch-misses             #  130.54% of all branches        
S0-C1           1           28330.85 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               3013      context-switches          #    0.106 K/sec                  
S0-C1           1                 73      cpu-migrations            #    0.003 K/sec                  
S0-C1           1               3687      page-faults               #    0.130 K/sec                  
S0-C1           1         2012827375      cycles                    #    0.071 GHz                    
S0-C1           1         2078210533      instructions              #    1.03  insn per cycle         
S0-C1           1          222408388      branches                  #    7.850 M/sec                  
S0-C1           1          328095403      branch-misses             #  147.52% of all branches        
S0-C2           1           28330.85 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               3704      context-switches          #    0.131 K/sec                  
S0-C2           1                 72      cpu-migrations            #    0.003 K/sec                  
S0-C2           1               3827      page-faults               #    0.135 K/sec                  
S0-C2           1         1833554309      cycles                    #    0.065 GHz                    
S0-C2           1         2088599210      instructions              #    1.14  insn per cycle         
S0-C2           1          240417479      branches                  #    8.486 M/sec                  
S0-C2           1          318888951      branch-misses             #  132.64% of all branches        
S0-C3           1           28330.85 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               2348      context-switches          #    0.083 K/sec                  
S0-C3           1                 51      cpu-migrations            #    0.002 K/sec                  
S0-C3           1               3551      page-faults               #    0.125 K/sec                  
S0-C3           1         2004995044      cycles                    #    0.071 GHz                    
S0-C3           1         2112508317      instructions              #    1.05  insn per cycle         
S0-C3           1          238880393      branches                  #    8.432 M/sec                  
S0-C3           1          320607102      branch-misses             #  134.21% of all branches        

      28.331382266 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/wordcounts_perf_output_1614242913760560126.txt --per-core -a taskset -c 0-3 ./mpi_wordcount_benchmark.sh -t 4
please print your total processes
Rank:Rank:2 ##
Size:4 ##
Process 2 of 4 is on ba554f194a2d
Rank:3 ##
Size:4 ##
Process 3 of 4 is on ba554f194a2d
Rank:0 ##
Size:4 ##
Process 0 of 4 is on ba554f194a2d
1 ##
##folderSize:4 ##
Process 1 of 4 is on ba554f194a2d
##folder

##folder
process file　./data/116MB_input
process file　./data/116MB_input
process file　./data/116MB_input
##folder
process file　./data/116MB_input
Total words 17086836 Diff cnt 4 Max Cnt 6662116
wall clock time = 15.4212
/root/i-benchmarks/MPI/bin
# started on Thu Feb 25 08:48:33 2021


 Performance counter stats for 'system wide':

S0-C0           1           15557.48 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               3914      context-switches          #    0.252 K/sec                  
S0-C0           1                 39      cpu-migrations            #    0.003 K/sec                  
S0-C0           1               2116      page-faults               #    0.136 K/sec                  
S0-C0           1         2951694926      cycles                    #    0.190 GHz                    
S0-C0           1          192426200      instructions              #    0.07  insn per cycle         
S0-C0           1         2005960854      branches                  #  128.939 M/sec                  
S0-C0           1           51858402      branch-misses             #    2.59% of all branches        
S0-C1           1           15557.48 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               1534      context-switches          #    0.099 K/sec                  
S0-C1           1                 37      cpu-migrations            #    0.002 K/sec                  
S0-C1           1               2539      page-faults               #    0.163 K/sec                  
S0-C1           1         2980892055      cycles                    #    0.192 GHz                    
S0-C1           1          144505608      instructions              #    0.05  insn per cycle         
S0-C1           1         1977200103      branches                  #  127.090 M/sec                  
S0-C1           1           63399283      branch-misses             #    3.21% of all branches        
S0-C2           1           15557.49 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               3398      context-switches          #    0.218 K/sec                  
S0-C2           1                 42      cpu-migrations            #    0.003 K/sec                  
S0-C2           1               2370      page-faults               #    0.152 K/sec                  
S0-C2           1         2868655853      cycles                    #    0.184 GHz                    
S0-C2           1         4094924306      instructions              #    1.43  insn per cycle         
S0-C2           1         1851694474      branches                  #  119.023 M/sec                  
S0-C2           1           68953641      branch-misses             #    3.72% of all branches        
S0-C3           1           15557.48 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               1752      context-switches          #    0.113 K/sec                  
S0-C3           1                 37      cpu-migrations            #    0.002 K/sec                  
S0-C3           1               1770      page-faults               #    0.114 K/sec                  
S0-C3           1         2932674465      cycles                    #    0.189 GHz                    
S0-C3           1             561735      instructions              #    0.00  insn per cycle         
S0-C3           1         1932609204      branches                  #  124.224 M/sec                  
S0-C3           1           59995165      branch-misses             #    3.10% of all branches        

      15.557936368 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/kmeans_perf_output_1614242929411191001.txt --per-core -a taskset -c 0-3 ./mpi_kmeans_benchmark.sh -t 4
please print your total processes
please print Kmeans clusters's number
You can find result in ./Kmeans-result file
numObjs is 112500, numCoords is 9, numClusters is 2
numObjs is 112500, numCoords is 9, numClusters is 2
numObjs is 112500, numCoords is 9, numClusters is 2
numObjs is 112500, numCoords is 9, numClusters is 2
mpi_kmeans is 0.096267 Seconds
mpi_kmeans is 0.096280 Seconds
mpi_kmeans is 0.096280 Seconds
mpi_kmeans is 0.096280 Seconds
Writing coordinates of K=2 cluster centers to file "./data/data-Kmeans.cluster_centres"
Writing membership of N=450000 data objects to file "./data/data-Kmeans.membership"

Performing **** Simple Kmeans  (MPI) ****
Num of processes = 4
Input file:        ./data/data-Kmeans
numObjs          = 450000
numCoords        = 9
numClusters      = 2
threshold        = 0.0010
I/O time           =    15.9702 sec
Computation timing =     0.1485 sec
FPCount=141749,IntCount=37800839

real	0m16.175s
user	0m54.770s
sys	0m6.926s
/root/i-benchmarks/MPI/bin
# started on Thu Feb 25 08:48:49 2021


 Performance counter stats for 'system wide':

S0-C0           1           16188.04 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               2961      context-switches          #    0.183 K/sec                  
S0-C0           1                 60      cpu-migrations            #    0.004 K/sec                  
S0-C0           1               3354      page-faults               #    0.207 K/sec                  
S0-C0           1         3791819133      cycles                    #    0.234 GHz                    
S0-C0           1          118592890      instructions              #    0.03  insn per cycle         
S0-C0           1         1846503494      branches                  #  114.066 M/sec                  
S0-C0           1           62981004      branch-misses             #    3.41% of all branches        
S0-C1           1           16188.04 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               3615      context-switches          #    0.223 K/sec                  
S0-C1           1                 52      cpu-migrations            #    0.003 K/sec                  
S0-C1           1               7117      page-faults               #    0.440 K/sec                  
S0-C1           1          501617034      cycles                    #    0.031 GHz                    
S0-C1           1          423149095      instructions              #    0.84  insn per cycle         
S0-C1           1         1058278608      branches                  #   65.374 M/sec                  
S0-C1           1          158878972      branch-misses             #   15.01% of all branches        
S0-C2           1           16188.04 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               1415      context-switches          #    0.087 K/sec                  
S0-C2           1                 40      cpu-migrations            #    0.002 K/sec                  
S0-C2           1               3476      page-faults               #    0.215 K/sec                  
S0-C2           1         3785809029      cycles                    #    0.234 GHz                    
S0-C2           1          136841234      instructions              #    0.04  insn per cycle         
S0-C2           1         1841981535      branches                  #  113.787 M/sec                  
S0-C2           1           63910984      branch-misses             #    3.47% of all branches        
S0-C3           1           16188.04 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               1178      context-switches          #    0.073 K/sec                  
S0-C3           1                 26      cpu-migrations            #    0.002 K/sec                  
S0-C3           1               3411      page-faults               #    0.211 K/sec                  
S0-C3           1         3791722530      cycles                    #    0.234 GHz                    
S0-C3           1          168039953      instructions              #    0.04  insn per cycle         
S0-C3           1         1855280560      branches                  #  114.608 M/sec                  
S0-C3           1           53209680      branch-misses             #    2.87% of all branches        

      16.188483955 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/md5_perf_output_1614242945691781228.txt --per-core -a taskset -c 0-3 ./mpi_md5_benchmark.sh -t 4
please print your total processes
input is directory
process file　./data/128MB_input1
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
process file　./data/lda_wiki1w_1
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
process file　./data/246MB_input
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
process file　./data/256MB_input
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
process file　./data/128MB_input2
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
process file　./data/lda_wiki1w_2
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
time=100.022
/root/i-benchmarks/MPI/bin
# started on Thu Feb 25 08:49:05 2021


 Performance counter stats for 'system wide':

S0-C0           1          100192.31 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              38845      context-switches          #    0.388 K/sec                  
S0-C0           1               4096      cpu-migrations            #    0.041 K/sec                  
S0-C0           1               4444      page-faults               #    0.044 K/sec                  
S0-C0           1         3719388292      cycles                    #    0.037 GHz                    
S0-C0           1         4002163632      instructions              #    1.08  insn per cycle         
S0-C0           1          831102400      branches                  #    8.295 M/sec                  
S0-C0           1           55494790      branch-misses             #    6.68% of all branches        
S0-C1           1          100192.31 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              45334      context-switches          #    0.452 K/sec                  
S0-C1           1               4359      cpu-migrations            #    0.044 K/sec                  
S0-C1           1               4416      page-faults               #    0.044 K/sec                  
S0-C1           1         1591089491      cycles                    #    0.016 GHz                    
S0-C1           1         2211072287      instructions              #    1.39  insn per cycle         
S0-C1           1          827683705      branches                  #    8.261 M/sec                  
S0-C1           1           49202224      branch-misses             #    5.94% of all branches        
S0-C2           1          100192.31 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              44799      context-switches          #    0.447 K/sec                  
S0-C2           1               4234      cpu-migrations            #    0.042 K/sec                  
S0-C2           1               4994      page-faults               #    0.050 K/sec                  
S0-C2           1         1259672650      cycles                    #    0.013 GHz                    
S0-C2           1         2148335209      instructions              #    1.71  insn per cycle         
S0-C2           1          821677155      branches                  #    8.201 M/sec                  
S0-C2           1           47014760      branch-misses             #    5.72% of all branches        
S0-C3           1          100192.31 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              42942      context-switches          #    0.429 K/sec                  
S0-C3           1               4029      cpu-migrations            #    0.040 K/sec                  
S0-C3           1               4073      page-faults               #    0.041 K/sec                  
S0-C3           1          910804167      cycles                    #    0.009 GHz                    
S0-C3           1         1968608211      instructions              #    2.16  insn per cycle         
S0-C3           1          825449118      branches                  #    8.239 M/sec                  
S0-C3           1           49187161      branch-misses             #    5.96% of all branches        

     100.193401518 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/sort_perf_output_1614243046080633366.txt --per-core -a taskset -c 0-3 ./mpi_sort_benchmark.sh -t 4
please print your total processes
Thu Feb 25 08:50:46 2021
Thu Feb 25 08:50:46 2021
Thu Feb 25 08:50:46 2021
Thu Feb 25 08:50:46 2021
##folder
##folder
##folder
##folder
process file　./data/128MB_input1
File Size:134217728
process file　./data/128MB_input1
File Size:134217728
File Part Size:131072
process file　./data/128MB_input1
File Size:134217728
File Part Size:131072
File Part Size:131072
process file　./data/128MB_input1
File Size:134217728
File Part Size:131072
read to:0 
4 processes mandates root height of 2
read to:0 
read to:0 
read to:0 
read to:0 
process file　./data/256MB_input
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input
File Size:268435456
File Part Size:262144
read to:0 
4 processes mandates root height of 2
read to:0 
read to:0 
read to:0 
read to:0 
process file　./data/256MB_input_1
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input_1
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input_1
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input_1
File Size:268435456
File Part Size:262144
read to:0 
read to:0 
read to:0 
read to:0 
4 processes mandates root height of 2
read to:0 
read to:0 
process file　./data/256MB_input_2
process file　./data/256MB_input_2
File Size:268435456
File Part Size:262144
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input_2
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input_2
File Size:268435456
File Part Size:262144
read to:0 
read to:0 
read to:0 
read to:0 
4 processes mandates root height of 2
read to:0 
read to:0 
read to:0 
read to:0 
Total running time:32.000000 sec
Thu Feb 25 08:51:18 2021

real	0m34.159s
user	0m55.280s
sys	0m20.675s
/root/i-benchmarks/MPI/bin
# started on Thu Feb 25 08:50:46 2021


 Performance counter stats for 'system wide':

S0-C0           1           34194.71 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              18376      context-switches          #    0.537 K/sec                  
S0-C0           1               1787      cpu-migrations            #    0.052 K/sec                  
S0-C0           1               7351      page-faults               #    0.215 K/sec                  
S0-C0           1         1596412981      cycles                    #    0.047 GHz                    
S0-C0           1         3363756791      instructions              #    2.11  insn per cycle         
S0-C0           1         1536581086      branches                  #   44.936 M/sec                  
S0-C0           1          199781182      branch-misses             #   13.00% of all branches        
S0-C1           1           34194.72 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              21078      context-switches          #    0.616 K/sec                  
S0-C1           1               1526      cpu-migrations            #    0.045 K/sec                  
S0-C1           1               8619      page-faults               #    0.252 K/sec                  
S0-C1           1         2595127865      cycles                    #    0.076 GHz                    
S0-C1           1         1490531583      instructions              #    0.57  insn per cycle         
S0-C1           1         1156067576      branches                  #   33.808 M/sec                  
S0-C1           1          194389009      branch-misses             #   16.81% of all branches        
S0-C2           1           34194.72 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              21373      context-switches          #    0.625 K/sec                  
S0-C2           1               1220      cpu-migrations            #    0.036 K/sec                  
S0-C2           1               5965      page-faults               #    0.174 K/sec                  
S0-C2           1         1082647450      cycles                    #    0.032 GHz                    
S0-C2           1         3157206245      instructions              #    2.92  insn per cycle         
S0-C2           1         1508698323      branches                  #   44.121 M/sec                  
S0-C2           1          197180795      branch-misses             #   13.07% of all branches        
S0-C3           1           34194.72 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              18416      context-switches          #    0.539 K/sec                  
S0-C3           1               1161      cpu-migrations            #    0.034 K/sec                  
S0-C3           1               5512      page-faults               #    0.161 K/sec                  
S0-C3           1         1172620068      cycles                    #    0.034 GHz                    
S0-C3           1         3253354629      instructions              #    2.77  insn per cycle         
S0-C3           1         1519655463      branches                  #   44.441 M/sec                  
S0-C3           1          196918507      branch-misses             #   12.96% of all branches        

      34.195321466 seconds time elapsed

================================================================================
perf stat -o sqlite_4_threads.txt  --per-core -a taskset -c 0-3 ./sqlite_benchmark 4
SUCCESS::pthread_create() succeeded for command ./speedtest1 --size 130
SUCCESS::pthread_create() succeeded for command ./speedtest1 --size 130
SUCCESS::pthread_create() succeeded for command ./speedtest1 --size 130
SUCCESS::pthread_create() succeeded for command ./speedtest1 --size 130
-- Speedtest1 for SQLite 3.31.1 2020-01-27 19:55:54 3bfa9cc97da10598521b342961df8f
-- Speedtest1 for SQLite 3.31.1 2020-01-27 19:55:54 3bfa9cc97da10598521b342961df8f
-- Speedtest1 for SQLite 3.31.1 2020-01-27 19:55:54 3bfa9cc97da10598521b342961df8f
-- Speedtest1 for SQLite 3.31.1 2020-01-27 19:55:54 3bfa9cc97da10598521b342961df8f
 100 - 13000 INSERTs into table with no index......................  100 - 13000 INSERTs into table with no index......................  100 - 13000 INSERTs into table with no index......................  100 - 13000 INSERTs into table with no index......................    0.100s
 110 - 13000 ordered INSERTS with one index/PK.....................    0.100s
 110 - 13000 ordered INSERTS with one index/PK.....................    0.101s
 110 - 13000 ordered INSERTS with one index/PK.....................    0.104s
 110 - 13000 ordered INSERTS with one index/PK.....................    0.147s
 120 - 13000 unordered INSERTS with one index/PK...................    0.149s
 120 - 13000 unordered INSERTS with one index/PK...................    0.152s
 120 - 13000 unordered INSERTS with one index/PK...................    0.150s
 120 - 13000 unordered INSERTS with one index/PK...................    0.229s
   0.240s
   0.236s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.231s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................  130 - 25 SELECTS, numeric BETWEEN, unindexed......................  130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.114s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.116s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.118s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.119s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.204s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    0.206s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    0.210s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    0.210s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    0.326s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.330s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.335s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.337s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.173s
 150 - CREATE INDEX five times.....................................    0.177s
 150 - CREATE INDEX five times.....................................    0.179s
 150 - CREATE INDEX five times.....................................    0.179s
 150 - CREATE INDEX five times.....................................    0.226s
 160 - 2600 SELECTS, numeric BETWEEN, indexed......................    0.232s
 160 - 2600 SELECTS, numeric BETWEEN, indexed......................    0.231s
 160 - 2600 SELECTS, numeric BETWEEN, indexed......................    0.236s
 160 - 2600 SELECTS, numeric BETWEEN, indexed......................    0.114s
 161 - 2600 SELECTS, numeric BETWEEN, PK...........................    0.112s
 161 - 2600 SELECTS, numeric BETWEEN, PK...........................    0.111s
 161 - 2600 SELECTS, numeric BETWEEN, PK...........................    0.110s
 161 - 2600 SELECTS, numeric BETWEEN, PK...........................    0.107s
 170 - 2600 SELECTS, text BETWEEN, indexed.........................    0.109s
 170 - 2600 SELECTS, text BETWEEN, indexed.........................    0.111s
 170 - 2600 SELECTS, text BETWEEN, indexed.........................    0.113s
 170 - 2600 SELECTS, text BETWEEN, indexed.........................    0.226s
 180 - 13000 INSERTS with three indexes............................    0.231s
 180 - 13000 INSERTS with three indexes............................    0.232s
 180 - 13000 INSERTS with three indexes............................    0.233s
 180 - 13000 INSERTS with three indexes............................    0.253s
 190 - DELETE and REFILL one table.................................    0.256s
 190 - DELETE and REFILL one table.................................    0.258s
 190 - DELETE and REFILL one table.................................    0.260s
 190 - DELETE and REFILL one table.................................    0.261s
 200 - VACUUM......................................................    0.264s
 200 - VACUUM......................................................    0.262s
 200 - VACUUM......................................................    0.265s
 200 - VACUUM......................................................    0.477s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.009s
 230 - 2600 UPDATES, numeric BETWEEN, indexed......................    0.468s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.469s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.008s
 230 - 2600 UPDATES, numeric BETWEEN, indexed......................    0.011s
 230 - 2600 UPDATES, numeric BETWEEN, indexed......................    0.104s
 240 - 13000 UPDATES of individual rows............................    0.548s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.008s
 230 - 2600 UPDATES, numeric BETWEEN, indexed......................    0.103s
 240 - 13000 UPDATES of individual rows............................    0.103s
 240 - 13000 UPDATES of individual rows............................    0.102s
 240 - 13000 UPDATES of individual rows............................    0.169s
 250 - One big UPDATE of the whole 13000-row table.................    0.169s
 250 - One big UPDATE of the whole 13000-row table.................    0.168s
 250 - One big UPDATE of the whole 13000-row table.................    0.056s
 260 - Query added column after filling............................    0.007s
 270 - 2600 DELETEs, numeric BETWEEN, indexed......................    0.055s
 260 - Query added column after filling............................    0.054s
 260 - Query added column after filling............................    0.008s
 270 - 2600 DELETEs, numeric BETWEEN, indexed......................    0.007s
 270 - 2600 DELETEs, numeric BETWEEN, indexed......................    0.188s
 250 - One big UPDATE of the whole 13000-row table.................    0.061s
 260 - Query added column after filling............................    0.008s
 270 - 2600 DELETEs, numeric BETWEEN, indexed......................    0.247s
 280 - 13000 DELETEs of individual rows............................    0.249s
   0.246s
 280 - 13000 DELETEs of individual rows............................  280 - 13000 DELETEs of individual rows............................    0.263s
 280 - 13000 DELETEs of individual rows............................    0.230s
 290 - Refill two 13000-row tables using REPLACE...................    0.225s
 290 - Refill two 13000-row tables using REPLACE...................    0.238s
 290 - Refill two 13000-row tables using REPLACE...................    0.232s
 290 - Refill two 13000-row tables using REPLACE...................    0.654s
 300 - Refill a 13000-row table using (b&1)==(a&1).................    0.660s
 300 - Refill a 13000-row table using (b&1)==(a&1).................    0.659s
 300 - Refill a 13000-row table using (b&1)==(a&1).................    0.657s
 300 - Refill a 13000-row table using (b&1)==(a&1).................    0.298s
 310 - 2600 four-ways joins........................................    0.293s
 310 - 2600 four-ways joins........................................    0.317s
 310 - 2600 four-ways joins........................................    0.314s
 310 - 2600 four-ways joins........................................    0.512s
 320 - subquery in result set......................................    0.508s
 320 - subquery in result set......................................    0.516s
 320 - subquery in result set......................................    0.485s
 320 - subquery in result set......................................    0.887s
 400 - 26000 REPLACE ops on an IPK.................................    0.884s
 400 - 26000 REPLACE ops on an IPK.................................    0.897s
 400 - 26000 REPLACE ops on an IPK.................................    0.884s
 400 - 26000 REPLACE ops on an IPK.................................    0.333s
 410 - 26000 SELECTS on an IPK.....................................    0.329s
 410 - 26000 SELECTS on an IPK.....................................    0.338s
 410 - 26000 SELECTS on an IPK.....................................    0.328s
 410 - 26000 SELECTS on an IPK.....................................    0.211s
 500 - 26000 REPLACE on TEXT PK....................................    0.208s
 500 - 26000 REPLACE on TEXT PK....................................    0.224s
 500 - 26000 REPLACE on TEXT PK....................................    0.213s
 500 - 26000 REPLACE on TEXT PK....................................    0.334s
 510 - 26000 SELECTS on a TEXT PK..................................    0.335s
 510 - 26000 SELECTS on a TEXT PK..................................    0.348s
 510 - 26000 SELECTS on a TEXT PK..................................    0.333s
 510 - 26000 SELECTS on a TEXT PK..................................    0.335s
 520 - 26000 SELECT DISTINCT.......................................    0.341s
 520 - 26000 SELECT DISTINCT.......................................    0.356s
 520 - 26000 SELECT DISTINCT.......................................    0.343s
 520 - 26000 SELECT DISTINCT.......................................    0.240s
 980 - PRAGMA integrity_check......................................    0.234s
 980 - PRAGMA integrity_check......................................    0.257s
 980 - PRAGMA integrity_check......................................    0.245s
 980 - PRAGMA integrity_check......................................    0.477s
 990 - ANALYZE.....................................................    0.479s
 990 - ANALYZE.....................................................    0.075s
       TOTAL.......................................................    8.146s
SUCCESS::system(./speedtest1 --size 130) succeeded
   0.078s
       TOTAL.......................................................    8.163s
SUCCESS::system(./speedtest1 --size 130) succeeded
   0.488s
 990 - ANALYZE.....................................................    0.470s
 990 - ANALYZE.....................................................    0.075s
       TOTAL.......................................................    8.290s
   0.074s
       TOTAL.......................................................    8.302s
SUCCESS::system(./speedtest1 --size 130) succeeded
SUCCESS::system(./speedtest1 --size 130) succeeded
# started on Thu Feb 25 08:51:20 2021


 Performance counter stats for 'system wide':

S0-C0           1            8409.13 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               7448      context-switches          #    0.886 K/sec                  
S0-C0           1                201      cpu-migrations            #    0.024 K/sec                  
S0-C0           1               2027      page-faults               #    0.241 K/sec                  
S0-C0           1         2236884555      cycles                    #    0.266 GHz                    
S0-C0           1          740002642      instructions              #    0.33  insn per cycle         
S0-C0           1          626761671      branches                  #   74.533 M/sec                  
S0-C0           1           91213302      branch-misses             #   14.55% of all branches        
S0-C1           1            8409.14 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               3191      context-switches          #    0.379 K/sec                  
S0-C1           1                252      cpu-migrations            #    0.030 K/sec                  
S0-C1           1               2159      page-faults               #    0.257 K/sec                  
S0-C1           1         2110049892      cycles                    #    0.251 GHz                    
S0-C1           1          712560466      instructions              #    0.34  insn per cycle         
S0-C1           1          623099709      branches                  #   74.098 M/sec                  
S0-C1           1           91251546      branch-misses             #   14.64% of all branches        
S0-C2           1            8409.13 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               5308      context-switches          #    0.631 K/sec                  
S0-C2           1                196      cpu-migrations            #    0.023 K/sec                  
S0-C2           1               2032      page-faults               #    0.242 K/sec                  
S0-C2           1         2247716165      cycles                    #    0.267 GHz                    
S0-C2           1          750223761      instructions              #    0.33  insn per cycle         
S0-C2           1          628210619      branches                  #   74.706 M/sec                  
S0-C2           1           90636818      branch-misses             #   14.43% of all branches        
S0-C3           1            8409.13 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               2115      context-switches          #    0.252 K/sec                  
S0-C3           1                224      cpu-migrations            #    0.027 K/sec                  
S0-C3           1               2128      page-faults               #    0.253 K/sec                  
S0-C3           1         2046707745      cycles                    #    0.243 GHz                    
S0-C3           1          701919783      instructions              #    0.34  insn per cycle         
S0-C3           1          621755284      branches                  #   73.938 M/sec                  
S0-C3           1           89661248      branch-misses             #   14.42% of all branches        

       8.409524997 seconds time elapsed

================================================================================
perf stat -o go_word2vec_4_threads.txt  --per-core -a taskset -c 0-3 ./go_word2vec.sh 4
/root/i-benchmarks/golang/bin
Save trained vectors to example/word_vectors_sg.txt
# started on Thu Feb 25 08:51:29 2021


 Performance counter stats for 'system wide':

S0-C0           1           37270.69 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               8232      context-switches          #    0.221 K/sec                  
S0-C0           1                112      cpu-migrations            #    0.003 K/sec                  
S0-C0           1               3283      page-faults               #    0.088 K/sec                  
S0-C0           1         3621249557      cycles                    #    0.097 GHz                    
S0-C0           1           84516577      instructions              #    0.02  insn per cycle         
S0-C0           1         1984917812      branches                  #   53.257 M/sec                  
S0-C0           1           44718817      branch-misses             #    2.25% of all branches        
S0-C1           1           37270.69 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               7686      context-switches          #    0.206 K/sec                  
S0-C1           1                 95      cpu-migrations            #    0.003 K/sec                  
S0-C1           1               9627      page-faults               #    0.258 K/sec                  
S0-C1           1         2824364155      cycles                    #    0.076 GHz                    
S0-C1           1         3707573465      instructions              #    1.31  insn per cycle         
S0-C1           1         1919928691      branches                  #   51.513 M/sec                  
S0-C1           1           34874206      branch-misses             #    1.82% of all branches        
S0-C2           1           37270.69 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               6502      context-switches          #    0.174 K/sec                  
S0-C2           1                 84      cpu-migrations            #    0.002 K/sec                  
S0-C2           1               2424      page-faults               #    0.065 K/sec                  
S0-C2           1         2015722129      cycles                    #    0.054 GHz                    
S0-C2           1         3373680517      instructions              #    1.67  insn per cycle         
S0-C2           1         1894784518      branches                  #   50.838 M/sec                  
S0-C2           1           35971720      branch-misses             #    1.90% of all branches        
S0-C3           1           37270.69 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               8514      context-switches          #    0.228 K/sec                  
S0-C3           1                 68      cpu-migrations            #    0.002 K/sec                  
S0-C3           1              19983      page-faults               #    0.536 K/sec                  
S0-C3           1         2002990698      cycles                    #    0.054 GHz                    
S0-C3           1          892230020      instructions              #    0.45  insn per cycle         
S0-C3           1         2433417113      branches                  #   65.290 M/sec                  
S0-C3           1           82685214      branch-misses             #    3.40% of all branches        

      37.271278927 seconds time elapsed

================================================================================
================================================================================
Running run_forest_importances_faces test
perf stat -o ../output/run_forest_importances_faces.log --per-core -a taskset -c 0-3 ./run_forest_importances_faces.sh -n 4

=================================================
Pixel importances with a parallel forest of trees
=================================================

This example shows the use of forests of trees to evaluate the importance
of the pixels in an image classification task (faces). The hotter the pixel,
the more important.

The code below also illustrates how the construction and the computation
of the predictions can be parallelized within multiple jobs.

=================================================
Pixel importances with a parallel forest of trees
=================================================

This example shows the use of forests of trees to evaluate the importance
of the pixels in an image classification task (faces). The hotter the pixel,
the more important.

The code below also illustrates how the construction and the computation
of the predictions can be parallelized within multiple jobs.


=================================================
Pixel importances with a parallel forest of trees
=================================================

This example shows the use of forests of trees to evaluate the importance
of the pixels in an image classification task (faces). The hotter the pixel,
the more important.

The code below also illustrates how the construction and the computation
of the predictions can be parallelized within multiple jobs.

=================================================
Pixel importances with a parallel forest of trees
=================================================

This example shows the use of forests of trees to evaluate the importance
of the pixels in an image classification task (faces). The hotter the pixel,
the more important.

The code below also illustrates how the construction and the computation
of the predictions can be parallelized within multiple jobs.



/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
Fitting ExtraTreesClassifier on faces data with 1 cores...
Fitting ExtraTreesClassifier on faces data with 1 cores...
Fitting ExtraTreesClassifier on faces data with 1 cores...
Fitting ExtraTreesClassifier on faces data with 1 cores...
done in 12.399s
done in 12.420s
done in 12.437s
done in 12.491s
/root/i-benchmarks/scikit/bin
# started on Thu Feb 25 08:52:06 2021


 Performance counter stats for 'system wide':

S0-C0           1           31094.97 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              14510      context-switches          #    0.467 K/sec                  
S0-C0           1               1156      cpu-migrations            #    0.037 K/sec                  
S0-C0           1              46695      page-faults               #    0.002 M/sec                  
S0-C0           1         4199253881      cycles                    #    0.135 GHz                    
S0-C0           1         2894599907      instructions              #    0.69  insn per cycle         
S0-C0           1          804379454      branches                  #   25.868 M/sec                  
S0-C0           1          198563028      branch-misses             #   24.69% of all branches        
S0-C1           1           31094.97 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              13763      context-switches          #    0.443 K/sec                  
S0-C1           1                942      cpu-migrations            #    0.030 K/sec                  
S0-C1           1              49939      page-faults               #    0.002 M/sec                  
S0-C1           1          130063531      cycles                    #    0.004 GHz                    
S0-C1           1         3040917908      instructions              #   23.38  insn per cycle         
S0-C1           1          819860054      branches                  #   26.366 M/sec                  
S0-C1           1          200470473      branch-misses             #   24.45% of all branches        
S0-C2           1           31094.97 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              14143      context-switches          #    0.455 K/sec                  
S0-C2           1                775      cpu-migrations            #    0.025 K/sec                  
S0-C2           1              49104      page-faults               #    0.002 M/sec                  
S0-C2           1           93290966      cycles                    #    0.003 GHz                    
S0-C2           1         3001974711      instructions              #   32.18  insn per cycle         
S0-C2           1          815645881      branches                  #   26.231 M/sec                  
S0-C2           1          200216837      branch-misses             #   24.55% of all branches        
S0-C3           1           31094.97 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              13310      context-switches          #    0.428 K/sec                  
S0-C3           1                768      cpu-migrations            #    0.025 K/sec                  
S0-C3           1              43443      page-faults               #    0.001 M/sec                  
S0-C3           1          275085292      cycles                    #    0.009 GHz                    
S0-C3           1         3102340332      instructions              #   11.28  insn per cycle         
S0-C3           1          827602624      branches                  #   26.615 M/sec                  
S0-C3           1          200243167      branch-misses             #   24.20% of all branches        

      31.095565320 seconds time elapsed

================================================================================
Running run_multioutput_face_completion test
perf stat -o ../output/run_multioutput_face_completion.log --per-core -a taskset -c 0-3 ./run_multioutput_face_completion.sh -n 4

==============================================
Face completion with a multi-output estimators
==============================================

This example shows the use of multi-output estimator to complete images.
The goal is to predict the lower half of a face given its upper half.

The first column of images shows true faces. The next columns illustrate
how extremely randomized trees, k nearest neighbors, linear
regression and ridge regression complete the lower half of those faces.


==============================================
Face completion with a multi-output estimators
==============================================

This example shows the use of multi-output estimator to complete images.
The goal is to predict the lower half of a face given its upper half.

The first column of images shows true faces. The next columns illustrate
how extremely randomized trees, k nearest neighbors, linear
regression and ridge regression complete the lower half of those faces.


==============================================
Face completion with a multi-output estimators
==============================================

This example shows the use of multi-output estimator to complete images.
The goal is to predict the lower half of a face given its upper half.

The first column of images shows true faces. The next columns illustrate
how extremely randomized trees, k nearest neighbors, linear
regression and ridge regression complete the lower half of those faces.




==============================================
Face completion with a multi-output estimators
==============================================

This example shows the use of multi-output estimator to complete images.
The goal is to predict the lower half of a face given its upper half.

The first column of images shows true faces. The next columns illustrate
how extremely randomized trees, k nearest neighbors, linear
regression and ridge regression complete the lower half of those faces.



/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/root/i-benchmarks/scikit/bin
# started on Thu Feb 25 08:52:37 2021


 Performance counter stats for 'system wide':

S0-C0           1           52758.90 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               8985      context-switches          #    0.170 K/sec                  
S0-C0           1                227      cpu-migrations            #    0.004 K/sec                  
S0-C0           1             127387      page-faults               #    0.002 M/sec                  
S0-C0           1         2899974542      cycles                    #    0.055 GHz                    
S0-C0           1         3585074180      instructions              #    1.24  insn per cycle         
S0-C0           1         1542792023      branches                  #   29.242 M/sec                  
S0-C0           1          133153373      branch-misses             #    8.63% of all branches        
S0-C1           1           52758.90 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               5485      context-switches          #    0.104 K/sec                  
S0-C1           1                162      cpu-migrations            #    0.003 K/sec                  
S0-C1           1             130023      page-faults               #    0.002 M/sec                  
S0-C1           1         2955688125      cycles                    #    0.056 GHz                    
S0-C1           1         3425140813      instructions              #    1.16  insn per cycle         
S0-C1           1         1535351362      branches                  #   29.101 M/sec                  
S0-C1           1          134662858      branch-misses             #    8.77% of all branches        
S0-C2           1           52758.90 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               7145      context-switches          #    0.135 K/sec                  
S0-C2           1                195      cpu-migrations            #    0.004 K/sec                  
S0-C2           1             130573      page-faults               #    0.002 M/sec                  
S0-C2           1         2968934603      cycles                    #    0.056 GHz                    
S0-C2           1         3705887510      instructions              #    1.25  insn per cycle         
S0-C2           1         1553493440      branches                  #   29.445 M/sec                  
S0-C2           1          134124753      branch-misses             #    8.63% of all branches        
S0-C3           1           52758.90 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               4554      context-switches          #    0.086 K/sec                  
S0-C3           1                188      cpu-migrations            #    0.004 K/sec                  
S0-C3           1             126524      page-faults               #    0.002 M/sec                  
S0-C3           1         2867750122      cycles                    #    0.054 GHz                    
S0-C3           1         3811901002      instructions              #    1.33  insn per cycle         
S0-C3           1         1568427649      branches                  #   29.728 M/sec                  
S0-C3           1          133678074      branch-misses             #    8.52% of all branches        

      52.759625978 seconds time elapsed

================================================================================
Running run_logistic_path test
perf stat -o ../output/run_logistic_path.log --per-core -a taskset -c 0-3 ./run_logistic_path.sh -n 4

==============================================
Regularization path of L1- Logistic Regression
==============================================


Train l1-penalized logistic regression models on a binary classification
problem derived from the Iris dataset.

The models are ordered from strongest regularized to least regularized. The 4
coefficients of the models are collected and plotted as a "regularization
path": on the left-hand side of the figure (strong regularizers), all the
coefficients are exactly 0. When regularization gets progressively looser,
coefficients can get non-zero values one after the other.

Here we choose the SAGA solver because it can efficiently optimize for the
Logistic Regression loss with a non-smooth, sparsity inducing l1 penalty.

Also note that we set a low value for the tolerance to make sure that the model
has converged before collecting the coefficients.

We also use warm_start=True which means that the coefficients of the models are
reused to initialize the next model fit to speed-up the computation of the
full-path.



==============================================
Regularization path of L1- Logistic Regression
==============================================


Train l1-penalized logistic regression models on a binary classification
problem derived from the Iris dataset.

The models are ordered from strongest regularized to least regularized. The 4
coefficients of the models are collected and plotted as a "regularization
path": on the left-hand side of the figure (strong regularizers), all the
coefficients are exactly 0. When regularization gets progressively looser,
coefficients can get non-zero values one after the other.

Here we choose the SAGA solver because it can efficiently optimize for the
Logistic Regression loss with a non-smooth, sparsity inducing l1 penalty.

Also note that we set a low value for the tolerance to make sure that the model
has converged before collecting the coefficients.

We also use warm_start=True which means that the coefficients of the models are
reused to initialize the next model fit to speed-up the computation of the
full-path.


==============================================
Regularization path of L1- Logistic Regression
==============================================


Train l1-penalized logistic regression models on a binary classification
problem derived from the Iris dataset.

The models are ordered from strongest regularized to least regularized. The 4
coefficients of the models are collected and plotted as a "regularization
path": on the left-hand side of the figure (strong regularizers), all the
coefficients are exactly 0. When regularization gets progressively looser,
coefficients can get non-zero values one after the other.

Here we choose the SAGA solver because it can efficiently optimize for the
Logistic Regression loss with a non-smooth, sparsity inducing l1 penalty.

Also note that we set a low value for the tolerance to make sure that the model
has converged before collecting the coefficients.

We also use warm_start=True which means that the coefficients of the models are
reused to initialize the next model fit to speed-up the computation of the
full-path.




==============================================
Regularization path of L1- Logistic Regression
==============================================


Train l1-penalized logistic regression models on a binary classification
problem derived from the Iris dataset.

The models are ordered from strongest regularized to least regularized. The 4
coefficients of the models are collected and plotted as a "regularization
path": on the left-hand side of the figure (strong regularizers), all the
coefficients are exactly 0. When regularization gets progressively looser,
coefficients can get non-zero values one after the other.

Here we choose the SAGA solver because it can efficiently optimize for the
Logistic Regression loss with a non-smooth, sparsity inducing l1 penalty.

Also note that we set a low value for the tolerance to make sure that the model
has converged before collecting the coefficients.

We also use warm_start=True which means that the coefficients of the models are
reused to initialize the next model fit to speed-up the computation of the
full-path.


/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
Computing regularization path ...
Computing regularization path ...
Computing regularization path ...
Computing regularization path ...
This took 33.421s
This took 33.546s
This took 33.650s
This took 35.397s
/root/i-benchmarks/scikit/bin
# started on Thu Feb 25 08:53:30 2021


 Performance counter stats for 'system wide':

S0-C0           1           44051.07 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               7602      context-switches          #    0.173 K/sec                  
S0-C0           1                167      cpu-migrations            #    0.004 K/sec                  
S0-C0           1              27050      page-faults               #    0.614 K/sec                  
S0-C0           1         3384973400      cycles                    #    0.077 GHz                    
S0-C0           1          284922250      instructions              #    0.08  insn per cycle         
S0-C0           1         2674120021      branches                  #   60.705 M/sec                  
S0-C0           1          497004311      branch-misses             #   18.59% of all branches        
S0-C1           1           44051.02 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               3985      context-switches          #    0.090 K/sec                  
S0-C1           1                114      cpu-migrations            #    0.003 K/sec                  
S0-C1           1              27648      page-faults               #    0.628 K/sec                  
S0-C1           1         3496643343      cycles                    #    0.079 GHz                    
S0-C1           1          270383262      instructions              #    0.08  insn per cycle         
S0-C1           1         2671879860      branches                  #   60.654 M/sec                  
S0-C1           1          496014055      branch-misses             #   18.56% of all branches        
S0-C2           1           44051.02 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               6629      context-switches          #    0.150 K/sec                  
S0-C2           1                137      cpu-migrations            #    0.003 K/sec                  
S0-C2           1              23990      page-faults               #    0.545 K/sec                  
S0-C2           1         3224142880      cycles                    #    0.073 GHz                    
S0-C2           1         3704231509      instructions              #    1.15  insn per cycle         
S0-C2           1         2579096558      branches                  #   58.548 M/sec                  
S0-C2           1          480727732      branch-misses             #   18.64% of all branches        
S0-C3           1           44051.02 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               4178      context-switches          #    0.095 K/sec                  
S0-C3           1                131      cpu-migrations            #    0.003 K/sec                  
S0-C3           1              30088      page-faults               #    0.683 K/sec                  
S0-C3           1         1140070453      cycles                    #    0.026 GHz                    
S0-C3           1         1124906348      instructions              #    0.99  insn per cycle         
S0-C3           1         2766670538      branches                  #   62.806 M/sec                  
S0-C3           1          461912848      branch-misses             #   16.70% of all branches        

      44.051704696 seconds time elapsed

================================================================================
Running run_plot_svm_nonlinear test
perf stat -o ../output/run_plot_svm_nonlinear.log --per-core -a taskset -c 0-3 ./run_plot_svm_nonlinear.sh -n 4

==============
Non-linear SVM
==============

Perform binary classification using non-linear SVC
with RBF kernel. The target to predict is a XOR of the
inputs.

The color map illustrates the decision function learned by the SVC.


==============
Non-linear SVM
==============

Perform binary classification using non-linear SVC
with RBF kernel. The target to predict is a XOR of the
inputs.

The color map illustrates the decision function learned by the SVC.


==============
Non-linear SVM
==============

Perform binary classification using non-linear SVC
with RBF kernel. The target to predict is a XOR of the
inputs.

The color map illustrates the decision function learned by the SVC.


==============
Non-linear SVM
==============

Perform binary classification using non-linear SVC
with RBF kernel. The target to predict is a XOR of the
inputs.

The color map illustrates the decision function learned by the SVC.

/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/root/i-benchmarks/scikit/bin
# started on Thu Feb 25 08:54:14 2021


 Performance counter stats for 'system wide':

S0-C0           1           16009.82 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               2579      context-switches          #    0.161 K/sec                  
S0-C0           1                105      cpu-migrations            #    0.007 K/sec                  
S0-C0           1              31726      page-faults               #    0.002 M/sec                  
S0-C0           1         3498527390      cycles                    #    0.219 GHz                    
S0-C0           1          483883445      instructions              #    0.14  insn per cycle         
S0-C0           1          952653865      branches                  #   59.504 M/sec                  
S0-C0           1           90497288      branch-misses             #    9.50% of all branches        
S0-C1           1           16009.83 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               2064      context-switches          #    0.129 K/sec                  
S0-C1           1                 72      cpu-migrations            #    0.004 K/sec                  
S0-C1           1              32336      page-faults               #    0.002 M/sec                  
S0-C1           1         3614572609      cycles                    #    0.226 GHz                    
S0-C1           1          474151192      instructions              #    0.13  insn per cycle         
S0-C1           1          950784031      branches                  #   59.388 M/sec                  
S0-C1           1           91030529      branch-misses             #    9.57% of all branches        
S0-C2           1           16009.83 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               1810      context-switches          #    0.113 K/sec                  
S0-C2           1                 87      cpu-migrations            #    0.005 K/sec                  
S0-C2           1              30065      page-faults               #    0.002 M/sec                  
S0-C2           1         3453579407      cycles                    #    0.216 GHz                    
S0-C2           1          366736122      instructions              #    0.11  insn per cycle         
S0-C2           1          938261287      branches                  #   58.605 M/sec                  
S0-C2           1           88688340      branch-misses             #    9.45% of all branches        
S0-C3           1           16009.83 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               2209      context-switches          #    0.138 K/sec                  
S0-C3           1                106      cpu-migrations            #    0.007 K/sec                  
S0-C3           1              30716      page-faults               #    0.002 M/sec                  
S0-C3           1         3354841648      cycles                    #    0.210 GHz                    
S0-C3           1          378786268      instructions              #    0.11  insn per cycle         
S0-C3           1          940132777      branches                  #   58.722 M/sec                  
S0-C3           1           88232303      branch-misses             #    9.39% of all branches        

      16.010303959 seconds time elapsed

================================================================================
Running run_plot_theilsen test
perf stat -o ../output/run_plot_theilsen.log --per-core -a taskset -c 0-3 ./run_plot_theilsen.sh -n 4
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp

====================
Theil-Sen Regression
====================

Computes a Theil-Sen Regression on a synthetic dataset.

See :ref:`theil_sen_regression` for more information on the regressor.

Compared to the OLS (ordinary least squares) estimator, the Theil-Sen
estimator is robust against outliers. It has a breakdown point of about 29.3%
in case of a simple linear regression which means that it can tolerate
arbitrary corrupted data (outliers) of up to 29.3% in the two-dimensional
case.

The estimation of the model is done by calculating the slopes and intercepts
of a subpopulation of all possible combinations of p subsample points. If an
intercept is fitted, p must be greater than or equal to n_features + 1. The
final slope and intercept is then defined as the spatial median of these
slopes and intercepts.

In certain cases Theil-Sen performs better than :ref:`RANSAC
<ransac_regression>` which is also a robust method. This is illustrated in the
second example below where outliers with respect to the x-axis perturb RANSAC.
Tuning the ``residual_threshold`` parameter of RANSAC remedies this but in
general a priori knowledge about the data and the nature of the outliers is
needed.
Due to the computational complexity of Theil-Sen it is recommended to use it
only for small problems in terms of number of samples and features. For larger
problems the ``max_subpopulation`` parameter restricts the magnitude of all
possible combinations of p subsample points to a randomly chosen subset and
therefore also limits the runtime. Therefore, Theil-Sen is applicable to larger
problems with the drawback of losing some of its mathematical properties since
it then works on a random subset.


====================
Theil-Sen Regression
====================

Computes a Theil-Sen Regression on a synthetic dataset.

See :ref:`theil_sen_regression` for more information on the regressor.

Compared to the OLS (ordinary least squares) estimator, the Theil-Sen
estimator is robust against outliers. It has a breakdown point of about 29.3%
in case of a simple linear regression which means that it can tolerate
arbitrary corrupted data (outliers) of up to 29.3% in the two-dimensional
case.

The estimation of the model is done by calculating the slopes and intercepts
of a subpopulation of all possible combinations of p subsample points. If an
intercept is fitted, p must be greater than or equal to n_features + 1. The
final slope and intercept is then defined as the spatial median of these
slopes and intercepts.

In certain cases Theil-Sen performs better than :ref:`RANSAC
<ransac_regression>` which is also a robust method. This is illustrated in the
second example below where outliers with respect to the x-axis perturb RANSAC.
Tuning the ``residual_threshold`` parameter of RANSAC remedies this but in
general a priori knowledge about the data and the nature of the outliers is
needed.
Due to the computational complexity of Theil-Sen it is recommended to use it
only for small problems in terms of number of samples and features. For larger
problems the ``max_subpopulation`` parameter restricts the magnitude of all
possible combinations of p subsample points to a randomly chosen subset and
therefore also limits the runtime. Therefore, Theil-Sen is applicable to larger
problems with the drawback of losing some of its mathematical properties since
it then works on a random subset.


====================
Theil-Sen Regression
====================

Computes a Theil-Sen Regression on a synthetic dataset.

See :ref:`theil_sen_regression` for more information on the regressor.

Compared to the OLS (ordinary least squares) estimator, the Theil-Sen
estimator is robust against outliers. It has a breakdown point of about 29.3%
in case of a simple linear regression which means that it can tolerate
arbitrary corrupted data (outliers) of up to 29.3% in the two-dimensional
case.

The estimation of the model is done by calculating the slopes and intercepts
of a subpopulation of all possible combinations of p subsample points. If an
intercept is fitted, p must be greater than or equal to n_features + 1. The
final slope and intercept is then defined as the spatial median of these
slopes and intercepts.

In certain cases Theil-Sen performs better than :ref:`RANSAC
<ransac_regression>` which is also a robust method. This is illustrated in the
second example below where outliers with respect to the x-axis perturb RANSAC.
Tuning the ``residual_threshold`` parameter of RANSAC remedies this but in
general a priori knowledge about the data and the nature of the outliers is
needed.
Due to the computational complexity of Theil-Sen it is recommended to use it
only for small problems in terms of number of samples and features. For larger
problems the ``max_subpopulation`` parameter restricts the magnitude of all
possible combinations of p subsample points to a randomly chosen subset and
therefore also limits the runtime. Therefore, Theil-Sen is applicable to larger
problems with the drawback of losing some of its mathematical properties since
it then works on a random subset.


====================
Theil-Sen Regression
====================

Computes a Theil-Sen Regression on a synthetic dataset.

See :ref:`theil_sen_regression` for more information on the regressor.

Compared to the OLS (ordinary least squares) estimator, the Theil-Sen
estimator is robust against outliers. It has a breakdown point of about 29.3%
in case of a simple linear regression which means that it can tolerate
arbitrary corrupted data (outliers) of up to 29.3% in the two-dimensional
case.

The estimation of the model is done by calculating the slopes and intercepts
of a subpopulation of all possible combinations of p subsample points. If an
intercept is fitted, p must be greater than or equal to n_features + 1. The
final slope and intercept is then defined as the spatial median of these
slopes and intercepts.

In certain cases Theil-Sen performs better than :ref:`RANSAC
<ransac_regression>` which is also a robust method. This is illustrated in the
second example below where outliers with respect to the x-axis perturb RANSAC.
Tuning the ``residual_threshold`` parameter of RANSAC remedies this but in
general a priori knowledge about the data and the nature of the outliers is
needed.
Due to the computational complexity of Theil-Sen it is recommended to use it
only for small problems in terms of number of samples and features. For larger
problems the ``max_subpopulation`` parameter restricts the magnitude of all
possible combinations of p subsample points to a randomly chosen subset and
therefore also limits the runtime. Therefore, Theil-Sen is applicable to larger
problems with the drawback of losing some of its mathematical properties since
it then works on a random subset.

/root/i-benchmarks/scikit/bin
# started on Thu Feb 25 08:54:30 2021


 Performance counter stats for 'system wide':

S0-C0           1           36796.37 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               4647      context-switches          #    0.126 K/sec                  
S0-C0           1                135      cpu-migrations            #    0.004 K/sec                  
S0-C0           1              45671      page-faults               #    0.001 M/sec                  
S0-C0           1          197688566      cycles                    #    0.005 GHz                    
S0-C0           1         1316387260      instructions              #    6.66  insn per cycle         
S0-C0           1         1169040699      branches                  #   31.771 M/sec                  
S0-C0           1          341357434      branch-misses             #   29.20% of all branches        
S0-C1           1           36796.37 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               2564      context-switches          #    0.070 K/sec                  
S0-C1           1                102      cpu-migrations            #    0.003 K/sec                  
S0-C1           1              47281      page-faults               #    0.001 M/sec                  
S0-C1           1          156069580      cycles                    #    0.004 GHz                    
S0-C1           1         1389092216      instructions              #    8.90  insn per cycle         
S0-C1           1         1179452953      branches                  #   32.054 M/sec                  
S0-C1           1          340560585      branch-misses             #   28.87% of all branches        
S0-C2           1           36796.37 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               4313      context-switches          #    0.117 K/sec                  
S0-C2           1                112      cpu-migrations            #    0.003 K/sec                  
S0-C2           1              47714      page-faults               #    0.001 M/sec                  
S0-C2           1          175724407      cycles                    #    0.005 GHz                    
S0-C2           1         1376116266      instructions              #    7.83  insn per cycle         
S0-C2           1         1178355701      branches                  #   32.024 M/sec                  
S0-C2           1          340055129      branch-misses             #   28.86% of all branches        
S0-C3           1           36796.37 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               4971      context-switches          #    0.135 K/sec                  
S0-C3           1                 78      cpu-migrations            #    0.002 K/sec                  
S0-C3           1              48541      page-faults               #    0.001 M/sec                  
S0-C3           1          543099007      cycles                    #    0.015 GHz                    
S0-C3           1         1499478572      instructions              #    2.76  insn per cycle         
S0-C3           1         1194165837      branches                  #   32.453 M/sec                  
S0-C3           1          343960562      branch-misses             #   28.80% of all branches        

      36.796945025 seconds time elapsed

================================================================================
================================================================================
perf stat -o 099_go.log --per-core -a taskset -c 0-3 ./spec95_099_go.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 08:55:07 2021


 Performance counter stats for 'system wide':

S0-C0           1           48531.16 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               7059      context-switches          #    0.145 K/sec                  
S0-C0           1                 72      cpu-migrations            #    0.001 K/sec                  
S0-C0           1                485      page-faults               #    0.010 K/sec                  
S0-C0           1         2899880055      cycles                    #    0.060 GHz                    
S0-C0           1         1417859172      instructions              #    0.49  insn per cycle         
S0-C0           1         2639889233      branches                  #   54.396 M/sec                  
S0-C0           1         1082635299      branch-misses             #   41.01% of all branches        
S0-C1           1           48531.16 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               2448      context-switches          #    0.050 K/sec                  
S0-C1           1                 39      cpu-migrations            #    0.001 K/sec                  
S0-C1           1                450      page-faults               #    0.009 K/sec                  
S0-C1           1         2114176166      cycles                    #    0.044 GHz                    
S0-C1           1         1348140789      instructions              #    0.64  insn per cycle         
S0-C1           1         2631230744      branches                  #   54.217 M/sec                  
S0-C1           1         1080756176      branch-misses             #   41.07% of all branches        
S0-C2           1           48531.16 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               3558      context-switches          #    0.073 K/sec                  
S0-C2           1                 56      cpu-migrations            #    0.001 K/sec                  
S0-C2           1                354      page-faults               #    0.007 K/sec                  
S0-C2           1         2568444030      cycles                    #    0.053 GHz                    
S0-C2           1         1388599669      instructions              #    0.54  insn per cycle         
S0-C2           1         2635257543      branches                  #   54.300 M/sec                  
S0-C2           1         1081242609      branch-misses             #   41.03% of all branches        
S0-C3           1           48531.16 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               6460      context-switches          #    0.133 K/sec                  
S0-C3           1                 29      cpu-migrations            #    0.001 K/sec                  
S0-C3           1                350      page-faults               #    0.007 K/sec                  
S0-C3           1         2071998960      cycles                    #    0.043 GHz                    
S0-C3           1         1371422796      instructions              #    0.66  insn per cycle         
S0-C3           1         2634222254      branches                  #   54.279 M/sec                  
S0-C3           1         1081723831      branch-misses             #   41.06% of all branches        

      48.531814393 seconds time elapsed

================================================================================
perf stat -o 101_tomcatv.log --per-core -a taskset -c 0-3 ./spec95_101_tomcatv.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 08:55:56 2021


 Performance counter stats for 'system wide':

S0-C0           1           81811.16 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              11600      context-switches          #    0.142 K/sec                  
S0-C0           1                149      cpu-migrations            #    0.002 K/sec                  
S0-C0           1               3861      page-faults               #    0.047 K/sec                  
S0-C0           1         2880040986      cycles                    #    0.035 GHz                    
S0-C0           1         3351564916      instructions              #    1.16  insn per cycle         
S0-C0           1          864949473      branches                  #   10.573 M/sec                  
S0-C0           1           34779567      branch-misses             #    4.02% of all branches        
S0-C1           1           81811.17 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               9674      context-switches          #    0.118 K/sec                  
S0-C1           1                130      cpu-migrations            #    0.002 K/sec                  
S0-C1           1               4048      page-faults               #    0.049 K/sec                  
S0-C1           1         2141521305      cycles                    #    0.026 GHz                    
S0-C1           1         3250324056      instructions              #    1.52  insn per cycle         
S0-C1           1          854529330      branches                  #   10.445 M/sec                  
S0-C1           1           32669556      branch-misses             #    3.82% of all branches        
S0-C2           1           81811.17 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              14338      context-switches          #    0.175 K/sec                  
S0-C2           1                134      cpu-migrations            #    0.002 K/sec                  
S0-C2           1               3927      page-faults               #    0.048 K/sec                  
S0-C2           1         2758606586      cycles                    #    0.034 GHz                    
S0-C2           1         3322866315      instructions              #    1.20  insn per cycle         
S0-C2           1          862587373      branches                  #   10.544 M/sec                  
S0-C2           1           33535255      branch-misses             #    3.89% of all branches        
S0-C3           1           81811.17 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               8762      context-switches          #    0.107 K/sec                  
S0-C3           1                116      cpu-migrations            #    0.001 K/sec                  
S0-C3           1               3717      page-faults               #    0.045 K/sec                  
S0-C3           1         2780788242      cycles                    #    0.034 GHz                    
S0-C3           1         3267591378      instructions              #    1.18  insn per cycle         
S0-C3           1          855342613      branches                  #   10.455 M/sec                  
S0-C3           1           32104598      branch-misses             #    3.75% of all branches        

      81.812060902 seconds time elapsed

================================================================================
perf stat -o 102_swim.log --per-core -a taskset -c 0-3 ./spec95_102_swim.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 08:57:18 2021


 Performance counter stats for 'system wide':

S0-C0           1           66952.27 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               6134      context-switches          #    0.092 K/sec                  
S0-C0           1                 57      cpu-migrations            #    0.001 K/sec                  
S0-C0           1               3939      page-faults               #    0.059 K/sec                  
S0-C0           1          867266169      cycles                    #    0.013 GHz                    
S0-C0           1         1830602472      instructions              #    2.11  insn per cycle         
S0-C0           1          190709696      branches                  #    2.848 M/sec                  
S0-C0           1            5412880      branch-misses             #    2.84% of all branches        
S0-C1           1           66952.27 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               3636      context-switches          #    0.054 K/sec                  
S0-C1           1                 14      cpu-migrations            #    0.000 K/sec                  
S0-C1           1               3914      page-faults               #    0.058 K/sec                  
S0-C1           1          979824083      cycles                    #    0.015 GHz                    
S0-C1           1         1807034841      instructions              #    1.84  insn per cycle         
S0-C1           1          187350327      branches                  #    2.798 M/sec                  
S0-C1           1            4581575      branch-misses             #    2.45% of all branches        
S0-C2           1           66952.27 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               4903      context-switches          #    0.073 K/sec                  
S0-C2           1                 25      cpu-migrations            #    0.000 K/sec                  
S0-C2           1               3776      page-faults               #    0.056 K/sec                  
S0-C2           1         1099569686      cycles                    #    0.016 GHz                    
S0-C2           1         1877024435      instructions              #    1.71  insn per cycle         
S0-C2           1          193532609      branches                  #    2.891 M/sec                  
S0-C2           1            5256296      branch-misses             #    2.72% of all branches        
S0-C3           1           66952.27 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               7457      context-switches          #    0.111 K/sec                  
S0-C3           1                 37      cpu-migrations            #    0.001 K/sec                  
S0-C3           1               3941      page-faults               #    0.059 K/sec                  
S0-C3           1          947650624      cycles                    #    0.014 GHz                    
S0-C3           1         1815448851      instructions              #    1.92  insn per cycle         
S0-C3           1          189548129      branches                  #    2.831 M/sec                  
S0-C3           1            5223049      branch-misses             #    2.76% of all branches        

      66.953054074 seconds time elapsed

================================================================================
perf stat -o 103_su2cor.log --per-core -a taskset -c 0-3 ./spec95_103_su2cor.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 08:58:25 2021


 Performance counter stats for 'system wide':

S0-C0           1          117964.56 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              13482      context-switches          #    0.114 K/sec                  
S0-C0           1                103      cpu-migrations            #    0.001 K/sec                  
S0-C0           1               6317      page-faults               #    0.054 K/sec                  
S0-C0           1         3485960221      cycles                    #    0.030 GHz                    
S0-C0           1           47242824      instructions              #    0.01  insn per cycle         
S0-C0           1         1211065445      branches                  #   10.266 M/sec                  
S0-C0           1          112036318      branch-misses             #    9.25% of all branches        
S0-C1           1          117964.56 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               4695      context-switches          #    0.040 K/sec                  
S0-C1           1                 25      cpu-migrations            #    0.000 K/sec                  
S0-C1           1               6338      page-faults               #    0.054 K/sec                  
S0-C1           1         3450268814      cycles                    #    0.029 GHz                    
S0-C1           1         4254221289      instructions              #    1.23  insn per cycle         
S0-C1           1         1198595254      branches                  #   10.161 M/sec                  
S0-C1           1          108688708      branch-misses             #    9.07% of all branches        
S0-C2           1          117964.56 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               9041      context-switches          #    0.077 K/sec                  
S0-C2           1                138      cpu-migrations            #    0.001 K/sec                  
S0-C2           1               6123      page-faults               #    0.052 K/sec                  
S0-C2           1         3083734307      cycles                    #    0.026 GHz                    
S0-C2           1           46907798      instructions              #    0.02  insn per cycle         
S0-C2           1         1210295155      branches                  #   10.260 M/sec                  
S0-C2           1          110279381      branch-misses             #    9.11% of all branches        
S0-C3           1          117964.56 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              13682      context-switches          #    0.116 K/sec                  
S0-C3           1                113      cpu-migrations            #    0.001 K/sec                  
S0-C3           1               6105      page-faults               #    0.052 K/sec                  
S0-C3           1         3634415925      cycles                    #    0.031 GHz                    
S0-C3           1           85582753      instructions              #    0.02  insn per cycle         
S0-C3           1         1213636557      branches                  #   10.288 M/sec                  
S0-C3           1          111355989      branch-misses             #    9.18% of all branches        

     117.965707174 seconds time elapsed

================================================================================
perf stat -o 104_hydro2d.log --per-core -a taskset -c 0-3 ./spec95_104_hydro2d.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:00:23 2021


 Performance counter stats for 'system wide':

S0-C0           1           94007.49 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              20739      context-switches          #    0.221 K/sec                  
S0-C0           1                 89      cpu-migrations            #    0.001 K/sec                  
S0-C0           1               2537      page-faults               #    0.027 K/sec                  
S0-C0           1          647467234      cycles                    #    0.007 GHz                    
S0-C0           1         1608068786      instructions              #    2.48  insn per cycle         
S0-C0           1         2636953204      branches                  #   28.050 M/sec                  
S0-C0           1           26642021      branch-misses             #    1.01% of all branches        
S0-C1           1           94007.49 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               9496      context-switches          #    0.101 K/sec                  
S0-C1           1                 43      cpu-migrations            #    0.000 K/sec                  
S0-C1           1               2335      page-faults               #    0.025 K/sec                  
S0-C1           1            4265104      cycles                    #    0.000 GHz                    
S0-C1           1         1480311789      instructions              #  347.08  insn per cycle         
S0-C1           1         2619560535      branches                  #   27.865 M/sec                  
S0-C1           1           22790226      branch-misses             #    0.87% of all branches        
S0-C2           1           94007.40 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               8255      context-switches          #    0.088 K/sec                  
S0-C2           1                 42      cpu-migrations            #    0.000 K/sec                  
S0-C2           1               2336      page-faults               #    0.025 K/sec                  
S0-C2           1         4293009381      cycles                    #    0.046 GHz                    
S0-C2           1         1481790585      instructions              #    0.35  insn per cycle         
S0-C2           1         2617649464      branches                  #   27.845 M/sec                  
S0-C2           1           21296810      branch-misses             #    0.81% of all branches        
S0-C3           1           94007.40 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               5524      context-switches          #    0.059 K/sec                  
S0-C3           1                 53      cpu-migrations            #    0.001 K/sec                  
S0-C3           1               2563      page-faults               #    0.027 K/sec                  
S0-C3           1         4266407078      cycles                    #    0.045 GHz                    
S0-C3           1         1447856562      instructions              #    0.34  insn per cycle         
S0-C3           1         2614715725      branches                  #   27.814 M/sec                  
S0-C3           1           20844036      branch-misses             #    0.80% of all branches        

      94.008455778 seconds time elapsed

================================================================================
perf stat -o 107_mgrid.log --per-core -a taskset -c 0-3 ./spec95_107_mgrid.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:01:57 2021


 Performance counter stats for 'system wide':

S0-C0           1           89234.91 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               9782      context-switches          #    0.110 K/sec                  
S0-C0           1                 72      cpu-migrations            #    0.001 K/sec                  
S0-C0           1               2116      page-faults               #    0.024 K/sec                  
S0-C0           1            4790167      cycles                    #    0.000 GHz                    
S0-C0           1          254384386      instructions              #   53.11  insn per cycle         
S0-C0           1          722902948      branches                  #    8.101 M/sec                  
S0-C0           1           38183032      branch-misses             #    5.28% of all branches        
S0-C1           1           89234.91 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               8623      context-switches          #    0.097 K/sec                  
S0-C1           1                 29      cpu-migrations            #    0.000 K/sec                  
S0-C1           1               2109      page-faults               #    0.024 K/sec                  
S0-C1           1         4247865950      cycles                    #    0.048 GHz                    
S0-C1           1          228820950      instructions              #    0.05  insn per cycle         
S0-C1           1          719531457      branches                  #    8.063 M/sec                  
S0-C1           1           37526316      branch-misses             #    5.22% of all branches        
S0-C2           1           89234.91 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               9102      context-switches          #    0.102 K/sec                  
S0-C2           1                 37      cpu-migrations            #    0.000 K/sec                  
S0-C2           1               2225      page-faults               #    0.025 K/sec                  
S0-C2           1         4198148186      cycles                    #    0.047 GHz                    
S0-C2           1          259634092      instructions              #    0.06  insn per cycle         
S0-C2           1          722616204      branches                  #    8.098 M/sec                  
S0-C2           1           37595830      branch-misses             #    5.20% of all branches        
S0-C3           1           89234.91 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               1838      context-switches          #    0.021 K/sec                  
S0-C3           1                 40      cpu-migrations            #    0.000 K/sec                  
S0-C3           1               2240      page-faults               #    0.025 K/sec                  
S0-C3           1         3933110347      cycles                    #    0.044 GHz                    
S0-C3           1          206885858      instructions              #    0.05  insn per cycle         
S0-C3           1          715675268      branches                  #    8.020 M/sec                  
S0-C3           1           35649353      branch-misses             #    4.98% of all branches        

      89.235998324 seconds time elapsed

================================================================================
perf stat -o 110_applu.log --per-core -a taskset -c 0-3 ./spec95_110_applu.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:03:26 2021


 Performance counter stats for 'system wide':

S0-C0           1           80969.48 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               7553      context-switches          #    0.093 K/sec                  
S0-C0           1                 35      cpu-migrations            #    0.000 K/sec                  
S0-C0           1               7523      page-faults               #    0.093 K/sec                  
S0-C0           1         2138514678      cycles                    #    0.026 GHz                    
S0-C0           1          501734932      instructions              #    0.23  insn per cycle         
S0-C0           1          357116006      branches                  #    4.411 M/sec                  
S0-C0           1           20939868      branch-misses             #    5.86% of all branches        
S0-C1           1           80969.48 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               3058      context-switches          #    0.038 K/sec                  
S0-C1           1                 19      cpu-migrations            #    0.000 K/sec                  
S0-C1           1               7785      page-faults               #    0.096 K/sec                  
S0-C1           1         2115819885      cycles                    #    0.026 GHz                    
S0-C1           1          431144377      instructions              #    0.20  insn per cycle         
S0-C1           1          348817102      branches                  #    4.308 M/sec                  
S0-C1           1           19219451      branch-misses             #    5.51% of all branches        
S0-C2           1           80969.48 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               7123      context-switches          #    0.088 K/sec                  
S0-C2           1                 19      cpu-migrations            #    0.000 K/sec                  
S0-C2           1               7677      page-faults               #    0.095 K/sec                  
S0-C2           1         2114027337      cycles                    #    0.026 GHz                    
S0-C2           1          442620177      instructions              #    0.21  insn per cycle         
S0-C2           1          350544552      branches                  #    4.329 M/sec                  
S0-C2           1           19688318      branch-misses             #    5.62% of all branches        
S0-C3           1           80969.48 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               8147      context-switches          #    0.101 K/sec                  
S0-C3           1                 25      cpu-migrations            #    0.000 K/sec                  
S0-C3           1               7613      page-faults               #    0.094 K/sec                  
S0-C3           1         2120770520      cycles                    #    0.026 GHz                    
S0-C3           1          490732311      instructions              #    0.23  insn per cycle         
S0-C3           1          355446244      branches                  #    4.390 M/sec                  
S0-C3           1           20646472      branch-misses             #    5.81% of all branches        

      80.970491408 seconds time elapsed

================================================================================
perf stat -o 125_turb3d.log --per-core -a taskset -c 0-3 ./spec95_125_turb3d.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:04:47 2021


 Performance counter stats for 'system wide':

S0-C0           1           94791.97 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              24515      context-switches          #    0.259 K/sec                  
S0-C0           1                 53      cpu-migrations            #    0.001 K/sec                  
S0-C0           1               6499      page-faults               #    0.069 K/sec                  
S0-C0           1         2932885192      cycles                    #    0.031 GHz                    
S0-C0           1         2066063499      instructions              #    0.70  insn per cycle         
S0-C0           1         3596877396      branches                  #   37.945 M/sec                  
S0-C0           1          296013227      branch-misses             #    8.23% of all branches        
S0-C1           1           94791.97 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               4378      context-switches          #    0.046 K/sec                  
S0-C1           1                 28      cpu-migrations            #    0.000 K/sec                  
S0-C1           1               6742      page-faults               #    0.071 K/sec                  
S0-C1           1         1913301354      cycles                    #    0.020 GHz                    
S0-C1           1         1862396173      instructions              #    0.97  insn per cycle         
S0-C1           1         3569631725      branches                  #   37.658 M/sec                  
S0-C1           1          289821657      branch-misses             #    8.12% of all branches        
S0-C2           1           94791.97 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              14322      context-switches          #    0.151 K/sec                  
S0-C2           1                 31      cpu-migrations            #    0.000 K/sec                  
S0-C2           1               6677      page-faults               #    0.070 K/sec                  
S0-C2           1         2379661064      cycles                    #    0.025 GHz                    
S0-C2           1         1929604016      instructions              #    0.81  insn per cycle         
S0-C2           1         3578218410      branches                  #   37.748 M/sec                  
S0-C2           1          288655427      branch-misses             #    8.07% of all branches        
S0-C3           1           94791.97 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               1977      context-switches          #    0.021 K/sec                  
S0-C3           1                 23      cpu-migrations            #    0.000 K/sec                  
S0-C3           1               6633      page-faults               #    0.070 K/sec                  
S0-C3           1         1659798388      cycles                    #    0.018 GHz                    
S0-C3           1         1834751918      instructions              #    1.11  insn per cycle         
S0-C3           1         3565993498      branches                  #   37.619 M/sec                  
S0-C3           1          288214554      branch-misses             #    8.08% of all branches        

      94.793088646 seconds time elapsed

================================================================================
perf stat -o 126_gcc.log --per-core -a taskset -c 0-3 ./spec95_126_gcc.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:06:22 2021


 Performance counter stats for 'system wide':

S0-C0           1            6583.36 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               1292      context-switches          #    0.196 K/sec                  
S0-C0           1                 30      cpu-migrations            #    0.005 K/sec                  
S0-C0           1               4469      page-faults               #    0.679 K/sec                  
S0-C0           1         4003433289      cycles                    #    0.608 GHz                    
S0-C0           1         3345514967      instructions              #    0.84  insn per cycle         
S0-C0           1          458398663      branches                  #   69.630 M/sec                  
S0-C0           1          117545770      branch-misses             #   25.64% of all branches        
S0-C1           1            6583.36 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1                736      context-switches          #    0.112 K/sec                  
S0-C1           1                 24      cpu-migrations            #    0.004 K/sec                  
S0-C1           1               4503      page-faults               #    0.684 K/sec                  
S0-C1           1         4106532928      cycles                    #    0.624 GHz                    
S0-C1           1         3344258261      instructions              #    0.81  insn per cycle         
S0-C1           1          458178039      branches                  #   69.596 M/sec                  
S0-C1           1          117690946      branch-misses             #   25.69% of all branches        
S0-C2           1            6583.36 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1                762      context-switches          #    0.116 K/sec                  
S0-C2           1                 24      cpu-migrations            #    0.004 K/sec                  
S0-C2           1               4841      page-faults               #    0.735 K/sec                  
S0-C2           1         4123654212      cycles                    #    0.626 GHz                    
S0-C2           1         3344314039      instructions              #    0.81  insn per cycle         
S0-C2           1          458172689      branches                  #   69.596 M/sec                  
S0-C2           1          117564644      branch-misses             #   25.66% of all branches        
S0-C3           1            6583.36 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1                556      context-switches          #    0.084 K/sec                  
S0-C3           1                 24      cpu-migrations            #    0.004 K/sec                  
S0-C3           1               4201      page-faults               #    0.638 K/sec                  
S0-C3           1         3991801676      cycles                    #    0.606 GHz                    
S0-C3           1         3351945128      instructions              #    0.84  insn per cycle         
S0-C3           1          458878462      branches                  #   69.703 M/sec                  
S0-C3           1          117301402      branch-misses             #   25.56% of all branches        

       6.583730779 seconds time elapsed

================================================================================
perf stat -o 129_compress.log --per-core -a taskset -c 0-3 ./spec95_129_compress.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:06:29 2021


 Performance counter stats for 'system wide':

S0-C0           1          174515.03 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              18051      context-switches          #    0.103 K/sec                  
S0-C0           1                162      cpu-migrations            #    0.001 K/sec                  
S0-C0           1               9350      page-faults               #    0.054 K/sec                  
S0-C0           1         2412967365      cycles                    #    0.014 GHz                    
S0-C0           1         1547784440      instructions              #    0.64  insn per cycle         
S0-C0           1         3698893987      branches                  #   21.195 M/sec                  
S0-C0           1          622789114      branch-misses             #   16.84% of all branches        
S0-C1           1          174515.03 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              23018      context-switches          #    0.132 K/sec                  
S0-C1           1                 45      cpu-migrations            #    0.000 K/sec                  
S0-C1           1               9657      page-faults               #    0.055 K/sec                  
S0-C1           1         3419939204      cycles                    #    0.020 GHz                    
S0-C1           1         1417312247      instructions              #    0.41  insn per cycle         
S0-C1           1         3686346604      branches                  #   21.123 M/sec                  
S0-C1           1          621379850      branch-misses             #   16.86% of all branches        
S0-C2           1          174515.03 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              14091      context-switches          #    0.081 K/sec                  
S0-C2           1                 75      cpu-migrations            #    0.000 K/sec                  
S0-C2           1              10282      page-faults               #    0.059 K/sec                  
S0-C2           1         1206549061      cycles                    #    0.007 GHz                    
S0-C2           1         1452198735      instructions              #    1.20  insn per cycle         
S0-C2           1         3687808461      branches                  #   21.132 M/sec                  
S0-C2           1          620176817      branch-misses             #   16.82% of all branches        
S0-C3           1          174515.03 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               4234      context-switches          #    0.024 K/sec                  
S0-C3           1                115      cpu-migrations            #    0.001 K/sec                  
S0-C3           1               9982      page-faults               #    0.057 K/sec                  
S0-C3           1         4265320984      cycles                    #    0.024 GHz                    
S0-C3           1         1103037089      instructions              #    0.26  insn per cycle         
S0-C3           1         3652544321      branches                  #   20.930 M/sec                  
S0-C3           1          612395122      branch-misses             #   16.77% of all branches        

     174.516770036 seconds time elapsed

================================================================================
perf stat -o 130_li.log --per-core -a taskset -c 0-3 ./spec95_130_li.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:09:23 2021


 Performance counter stats for 'system wide':

S0-C0           1           77085.33 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               8662      context-switches          #    0.112 K/sec                  
S0-C0           1                 72      cpu-migrations            #    0.001 K/sec                  
S0-C0           1                338      page-faults               #    0.004 K/sec                  
S0-C0           1         1380363462      cycles                    #    0.018 GHz                    
S0-C0           1         1041553839      instructions              #    0.75  insn per cycle         
S0-C0           1         1828399634      branches                  #   23.719 M/sec                  
S0-C0           1         1042379042      branch-misses             #   57.01% of all branches        
S0-C1           1           77085.33 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               3937      context-switches          #    0.051 K/sec                  
S0-C1           1                 37      cpu-migrations            #    0.000 K/sec                  
S0-C1           1                517      page-faults               #    0.007 K/sec                  
S0-C1           1         1106576313      cycles                    #    0.014 GHz                    
S0-C1           1          999881294      instructions              #    0.90  insn per cycle         
S0-C1           1         1822707908      branches                  #   23.645 M/sec                  
S0-C1           1         1040317261      branch-misses             #   57.08% of all branches        
S0-C2           1           77085.32 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              10433      context-switches          #    0.135 K/sec                  
S0-C2           1                 39      cpu-migrations            #    0.001 K/sec                  
S0-C2           1                368      page-faults               #    0.005 K/sec                  
S0-C2           1         1268195880      cycles                    #    0.016 GHz                    
S0-C2           1         1032994419      instructions              #    0.81  insn per cycle         
S0-C2           1         1827162612      branches                  #   23.703 M/sec                  
S0-C2           1         1043133076      branch-misses             #   57.09% of all branches        
S0-C3           1           77085.32 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               2712      context-switches          #    0.035 K/sec                  
S0-C3           1                 44      cpu-migrations            #    0.001 K/sec                  
S0-C3           1                383      page-faults               #    0.005 K/sec                  
S0-C3           1         1137190291      cycles                    #    0.015 GHz                    
S0-C3           1          984167003      instructions              #    0.87  insn per cycle         
S0-C3           1         1820592763      branches                  #   23.618 M/sec                  
S0-C3           1         1039982189      branch-misses             #   57.12% of all branches        

      77.086247309 seconds time elapsed

================================================================================
perf stat -o 132_ijpeg.log --per-core -a taskset -c 0-3 ./spec95_132_ijpeg.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:10:40 2021


 Performance counter stats for 'system wide':

S0-C0           1           22487.41 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              19308      context-switches          #    0.859 K/sec                  
S0-C0           1                 44      cpu-migrations            #    0.002 K/sec                  
S0-C0           1               2362      page-faults               #    0.105 K/sec                  
S0-C0           1         4287061379      cycles                    #    0.191 GHz                    
S0-C0           1         1980964073      instructions              #    0.46  insn per cycle         
S0-C0           1          986185295      branches                  #   43.855 M/sec                  
S0-C0           1          170369320      branch-misses             #   17.28% of all branches        
S0-C1           1           22487.42 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               1204      context-switches          #    0.054 K/sec                  
S0-C1           1                 26      cpu-migrations            #    0.001 K/sec                  
S0-C1           1               2658      page-faults               #    0.118 K/sec                  
S0-C1           1         1739246942      cycles                    #    0.077 GHz                    
S0-C1           1         3739183028      instructions              #    2.15  insn per cycle         
S0-C1           1         1068329464      branches                  #   47.508 M/sec                  
S0-C1           1          188455436      branch-misses             #   17.64% of all branches        
S0-C2           1           22487.41 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               2346      context-switches          #    0.104 K/sec                  
S0-C2           1                 22      cpu-migrations            #    0.001 K/sec                  
S0-C2           1               3151      page-faults               #    0.140 K/sec                  
S0-C2           1         3168921321      cycles                    #    0.141 GHz                    
S0-C2           1          323690140      instructions              #    0.10  insn per cycle         
S0-C2           1         1128850899      branches                  #   50.199 M/sec                  
S0-C2           1          202508898      branch-misses             #   17.94% of all branches        
S0-C3           1           22487.41 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               1683      context-switches          #    0.075 K/sec                  
S0-C3           1                 21      cpu-migrations            #    0.001 K/sec                  
S0-C3           1               2529      page-faults               #    0.112 K/sec                  
S0-C3           1         3115219059      cycles                    #    0.139 GHz                    
S0-C3           1          285053567      instructions              #    0.09  insn per cycle         
S0-C3           1         1116848899      branches                  #   49.666 M/sec                  
S0-C3           1          203376881      branch-misses             #   18.21% of all branches        

      22.487904922 seconds time elapsed

================================================================================
perf stat -o 134_perl.log --per-core -a taskset -c 0-3 ./spec95_134_perl.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:11:03 2021


 Performance counter stats for 'system wide':

S0-C0           1           30775.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               3079      context-switches          #    0.100 K/sec                  
S0-C0           1                 29      cpu-migrations            #    0.001 K/sec                  
S0-C0           1               9328      page-faults               #    0.303 K/sec                  
S0-C0           1          775372793      cycles                    #    0.025 GHz                    
S0-C0           1          846981429      instructions              #    1.09  insn per cycle         
S0-C0           1         2731701896      branches                  #   88.761 M/sec                  
S0-C0           1          491983453      branch-misses             #   18.01% of all branches        
S0-C1           1           30775.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               1994      context-switches          #    0.065 K/sec                  
S0-C1           1                 20      cpu-migrations            #    0.001 K/sec                  
S0-C1           1               9155      page-faults               #    0.297 K/sec                  
S0-C1           1         1085638849      cycles                    #    0.035 GHz                    
S0-C1           1          823408974      instructions              #    0.76  insn per cycle         
S0-C1           1         2728723703      branches                  #   88.665 M/sec                  
S0-C1           1          477470158      branch-misses             #   17.50% of all branches        
S0-C2           1           30775.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               2420      context-switches          #    0.079 K/sec                  
S0-C2           1                 15      cpu-migrations            #    0.000 K/sec                  
S0-C2           1               9411      page-faults               #    0.306 K/sec                  
S0-C2           1         1021336797      cycles                    #    0.033 GHz                    
S0-C2           1          825268041      instructions              #    0.81  insn per cycle         
S0-C2           1         2729167296      branches                  #   88.679 M/sec                  
S0-C2           1          477702832      branch-misses             #   17.50% of all branches        
S0-C3           1           30775.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               3288      context-switches          #    0.107 K/sec                  
S0-C3           1                 15      cpu-migrations            #    0.000 K/sec                  
S0-C3           1               9157      page-faults               #    0.298 K/sec                  
S0-C3           1         1295812397      cycles                    #    0.042 GHz                    
S0-C3           1          827845670      instructions              #    0.64  insn per cycle         
S0-C3           1         2729329564      branches                  #   88.684 M/sec                  
S0-C3           1          492331647      branch-misses             #   18.04% of all branches        

      30.776343942 seconds time elapsed

================================================================================
perf stat -o 141_apsi.log --per-core -a taskset -c 0-3 ./spec95_141_apsi.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:11:34 2021


 Performance counter stats for 'system wide':

S0-C0           1           67152.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               8062      context-switches          #    0.120 K/sec                  
S0-C0           1                 79      cpu-migrations            #    0.001 K/sec                  
S0-C0           1                969      page-faults               #    0.014 K/sec                  
S0-C0           1          631366178      cycles                    #    0.009 GHz                    
S0-C0           1         2131614767      instructions              #    3.38  insn per cycle         
S0-C0           1          875536320      branches                  #   13.038 M/sec                  
S0-C0           1           41519179      branch-misses             #    4.74% of all branches        
S0-C1           1           67152.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               6002      context-switches          #    0.089 K/sec                  
S0-C1           1                 61      cpu-migrations            #    0.001 K/sec                  
S0-C1           1               1085      page-faults               #    0.016 K/sec                  
S0-C1           1          801500276      cycles                    #    0.012 GHz                    
S0-C1           1         2119937126      instructions              #    2.64  insn per cycle         
S0-C1           1          873552929      branches                  #   13.009 M/sec                  
S0-C1           1           41172747      branch-misses             #    4.71% of all branches        
S0-C2           1           67152.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               5071      context-switches          #    0.076 K/sec                  
S0-C2           1                 33      cpu-migrations            #    0.000 K/sec                  
S0-C2           1                925      page-faults               #    0.014 K/sec                  
S0-C2           1         1221724996      cycles                    #    0.018 GHz                    
S0-C2           1         2099679016      instructions              #    1.72  insn per cycle         
S0-C2           1          871518279      branches                  #   12.978 M/sec                  
S0-C2           1           40658986      branch-misses             #    4.67% of all branches        
S0-C3           1           67152.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               2758      context-switches          #    0.041 K/sec                  
S0-C3           1                 57      cpu-migrations            #    0.001 K/sec                  
S0-C3           1               1150      page-faults               #    0.017 K/sec                  
S0-C3           1           75053850      cycles                    #    0.001 GHz                    
S0-C3           1         2084019063      instructions              #   27.77  insn per cycle         
S0-C3           1          869121345      branches                  #   12.943 M/sec                  
S0-C3           1           39770709      branch-misses             #    4.58% of all branches        

      67.153060137 seconds time elapsed

================================================================================
perf stat -o 145_fpppp.log --per-core -a taskset -c 0-3 ./spec95_145_fpppp.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:12:41 2021


 Performance counter stats for 'system wide':

S0-C0           1          136463.78 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              11402      context-switches          #    0.084 K/sec                  
S0-C0           1                 76      cpu-migrations            #    0.001 K/sec                  
S0-C0           1                326      page-faults               #    0.002 K/sec                  
S0-C0           1         1276556295      cycles                    #    0.009 GHz                    
S0-C0           1         3769844638      instructions              #    2.95  insn per cycle         
S0-C0           1         1273296137      branches                  #    9.331 M/sec                  
S0-C0           1          124318996      branch-misses             #    9.76% of all branches        
S0-C1           1          136463.78 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              10154      context-switches          #    0.074 K/sec                  
S0-C1           1                 41      cpu-migrations            #    0.000 K/sec                  
S0-C1           1                416      page-faults               #    0.003 K/sec                  
S0-C1           1          478987800      cycles                    #    0.004 GHz                    
S0-C1           1         3722443915      instructions              #    7.77  insn per cycle         
S0-C1           1         1267199628      branches                  #    9.286 M/sec                  
S0-C1           1          123786297      branch-misses             #    9.77% of all branches        
S0-C2           1          136463.78 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              15751      context-switches          #    0.115 K/sec                  
S0-C2           1                 25      cpu-migrations            #    0.000 K/sec                  
S0-C2           1                161      page-faults               #    0.001 K/sec                  
S0-C2           1          863622136      cycles                    #    0.006 GHz                    
S0-C2           1         3756961644      instructions              #    4.35  insn per cycle         
S0-C2           1         1271882584      branches                  #    9.320 M/sec                  
S0-C2           1          124807863      branch-misses             #    9.81% of all branches        
S0-C3           1          136463.78 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               6738      context-switches          #    0.049 K/sec                  
S0-C3           1                 44      cpu-migrations            #    0.000 K/sec                  
S0-C3           1                469      page-faults               #    0.003 K/sec                  
S0-C3           1          736597369      cycles                    #    0.005 GHz                    
S0-C3           1         3787082425      instructions              #    5.14  insn per cycle         
S0-C3           1         1272503369      branches                  #    9.325 M/sec                  
S0-C3           1          123408026      branch-misses             #    9.70% of all branches        

     136.465188327 seconds time elapsed

================================================================================
perf stat -o 146_wave5.log --per-core -a taskset -c 0-3 ./spec95_146_wave5.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:14:58 2021


 Performance counter stats for 'system wide':

S0-C0           1           67191.72 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              21909      context-switches          #    0.326 K/sec                  
S0-C0           1                 52      cpu-migrations            #    0.001 K/sec                  
S0-C0           1              10559      page-faults               #    0.157 K/sec                  
S0-C0           1         3482812366      cycles                    #    0.052 GHz                    
S0-C0           1         2760059066      instructions              #    0.79  insn per cycle         
S0-C0           1         1352331587      branches                  #   20.126 M/sec                  
S0-C0           1           23828372      branch-misses             #    1.76% of all branches        
S0-C1           1           67191.72 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               2774      context-switches          #    0.041 K/sec                  
S0-C1           1                 28      cpu-migrations            #    0.000 K/sec                  
S0-C1           1              10604      page-faults               #    0.158 K/sec                  
S0-C1           1           32350146      cycles                    #    0.000 GHz                    
S0-C1           1         2579416253      instructions              #   79.73  insn per cycle         
S0-C1           1         1327125330      branches                  #   19.751 M/sec                  
S0-C1           1           17343654      branch-misses             #    1.31% of all branches        
S0-C2           1           67191.72 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               5597      context-switches          #    0.083 K/sec                  
S0-C2           1                 30      cpu-migrations            #    0.000 K/sec                  
S0-C2           1              10565      page-faults               #    0.157 K/sec                  
S0-C2           1         3590425548      cycles                    #    0.053 GHz                    
S0-C2           1         2566243138      instructions              #    0.71  insn per cycle         
S0-C2           1         1326429614      branches                  #   19.741 M/sec                  
S0-C2           1           17025123      branch-misses             #    1.28% of all branches        
S0-C3           1           67191.72 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               5698      context-switches          #    0.085 K/sec                  
S0-C3           1                 29      cpu-migrations            #    0.000 K/sec                  
S0-C3           1              10612      page-faults               #    0.158 K/sec                  
S0-C3           1         1361430983      cycles                    #    0.020 GHz                    
S0-C3           1         2620938363      instructions              #    1.93  insn per cycle         
S0-C3           1         1331932752      branches                  #   19.823 M/sec                  
S0-C3           1           18272960      branch-misses             #    1.37% of all branches        

      67.192550205 seconds time elapsed

================================================================================
perf stat -o 147_vortex.log --per-core -a taskset -c 0-3 ./spec95_147_vortex.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Thu Feb 25 09:16:05 2021


 Performance counter stats for 'system wide':

S0-C0           1           96429.72 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              16242      context-switches          #    0.168 K/sec                  
S0-C0           1                 89      cpu-migrations            #    0.001 K/sec                  
S0-C0           1              12269      page-faults               #    0.127 K/sec                  
S0-C0           1          824791532      cycles                    #    0.009 GHz                    
S0-C0           1         3631290873      instructions              #    4.40  insn per cycle         
S0-C0           1         1564233853      branches                  #   16.221 M/sec                  
S0-C0           1          393983178      branch-misses             #   25.19% of all branches        
S0-C1           1           96429.72 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               5129      context-switches          #    0.053 K/sec                  
S0-C1           1                 49      cpu-migrations            #    0.001 K/sec                  
S0-C1           1              11972      page-faults               #    0.124 K/sec                  
S0-C1           1          666312242      cycles                    #    0.007 GHz                    
S0-C1           1         3477593646      instructions              #    5.22  insn per cycle         
S0-C1           1         1545708545      branches                  #   16.029 M/sec                  
S0-C1           1          393309008      branch-misses             #   25.45% of all branches        
S0-C2           1           96429.71 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               8677      context-switches          #    0.090 K/sec                  
S0-C2           1                 59      cpu-migrations            #    0.001 K/sec                  
S0-C2           1              12223      page-faults               #    0.127 K/sec                  
S0-C2           1         1230497428      cycles                    #    0.013 GHz                    
S0-C2           1         3519688436      instructions              #    2.86  insn per cycle         
S0-C2           1         1551050725      branches                  #   16.085 M/sec                  
S0-C2           1          389912536      branch-misses             #   25.14% of all branches        
S0-C3           1           96429.71 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               1999      context-switches          #    0.021 K/sec                  
S0-C3           1                 59      cpu-migrations            #    0.001 K/sec                  
S0-C3           1              11800      page-faults               #    0.122 K/sec                  
S0-C3           1         1779078647      cycles                    #    0.018 GHz                    
S0-C3           1         3479200475      instructions              #    1.96  insn per cycle         
S0-C3           1         1545086725      branches                  #   16.023 M/sec                  
S0-C3           1          387572068      branch-misses             #   25.08% of all branches        

      96.430751454 seconds time elapsed

================================================================================
perf stat -o aes_benchmark.log --per-core -a taskset -c 0-3 ./aes_benchmark 4
SUCCESS::pthread_create() succeeded
SUCCESS::pthread_create() succeeded
SUCCESS::pthread_create() succeeded
SUCCESS::pthread_create() succeeded
AES Tests: SUCCEEDED
AES Tests: SUCCEEDED
AES Tests: SUCCEEDED
AES Tests: SUCCEEDED
# started on Thu Feb 25 09:17:41 2021


 Performance counter stats for 'system wide':

S0-C0           1            6545.66 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1                840      context-switches          #    0.128 K/sec                  
S0-C0           1                 20      cpu-migrations            #    0.003 K/sec                  
S0-C0           1                387      page-faults               #    0.059 K/sec                  
S0-C0           1         4105065810      cycles                    #    0.627 GHz                    
S0-C0           1         3440838137      instructions              #    0.84  insn per cycle         
S0-C0           1          178523967      branches                  #   27.274 M/sec                  
S0-C0           1            3098173      branch-misses             #    1.74% of all branches        
S0-C1           1            6545.66 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1                514      context-switches          #    0.079 K/sec                  
S0-C1           1                 29      cpu-migrations            #    0.004 K/sec                  
S0-C1           1                472      page-faults               #    0.072 K/sec                  
S0-C1           1         4096424633      cycles                    #    0.626 GHz                    
S0-C1           1         3439742000      instructions              #    0.84  insn per cycle         
S0-C1           1          178376616      branches                  #   27.251 M/sec                  
S0-C1           1            3076181      branch-misses             #    1.72% of all branches        
S0-C2           1            6545.66 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1                955      context-switches          #    0.146 K/sec                  
S0-C2           1                 24      cpu-migrations            #    0.004 K/sec                  
S0-C2           1                396      page-faults               #    0.060 K/sec                  
S0-C2           1         4102748735      cycles                    #    0.627 GHz                    
S0-C2           1         3441377232      instructions              #    0.84  insn per cycle         
S0-C2           1          178596587      branches                  #   27.285 M/sec                  
S0-C2           1            3141971      branch-misses             #    1.76% of all branches        
S0-C3           1            6545.66 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1                420      context-switches          #    0.064 K/sec                  
S0-C3           1                 24      cpu-migrations            #    0.004 K/sec                  
S0-C3           1                393      page-faults               #    0.060 K/sec                  
S0-C3           1         4089440770      cycles                    #    0.625 GHz                    
S0-C3           1         3436620641      instructions              #    0.84  insn per cycle         
S0-C3           1          177957596      branches                  #   27.187 M/sec                  
S0-C3           1            2936598      branch-misses             #    1.65% of all branches        

       6.546013238 seconds time elapsed

================================================================================
This benchmark has been compiled to use 16 threads. You have to repcompile it if you want to use different number of threads. See ../install/setup.sh for details.
cp: cannot stat 'coremark_benchmark.log': No such file or directory
================================================================================
================================================================================
Printing results
File: 126_gcc.txt
instructions: 13386032395
=(3345514967+3344258261+3344314039+3351945128)
frequencies: 0.616
=(0.608+0.624+0.626+0.606)/4
ipcs:0.82
=1*(0.84+0.81+0.81+0.84)/4

File: sort_perf_output_1614243046080633366.txt
instructions: 11264849248
=(3363756791+1490531583+3157206245+3253354629)
frequencies: 0.047
=(0.047+0.076+0.032+0.034)/4
ipcs:2.09
=1*(2.11+0.57+2.92+2.77)/4

File: run_plot_theilsen.txt
instructions: 5581074314
=(1316387260+1389092216+1376116266+1499478572)
frequencies: 0.007
=(0.005+0.004+0.005+0.015)/4
ipcs:6.54
=1*(6.66+8.90+7.83+2.76)/4

File: 147_vortex.txt
instructions: 14107773430
=(3631290873+3477593646+3519688436+3479200475)
frequencies: 0.012
=(0.009+0.007+0.013+0.018)/4
ipcs:3.61
=1*(4.40+5.22+2.86+1.96)/4

File: 145_fpppp.txt
instructions: 15036332622
=(3769844638+3722443915+3756961644+3787082425)
frequencies: 0.006
=(0.009+0.004+0.006+0.005)/4
ipcs:5.05
=1*(2.95+7.77+4.35+5.14)/4

File: 130_li.txt
instructions: 4058596555
=(1041553839+999881294+1032994419+984167003)
frequencies: 0.016
=(0.018+0.014+0.016+0.015)/4
ipcs:0.83
=1*(0.75+0.90+0.81+0.87)/4

File: sqlite_4_threads.txt
instructions: 2904706652
=(740002642+712560466+750223761+701919783)
frequencies: 0.257
=(0.266+0.251+0.267+0.243)/4
ipcs:0.34
=1*(0.33+0.34+0.33+0.34)/4

File: 103_su2cor.txt
instructions: 4433954664
=(47242824+4254221289+46907798+85582753)
frequencies: 0.029
=(0.030+0.029+0.026+0.031)/4
ipcs:0.32
=1*(0.01+1.23+0.02+0.02)/4

File: 107_mgrid.txt
instructions: 949725286
=(254384386+228820950+259634092+206885858)
frequencies: 0.035
=(0.000+0.048+0.047+0.044)/4
ipcs:13.32
=1*(53.11+0.05+0.06+0.05)/4

File: word2vec_perf_output_1614242536695196733.txt
instructions: 11107243765
=(2296836536+2405753898+2133836859+4270816472)
frequencies: 0.028
=(0.031+0.029+0.024+0.030)/4
ipcs:1.05
=1*(0.80+0.89+0.98+1.54)/4

File: 101_tomcatv.txt
instructions: 13192346665
=(3351564916+3250324056+3322866315+3267591378)
frequencies: 0.032
=(0.035+0.026+0.034+0.034)/4
ipcs:1.26
=1*(1.16+1.52+1.20+1.18)/4

File: 132_ijpeg.txt
instructions: 6328890808
=(1980964073+3739183028+323690140+285053567)
frequencies: 0.137
=(0.191+0.077+0.141+0.139)/4
ipcs:0.70
=1*(0.46+2.15+0.10+0.09)/4

File: 146_wave5.txt
instructions: 10526656820
=(2760059066+2579416253+2566243138+2620938363)
frequencies: 0.031
=(0.052+0.000+0.053+0.020)/4
ipcs:20.79
=1*(0.79+79.73+0.71+1.93)/4

File: grep_perf_output_1614242729796774624.txt
instructions: 8935135285
=(1470094828+3988821068+1174534662+2301684727)
frequencies: 0.016
=(0.018+0.004+0.021+0.020)/4
ipcs:2.05
=1*(0.56+6.44+0.39+0.80)/4

File: run_plot_svm_nonlinear.txt
instructions: 1703557027
=(483883445+474151192+366736122+378786268)
frequencies: 0.218
=(0.219+0.226+0.216+0.210)/4
ipcs:0.12
=1*(0.14+0.13+0.11+0.11)/4

File: word2vec_perf_output_no_branch_1614242536703122790.txt
instructions: 8031634669
=(1657756125+2574412010+3214170592+585295942)
frequencies: 0.024
=(0.034+0.011+0.029+0.021)/4
ipcs:1.08
=1*(0.49+2.39+1.14+0.29)/4

File: aes_benchmark.txt
instructions: 13758578010
=(3440838137+3439742000+3441377232+3436620641)
frequencies: 0.626
=(0.627+0.626+0.627+0.625)/4
ipcs:0.84
=1*(0.84+0.84+0.84+0.84)/4

File: lda_perf_output_1614242874087849522.txt
instructions: 13054442623
=(3275739416+3222717360+3296085075+3259900772)
frequencies: 0.115
=(0.113+0.117+0.113+0.117)/4
ipcs:2.57
=1*(2.62+2.49+2.65+2.51)/4

File: NaiveBayes_perf_output_1614242885337692899.txt
instructions: 8397031914
=(2117713854+2078210533+2088599210+2112508317)
frequencies: 0.070
=(0.072+0.071+0.065+0.071)/4
ipcs:1.06
=1*(1.03+1.03+1.14+1.05)/4

File: wordcounts_perf_output_1614242913760560126.txt
instructions: 4432417849
=(192426200+144505608+4094924306+561735)
frequencies: 0.189
=(0.190+0.192+0.184+0.189)/4
ipcs:0.39
=1*(0.07+0.05+1.43+0.00)/4

File: run_forest_importances_faces.txt
instructions: 12039832858
=(2894599907+3040917908+3001974711+3102340332)
frequencies: 0.038
=(0.135+0.004+0.003+0.009)/4
ipcs:16.88
=1*(0.69+23.38+32.18+11.28)/4

File: 102_swim.txt
instructions: 7330110599
=(1830602472+1807034841+1877024435+1815448851)
frequencies: 0.014
=(0.013+0.015+0.016+0.014)/4
ipcs:1.90
=1*(2.11+1.84+1.71+1.92)/4

File: go_word2vec_4_threads.txt
instructions: 8058000579
=(84516577+3707573465+3373680517+892230020)
frequencies: 0.070
=(0.097+0.076+0.054+0.054)/4
ipcs:0.86
=1*(0.02+1.31+1.67+0.45)/4

File: 104_hydro2d.txt
instructions: 6018027722
=(1608068786+1480311789+1481790585+1447856562)
frequencies: 0.025
=(0.007+0.000+0.046+0.045)/4
ipcs:87.56
=1*(2.48+347.08+0.35+0.34)/4

File: kmeans_perf_output_1614242929411191001.txt
instructions: 846623172
=(118592890+423149095+136841234+168039953)
frequencies: 0.183
=(0.234+0.031+0.234+0.234)/4
ipcs:0.24
=1*(0.03+0.84+0.04+0.04)/4

File: md5_perf_output_1614242945691781228.txt
instructions: 10330179339
=(4002163632+2211072287+2148335209+1968608211)
frequencies: 0.019
=(0.037+0.016+0.013+0.009)/4
ipcs:1.58
=1*(1.08+1.39+1.71+2.16)/4

File: run_multioutput_face_completion.txt
instructions: 14528003505
=(3585074180+3425140813+3705887510+3811901002)
frequencies: 0.055
=(0.055+0.056+0.056+0.054)/4
ipcs:1.25
=1*(1.24+1.16+1.25+1.33)/4

File: 141_apsi.txt
instructions: 8435249972
=(2131614767+2119937126+2099679016+2084019063)
frequencies: 0.010
=(0.009+0.012+0.018+0.001)/4
ipcs:8.88
=1*(3.38+2.64+1.72+27.77)/4

File: 125_turb3d.txt
instructions: 7692815606
=(2066063499+1862396173+1929604016+1834751918)
frequencies: 0.024
=(0.031+0.020+0.025+0.018)/4
ipcs:0.90
=1*(0.70+0.97+0.81+1.11)/4

File: 134_perl.txt
instructions: 3323504114
=(846981429+823408974+825268041+827845670)
frequencies: 0.034
=(0.025+0.035+0.033+0.042)/4
ipcs:0.83
=1*(1.09+0.76+0.81+0.64)/4

File: 099_go.txt
instructions: 5526022426
=(1417859172+1348140789+1388599669+1371422796)
frequencies: 0.050
=(0.060+0.044+0.053+0.043)/4
ipcs:0.58
=1*(0.49+0.64+0.54+0.66)/4

File: 110_applu.txt
instructions: 1866231797
=(501734932+431144377+442620177+490732311)
frequencies: 0.026
=(0.026+0.026+0.026+0.026)/4
ipcs:0.22
=1*(0.23+0.20+0.21+0.23)/4

File: 129_compress.txt
instructions: 5520332511
=(1547784440+1417312247+1452198735+1103037089)
frequencies: 0.016
=(0.014+0.020+0.007+0.024)/4
ipcs:0.63
=1*(0.64+0.41+1.20+0.26)/4

================================================================================
Finished running benchmarks
================================================================================
