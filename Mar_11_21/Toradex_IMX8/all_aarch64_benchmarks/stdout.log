Architecture:        aarch64
Byte Order:          Little Endian
CPU(s):              4
On-line CPU(s) list: 0-3
Thread(s) per core:  1
Core(s) per socket:  4
Socket(s):           1
NUMA node(s):        1
Vendor ID:           ARM
Model:               2
Model name:          Cortex-A35
Stepping:            r0p2
CPU max MHz:         1200.0000
CPU min MHz:         900.0000
BogoMIPS:            16.00
L1d cache:           unknown size
L1i cache:           unknown size
L2 cache:            unknown size
NUMA node0 CPU(s):   0-3
Flags:               fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid
MemTotal:        1813300 kB
================================================================================
/root/i-benchmarks/word2vec/bin
perf stat -o ../data/word2vec_perf_output_1615551018059637436.txt --per-core -a taskset -c 0-3 ./word2vec -train ../data/text8_1.7mb -output ../data/text8-vector.bin -cbow 1 -size 200 -window 8 -negative 25 -hs 0 -sample 1e-4 -threads 4 -binary 1 -iter 15
Starting training using file ../data/text8_1.7mb
Vocab size: 5847
Words in train file: 252418
Alpha: 0.000091  Progress: 100.61%  Words/thread/sec: 10.41k  # started on Fri Mar 12 12:10:18 2021


 Performance counter stats for 'system wide':

S0-C0           1          100152.34 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              40493      context-switches          #    0.404 K/sec                  
S0-C0           1               1171      cpu-migrations            #    0.012 K/sec                  
S0-C0           1              11764      page-faults               #    0.117 K/sec                  
S0-C0           1       114552017158      cycles                    #    1.144 GHz                    
S0-C0           1        57891202003      instructions              #    0.51  insn per cycle         
S0-C0           1         8410522302      branches                  #   83.977 M/sec                  
S0-C0           1           80934749      branch-misses             #    0.96% of all branches        
S0-C1           1          100152.35 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              25990      context-switches          #    0.260 K/sec                  
S0-C1           1               1155      cpu-migrations            #    0.012 K/sec                  
S0-C1           1              20399      page-faults               #    0.204 K/sec                  
S0-C1           1       117034827286      cycles                    #    1.169 GHz                    
S0-C1           1        60131884422      instructions              #    0.51  insn per cycle         
S0-C1           1         8629054164      branches                  #   86.159 M/sec                  
S0-C1           1           72367751      branch-misses             #    0.84% of all branches        
S0-C2           1          100152.35 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              33078      context-switches          #    0.330 K/sec                  
S0-C2           1               1025      cpu-migrations            #    0.010 K/sec                  
S0-C2           1              15448      page-faults               #    0.154 K/sec                  
S0-C2           1       115643504098      cycles                    #    1.155 GHz                    
S0-C2           1        59376171981      instructions              #    0.51  insn per cycle         
S0-C2           1         8632315926      branches                  #   86.192 M/sec                  
S0-C2           1           72109245      branch-misses             #    0.84% of all branches        
S0-C3           1          100152.36 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              33521      context-switches          #    0.335 K/sec                  
S0-C3           1               1226      cpu-migrations            #    0.012 K/sec                  
S0-C3           1              15766      page-faults               #    0.157 K/sec                  
S0-C3           1       113694960116      cycles                    #    1.135 GHz                    
S0-C3           1        58478884010      instructions              #    0.51  insn per cycle         
S0-C3           1         8508400032      branches                  #   84.955 M/sec                  
S0-C3           1           78333084      branch-misses             #    0.92% of all branches        

     100.163221333 seconds time elapsed

perf stat -o ../data/word2vec_perf_output_no_branch_1615551018068751435.txt --per-core -a taskset -c 0-3 ./word2vec_no-guess-branch-probability -train ../data/text8_3.3mb -output ../data/text8-vector.bin -cbow 1 -size 200 -window 8 -negative 25 -hs 0 -sample 1e-4 -threads 4 -binary 1 -iter 15
Starting training using file ../data/text8_3.3mb
Vocab size: 9546
Words in train file: 524166
Alpha: 0.000005  Progress: 100.43%  Words/thread/sec: 20.61k  # started on Fri Mar 12 12:11:58 2021


 Performance counter stats for 'system wide':

S0-C0           1          103665.53 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              28668      context-switches          #    0.277 K/sec                  
S0-C0           1               1433      cpu-migrations            #    0.014 K/sec                  
S0-C0           1               2219      page-faults               #    0.021 K/sec                  
S0-C0           1       116690460695      cycles                    #    1.126 GHz                    
S0-C0           1        40642867119      instructions              #    0.35  insn per cycle         
S0-C0           1         1276828584      branches                  #   12.317 M/sec                  
S0-C0           1           65451983      branch-misses             #    5.13% of all branches        
S0-C1           1          103665.53 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              32118      context-switches          #    0.310 K/sec                  
S0-C1           1               1500      cpu-migrations            #    0.014 K/sec                  
S0-C1           1               1127      page-faults               #    0.011 K/sec                  
S0-C1           1       117707312905      cycles                    #    1.135 GHz                    
S0-C1           1        41176012324      instructions              #    0.35  insn per cycle         
S0-C1           1         1282892441      branches                  #   12.375 M/sec                  
S0-C1           1           63619888      branch-misses             #    4.96% of all branches        
S0-C2           1          103665.53 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              26444      context-switches          #    0.255 K/sec                  
S0-C2           1               1284      cpu-migrations            #    0.012 K/sec                  
S0-C2           1               4677      page-faults               #    0.045 K/sec                  
S0-C2           1       123667220411      cycles                    #    1.193 GHz                    
S0-C2           1        43229815258      instructions              #    0.35  insn per cycle         
S0-C2           1         1508655708      branches                  #   14.553 M/sec                  
S0-C2           1           66732976      branch-misses             #    4.42% of all branches        
S0-C3           1          103665.53 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              28150      context-switches          #    0.272 K/sec                  
S0-C3           1               1416      cpu-migrations            #    0.014 K/sec                  
S0-C3           1               2229      page-faults               #    0.022 K/sec                  
S0-C3           1       117889703838      cycles                    #    1.137 GHz                    
S0-C3           1        41443266287      instructions              #    0.35  insn per cycle         
S0-C3           1         1323637878      branches                  #   12.768 M/sec                  
S0-C3           1           67322764      branch-misses             #    5.09% of all branches        

     103.670828716 seconds time elapsed

================================================================================
++ pwd
++ date +%s%N
+ GREP_PERF=/root/i-benchmarks/MPI/bin/grep_perf_output_1615551223461916882.txt
+ NUMBER_OF_THREADS=16
+ getopts t:o:h o
+ case $o in
+ NUMBER_OF_THREADS=4
+ getopts t:o:h o
+ source /etc/profile
++ '[' -x /usr/bin/id ']'
++ '[' -z 0 ']'
+++ /usr/bin/id -un
++ USER=root
++ LOGNAME=root
++ MAIL=/var/spool/mail/root
++ '[' 0 = 0 ']'
++ pathmunge /usr/sbin
++ case ":${PATH}:" in
++ pathmunge /usr/local/sbin
++ case ":${PATH}:" in
+++ /usr/bin/hostname
++ HOSTNAME=
++ HISTSIZE=1000
++ '[' '' = ignorespace ']'
++ export HISTCONTROL=ignoredups
++ HISTCONTROL=ignoredups
++ export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL
++ '[' 0 -gt 199 ']'
++ umask 022
++ for i in /etc/profile.d/*.sh /etc/profile.d/sh.local
++ '[' -r '/etc/profile.d/*.sh' ']'
++ for i in /etc/profile.d/*.sh /etc/profile.d/sh.local
++ '[' -r /etc/profile.d/sh.local ']'
++ unset i
++ unset -f pathmunge
++ '[' -n '5.0.3(1)-release' ']'
++ '[' -f /etc/bashrc ']'
++ export BigdataBench_HOMEMPI=/root/i-benchmarks/MPI/bin/mpi/BigDataBench_V4.0_MPI/
++ BigdataBench_HOMEMPI=/root/i-benchmarks/MPI/bin/mpi/BigDataBench_V4.0_MPI/
++ export JAVA_HOME=
++ JAVA_HOME=
++ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin
++ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin
++ export CLASSPATH=.:/jre/lib:/lib/tools.jar
++ CLASSPATH=.:/jre/lib:/lib/tools.jar
++ export JRE_HOME=/jre
++ JRE_HOME=/jre
++ export MPI_HOME=/root/i-benchmarks/MPI/bin/mpi/dest
++ MPI_HOME=/root/i-benchmarks/MPI/bin/mpi/dest
++ export HYDRA_HOST_FILE=/etc/hydra/hosts
++ HYDRA_HOST_FILE=/etc/hydra/hosts
++ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin
++ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin
++ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin
++ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/jre/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin:/root/i-benchmarks/MPI/bin/mpi/dest/bin
++ export LD_LIBRARY_PATH=:/root/i-benchmarks/MPI/bin/mpi/dest/lib
++ LD_LIBRARY_PATH=:/root/i-benchmarks/MPI/bin/mpi/dest/lib
+ echo 'perf stat -o /root/i-benchmarks/MPI/bin/grep_perf_output_1615551223461916882.txt --per-core -a taskset -c 0-3 ./mpi_grep_benchmark.sh -t 4'
perf stat -o /root/i-benchmarks/MPI/bin/grep_perf_output_1615551223461916882.txt --per-core -a taskset -c 0-3 ./mpi_grep_benchmark.sh -t 4
+ perf stat -o /root/i-benchmarks/MPI/bin/grep_perf_output_1615551223461916882.txt --per-core -a taskset -c 0-3 ./mpi_grep_benchmark.sh -t 4
+ NUMBER_OF_THREADS=16
+ getopts t:h o
+ case $o in
+ NUMBER_OF_THREADS=4
+ getopts t:h o
+ cd /root/i-benchmarks/MPI/bin/mpi/BigDataBench_V4.0_MPI//MicroBenchmark/OfflineAnalytics/Grep
+ INPUT='4\ne'
+ ./run_Grep.sh
+ echo -e '4\ne'
please print your total processes
please print the pattern
Process 0 of 4 is on 934418149cfd
##folder
Process 3 of 4 is on 934418149cfd
##folderProcess 1 of 4 is on 934418149cfd
process file　./data/512MB_input_17
Process 2 of 4 is on 934418149cfd
##folder

process file　./data/512MB_input_17
process file　./data/512MB_input_17
##folder
process file　./data/512MB_input_17
process file　./data/128MB_input1
process file　./data/128MB_input1
process file　./data/128MB_input1
process file　./data/128MB_input1
process file　./data/512MB_input_2
process file　./data/512MB_input_2
process file　./data/512MB_input_2
process file　./data/512MB_input_2
process file　./data/lda_wiki1w_1
process file　./data/lda_wiki1w_1
process file　./data/lda_wiki1w_1
process file　./data/lda_wiki1w_1
process file　./data/128MB_input5
process file　./data/128MB_input5
process file　./data/128MB_input5
process file　./data/128MB_input5
process file　./data/128MB_input2
process file　./data/128MB_input2
process file　./data/128MB_input2
process file　./data/128MB_input2
process file　./data/128MB_input3
process file　./data/128MB_input3
process file　./data/128MB_input3
process file　./data/128MB_input3
process file　./data/512MB_input_12
process file　./data/512MB_input_12
process file　./data/512MB_input_12
process file　./data/512MB_input_12
process file　./data/512MB_input_10
process file　./data/512MB_input_10
process file　./data/512MB_input_10
process file　./data/512MB_input_10
process file　./data/512MB_input_8
process file　./data/512MB_input_8
process file　./data/512MB_input_8
process file　./data/512MB_input_8
process file　./data/512MB_input_3
process file　./data/512MB_input_3
process file　./data/512MB_input_3
process file　./data/512MB_input_3
process file　./data/512MB_input_7
process file　./data/512MB_input_7
process file　./data/512MB_input_7
process file　./data/512MB_input_7
process file　./data/512MB_input_11
process file　./data/512MB_input_11
process file　./data/512MB_input_11
process file　./data/512MB_input_11
process file　./data/512MB_input_9
process file　./data/512MB_input_9
process file　./data/512MB_input_9
process file　./data/512MB_input_9
process file　./data/128MB_input4
process file　./data/128MB_input4
process file　./data/128MB_input4
process file　./data/128MB_input4
process file　./data/512MB_input_6
process file　./data/512MB_input_6
process file　./data/512MB_input_6
process file　./data/512MB_input_6
process file　./data/512MB_input_15
process file　./data/512MB_input_15
process file　./data/512MB_input_15
process file　./data/512MB_input_15
process file　./data/512MB_input_13
process file　./data/512MB_input_13
process file　./data/512MB_input_13
process file　./data/512MB_input_13
process file　./data/512MB_input_18
process file　./data/512MB_input_18
process file　./data/512MB_input_18
process file　./data/512MB_input_18
process file　./data/512MB_input_4
process file　./data/512MB_input_4
process file　./data/512MB_input_4
process file　./data/512MB_input_4
process file　./data/256MB_input
process file　./data/256MB_input
process file　./data/256MB_input
process file　./data/256MB_input
process file　./data/246MB_input
process file　./data/246MB_input
process file　./data/246MB_input
process file　./data/246MB_input
process file　./data/512MB_input_5
process file　./data/512MB_input_5
process file　./data/512MB_input_5
process file　./data/512MB_input_5
process file　./data/512MB_input_16
process file　./data/512MB_input_16
process file　./data/512MB_input_16
process file　./data/512MB_input_16
process file　./data/lda_wiki1w_2
process file　./data/lda_wiki1w_2
process file　./data/lda_wiki1w_2
process file　./data/lda_wiki1w_2
process file　./data/512MB_input
process file　./data/512MB_input
process file　./data/512MB_input
process file　./data/512MB_input
process file　./data/512MB_input_14
process file　./data/512MB_input_14
process file　./data/512MB_input_14
process file　./data/512MB_input_14
Total Count 1028366326
wall clock time = 148.038
+ cd -
/root/i-benchmarks/MPI/bin
+ '[' -z '' ']'
+ cat /root/i-benchmarks/MPI/bin/grep_perf_output_1615551223461916882.txt
# started on Fri Mar 12 12:13:43 2021


 Performance counter stats for 'system wide':

S0-C0           1          148335.47 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1             169953      context-switches          #    0.001 M/sec                  
S0-C0           1               4885      cpu-migrations            #    0.033 K/sec                  
S0-C0           1              34639      page-faults               #    0.234 K/sec                  
S0-C0           1        69379655594      cycles                    #    0.468 GHz                    
S0-C0           1        41401281790      instructions              #    0.60  insn per cycle         
S0-C0           1         5385495456      branches                  #   36.306 M/sec                  
S0-C0           1          475542416      branch-misses             #    8.83% of all branches        
S0-C1           1          148335.48 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1             159219      context-switches          #    0.001 M/sec                  
S0-C1           1               4719      cpu-migrations            #    0.032 K/sec                  
S0-C1           1              39393      page-faults               #    0.266 K/sec                  
S0-C1           1        77044366001      cycles                    #    0.519 GHz                    
S0-C1           1        48112578211      instructions              #    0.62  insn per cycle         
S0-C1           1         6226671226      branches                  #   41.977 M/sec                  
S0-C1           1          525150798      branch-misses             #    8.43% of all branches        
S0-C2           1          148335.48 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1             128792      context-switches          #    0.868 K/sec                  
S0-C2           1               4669      cpu-migrations            #    0.031 K/sec                  
S0-C2           1              32414      page-faults               #    0.219 K/sec                  
S0-C2           1        84622583008      cycles                    #    0.570 GHz                    
S0-C2           1        53837948354      instructions              #    0.64  insn per cycle         
S0-C2           1         6943851987      branches                  #   46.812 M/sec                  
S0-C2           1          576362374      branch-misses             #    8.30% of all branches        
S0-C3           1          148335.48 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1             114270      context-switches          #    0.770 K/sec                  
S0-C3           1               4513      cpu-migrations            #    0.030 K/sec                  
S0-C3           1              34543      page-faults               #    0.233 K/sec                  
S0-C3           1        83717976235      cycles                    #    0.564 GHz                    
S0-C3           1        53570761489      instructions              #    0.64  insn per cycle         
S0-C3           1         6909551583      branches                  #   46.581 M/sec                  
S0-C3           1          575091325      branch-misses             #    8.32% of all branches        

     148.350811830 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/lda_perf_output_1615551372079921332.txt --per-core -a taskset -c 0-3 ./mpi_lda_benchmark.sh -t 4
please print your total processes
Training data loaded
Training data loaded
Training data loaded
Training data loaded
Iteration 0 ...
Iteration 1 ...
Iteration 2 ...
Iteration 3 ...
/root/i-benchmarks/MPI/bin
# started on Fri Mar 12 12:16:12 2021


 Performance counter stats for 'system wide':

S0-C0           1           12167.59 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               5387      context-switches          #    0.443 K/sec                  
S0-C0           1                103      cpu-migrations            #    0.008 K/sec                  
S0-C0           1               8608      page-faults               #    0.707 K/sec                  
S0-C0           1        14468574009      cycles                    #    1.189 GHz                    
S0-C0           1         7481720964      instructions              #    0.52  insn per cycle         
S0-C0           1          971777718      branches                  #   79.866 M/sec                  
S0-C0           1           82268653      branch-misses             #    8.47% of all branches        
S0-C1           1           12167.59 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               4645      context-switches          #    0.382 K/sec                  
S0-C1           1                 94      cpu-migrations            #    0.008 K/sec                  
S0-C1           1               9241      page-faults               #    0.759 K/sec                  
S0-C1           1        14475499994      cycles                    #    1.190 GHz                    
S0-C1           1         7631389651      instructions              #    0.53  insn per cycle         
S0-C1           1          993446898      branches                  #   81.647 M/sec                  
S0-C1           1           82604533      branch-misses             #    8.31% of all branches        
S0-C2           1           12167.59 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               2759      context-switches          #    0.227 K/sec                  
S0-C2           1                 42      cpu-migrations            #    0.003 K/sec                  
S0-C2           1               9032      page-faults               #    0.742 K/sec                  
S0-C2           1        14450140789      cycles                    #    1.188 GHz                    
S0-C2           1         7556511892      instructions              #    0.52  insn per cycle         
S0-C2           1          983829420      branches                  #   80.857 M/sec                  
S0-C2           1           81928365      branch-misses             #    8.33% of all branches        
S0-C3           1           12167.59 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               2180      context-switches          #    0.179 K/sec                  
S0-C3           1                 42      cpu-migrations            #    0.003 K/sec                  
S0-C3           1               8984      page-faults               #    0.738 K/sec                  
S0-C3           1        14470142813      cycles                    #    1.189 GHz                    
S0-C3           1         7668446334      instructions              #    0.53  insn per cycle         
S0-C3           1          999631031      branches                  #   82.155 M/sec                  
S0-C3           1           78076969      branch-misses             #    7.81% of all branches        

      12.169406218 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/NaiveBayes_perf_output_1615551384442115777.txt --per-core -a taskset -c 0-3 ./mpi_naive_bayes_benchmark.sh -t 4

real	0m18.242s
user	1m10.048s
sys	0m0.945s

real	0m12.920s
user	0m50.589s
sys	0m0.564s
/root/i-benchmarks/MPI/bin
# started on Fri Mar 12 12:16:24 2021


 Performance counter stats for 'system wide':

S0-C0           1           31170.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              10938      context-switches          #    0.351 K/sec                  
S0-C0           1                175      cpu-migrations            #    0.006 K/sec                  
S0-C0           1               5384      page-faults               #    0.173 K/sec                  
S0-C0           1        37301435171      cycles                    #    1.197 GHz                    
S0-C0           1        23672565890      instructions              #    0.63  insn per cycle         
S0-C0           1         4570528093      branches                  #  146.631 M/sec                  
S0-C0           1          316012160      branch-misses             #    6.91% of all branches        
S0-C1           1           31170.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              11585      context-switches          #    0.372 K/sec                  
S0-C1           1                197      cpu-migrations            #    0.006 K/sec                  
S0-C1           1               4096      page-faults               #    0.131 K/sec                  
S0-C1           1        37158827417      cycles                    #    1.192 GHz                    
S0-C1           1        23406132101      instructions              #    0.63  insn per cycle         
S0-C1           1         4515796304      branches                  #  144.875 M/sec                  
S0-C1           1          317443440      branch-misses             #    7.03% of all branches        
S0-C2           1           31170.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              10411      context-switches          #    0.334 K/sec                  
S0-C2           1                128      cpu-migrations            #    0.004 K/sec                  
S0-C2           1               5474      page-faults               #    0.176 K/sec                  
S0-C2           1        37127599684      cycles                    #    1.191 GHz                    
S0-C2           1        23738354395      instructions              #    0.64  insn per cycle         
S0-C2           1         4547679164      branches                  #  145.898 M/sec                  
S0-C2           1          328660006      branch-misses             #    7.23% of all branches        
S0-C3           1           31170.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               4625      context-switches          #    0.148 K/sec                  
S0-C3           1                 91      cpu-migrations            #    0.003 K/sec                  
S0-C3           1               5101      page-faults               #    0.164 K/sec                  
S0-C3           1        37210652350      cycles                    #    1.194 GHz                    
S0-C3           1        23725952258      instructions              #    0.64  insn per cycle         
S0-C3           1         4580222247      branches                  #  146.942 M/sec                  
S0-C3           1          313375718      branch-misses             #    6.84% of all branches        

      31.173995496 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/wordcounts_perf_output_1615551415707756077.txt --per-core -a taskset -c 0-3 ./mpi_wordcount_benchmark.sh -t 4
please print your total processes
Rank:1 ##
Size:4 ##
Rank:Process 1 of 4 is on 934418149cfd
3 ##
Size:4 ##
Process 3 of 4 is on 934418149cfd
Rank:Rank:2 ##0 ##
Size:4 ##
##folderProcess 0 of 4 is on 934418149cfd
##folder

##folder

Size:4 ##
Process 2 of 4 is on 934418149cfd
##folder
process file　./data/116MB_input
process file　./data/116MB_input
process file　./data/116MB_input
process file　./data/116MB_input
Total words 16968755 Diff cnt 4 Max Cnt 6544035
wall clock time = 17.2246
/root/i-benchmarks/MPI/bin
# started on Fri Mar 12 12:16:55 2021


 Performance counter stats for 'system wide':

S0-C0           1           17362.30 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               9069      context-switches          #    0.522 K/sec                  
S0-C0           1                164      cpu-migrations            #    0.009 K/sec                  
S0-C0           1               6182      page-faults               #    0.356 K/sec                  
S0-C0           1        20763428606      cycles                    #    1.196 GHz                    
S0-C0           1        13059518171      instructions              #    0.63  insn per cycle         
S0-C0           1         1959048552      branches                  #  112.833 M/sec                  
S0-C0           1           64659396      branch-misses             #    3.30% of all branches        
S0-C1           1           17362.30 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               3377      context-switches          #    0.195 K/sec                  
S0-C1           1                 90      cpu-migrations            #    0.005 K/sec                  
S0-C1           1               4855      page-faults               #    0.280 K/sec                  
S0-C1           1        20747602011      cycles                    #    1.195 GHz                    
S0-C1           1        13228359606      instructions              #    0.64  insn per cycle         
S0-C1           1         2004396743      branches                  #  115.445 M/sec                  
S0-C1           1           62135278      branch-misses             #    3.10% of all branches        
S0-C2           1           17362.30 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               8198      context-switches          #    0.472 K/sec                  
S0-C2           1                135      cpu-migrations            #    0.008 K/sec                  
S0-C2           1               6433      page-faults               #    0.371 K/sec                  
S0-C2           1        20756293959      cycles                    #    1.195 GHz                    
S0-C2           1        12865918172      instructions              #    0.62  insn per cycle         
S0-C2           1         1902473149      branches                  #  109.575 M/sec                  
S0-C2           1           64375254      branch-misses             #    3.38% of all branches        
S0-C3           1           17362.31 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               4806      context-switches          #    0.277 K/sec                  
S0-C3           1                 60      cpu-migrations            #    0.003 K/sec                  
S0-C3           1               6333      page-faults               #    0.365 K/sec                  
S0-C3           1        20707752377      cycles                    #    1.193 GHz                    
S0-C3           1        13102916407      instructions              #    0.63  insn per cycle         
S0-C3           1         1976173754      branches                  #  113.820 M/sec                  
S0-C3           1           62960356      branch-misses             #    3.19% of all branches        

      17.364350573 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/kmeans_perf_output_1615551433216780505.txt --per-core -a taskset -c 0-3 ./mpi_kmeans_benchmark.sh -t 4
please print your total processes
please print Kmeans clusters's number
You can find result in ./Kmeans-result file
numObjs is 112500, numCoords is 9, numClusters is 2
numObjs is 112500, numCoords is 9, numClusters is 2
numObjs is 112500, numCoords is 9, numClusters is 2
numObjs is 112500, numCoords is 9, numClusters is 2
mpi_kmeans is 0.164313 Seconds
mpi_kmeans is 0.164321 Seconds
mpi_kmeans is 0.164325 Seconds
mpi_kmeans is 0.164325 Seconds
Writing coordinates of K=2 cluster centers to file "./data/data-Kmeans.cluster_centres"
Writing membership of N=450000 data objects to file "./data/data-Kmeans.membership"

Performing **** Simple Kmeans  (MPI) ****
Num of processes = 4
Input file:        ./data/data-Kmeans
numObjs          = 450000
numCoords        = 9
numClusters      = 2
threshold        = 0.0010
I/O time           =    14.8245 sec
Computation timing =     0.2234 sec
FPCount=141749,IntCount=37800839

real	0m15.132s
user	0m51.448s
sys	0m7.006s
/root/i-benchmarks/MPI/bin
# started on Fri Mar 12 12:17:13 2021


 Performance counter stats for 'system wide':

S0-C0           1           15156.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               5805      context-switches          #    0.383 K/sec                  
S0-C0           1                 74      cpu-migrations            #    0.005 K/sec                  
S0-C0           1               3007      page-faults               #    0.198 K/sec                  
S0-C0           1        18068647022      cycles                    #    1.192 GHz                    
S0-C0           1        11160184739      instructions              #    0.62  insn per cycle         
S0-C0           1         1584096353      branches                  #  104.514 M/sec                  
S0-C0           1           55719529      branch-misses             #    3.52% of all branches        
S0-C1           1           15156.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               2003      context-switches          #    0.132 K/sec                  
S0-C1           1                 51      cpu-migrations            #    0.003 K/sec                  
S0-C1           1               3158      page-faults               #    0.208 K/sec                  
S0-C1           1        18080559418      cycles                    #    1.193 GHz                    
S0-C1           1        11230201784      instructions              #    0.62  insn per cycle         
S0-C1           1         1593755859      branches                  #  105.151 M/sec                  
S0-C1           1           46517953      branch-misses             #    2.92% of all branches        
S0-C2           1           15156.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              13894      context-switches          #    0.917 K/sec                  
S0-C2           1                 90      cpu-migrations            #    0.006 K/sec                  
S0-C2           1               3800      page-faults               #    0.251 K/sec                  
S0-C2           1        17052888997      cycles                    #    1.125 GHz                    
S0-C2           1         8321548389      instructions              #    0.49  insn per cycle         
S0-C2           1          971801776      branches                  #   64.117 M/sec                  
S0-C2           1          142560111      branch-misses             #   14.67% of all branches        
S0-C3           1           15156.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               2800      context-switches          #    0.185 K/sec                  
S0-C3           1                 42      cpu-migrations            #    0.003 K/sec                  
S0-C3           1               3345      page-faults               #    0.221 K/sec                  
S0-C3           1        18082195198      cycles                    #    1.193 GHz                    
S0-C3           1        11176650778      instructions              #    0.62  insn per cycle         
S0-C3           1         1580304966      branches                  #  104.264 M/sec                  
S0-C3           1           56101526      branch-misses             #    3.55% of all branches        

      15.158509988 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/md5_perf_output_1615551448601554305.txt --per-core -a taskset -c 0-3 ./mpi_md5_benchmark.sh -t 4
please print your total processes
input is directory
process file　./data/128MB_input1
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
process file　./data/lda_wiki1w_1
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
process file　./data/128MB_input2
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
process file　./data/256MB_input
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
process file　./data/246MB_input
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
process file　./data/lda_wiki1w_2
md5 compute finish
data transfer begin:
data transfer end.
data output begin
data outfile end
time=43.2597
/root/i-benchmarks/MPI/bin
# started on Fri Mar 12 12:17:28 2021


 Performance counter stats for 'system wide':

S0-C0           1           43523.47 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              46594      context-switches          #    0.001 M/sec                  
S0-C0           1               3696      cpu-migrations            #    0.085 K/sec                  
S0-C0           1               9759      page-faults               #    0.224 K/sec                  
S0-C0           1        27717854820      cycles                    #    0.637 GHz                    
S0-C0           1        18088460847      instructions              #    0.65  insn per cycle         
S0-C0           1          767183130      branches                  #   17.627 M/sec                  
S0-C0           1           49383758      branch-misses             #    6.44% of all branches        
S0-C1           1           43523.47 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              45675      context-switches          #    0.001 M/sec                  
S0-C1           1               3764      cpu-migrations            #    0.086 K/sec                  
S0-C1           1               9524      page-faults               #    0.219 K/sec                  
S0-C1           1        27617917839      cycles                    #    0.635 GHz                    
S0-C1           1        18268956355      instructions              #    0.66  insn per cycle         
S0-C1           1          779509108      branches                  #   17.910 M/sec                  
S0-C1           1           48091868      branch-misses             #    6.17% of all branches        
S0-C2           1           43523.47 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              44224      context-switches          #    0.001 M/sec                  
S0-C2           1               3622      cpu-migrations            #    0.083 K/sec                  
S0-C2           1               7125      page-faults               #    0.164 K/sec                  
S0-C2           1        28211903394      cycles                    #    0.648 GHz                    
S0-C2           1        18649991008      instructions              #    0.66  insn per cycle         
S0-C2           1          818108047      branches                  #   18.797 M/sec                  
S0-C2           1           50682166      branch-misses             #    6.20% of all branches        
S0-C3           1           43523.47 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              43368      context-switches          #    0.996 K/sec                  
S0-C3           1               3503      cpu-migrations            #    0.080 K/sec                  
S0-C3           1               8326      page-faults               #    0.191 K/sec                  
S0-C3           1        27788869504      cycles                    #    0.638 GHz                    
S0-C3           1        18453368643      instructions              #    0.66  insn per cycle         
S0-C3           1          800378200      branches                  #   18.390 M/sec                  
S0-C3           1           47827886      branch-misses             #    5.98% of all branches        

      43.527475564 seconds time elapsed

perf stat -o /root/i-benchmarks/MPI/bin/sort_perf_output_1615551492466512473.txt --per-core -a taskset -c 0-3 ./mpi_sort_benchmark.sh -t 4
please print your total processes
Fri Mar 12 12:18:12 2021
Fri Mar 12 12:18:12 2021
Fri Mar 12 12:18:12 2021
Fri Mar 12 12:18:12 2021
##folder
##folder
##folder
##folder
process file　./data/128MB_input1
process file　./data/128MB_input1
File Size:134217728
File Part Size:131072
process file　./data/128MB_input1
File Size:134217728
File Part Size:131072
process file　./data/128MB_input1
File Size:134217728
File Size:134217728
File Part Size:131072
File Part Size:131072
read to:0 
read to:0 
read to:0 
read to:0 
4 processes mandates root height of 2
read to:0 
process file　./data/256MB_input_2
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input_2
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input_2
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input_2
File Size:268435456
File Part Size:262144
read to:0 
read to:0 
read to:0 
read to:0 
4 processes mandates root height of 2
read to:0 
process file　./data/256MB_input
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input
File Size:268435456
File Part Size:262144
read to:0 
4 processes mandates root height of 2
read to:0 
read to:0 
read to:0 
read to:0 
process file　./data/256MB_input_1
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input_1
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input_1
File Size:268435456
File Part Size:262144
read to:0 
process file　./data/256MB_input_1
File Size:268435456
File Part Size:262144
read to:0 
read to:0 
4 processes mandates root height of 2
read to:0 
read to:0 
read to:0 
read to:0 
read to:0 
read to:0 
Total running time:25.000000 sec
Fri Mar 12 12:18:37 2021

real	0m25.115s
user	0m44.369s
sys	0m21.094s
/root/i-benchmarks/MPI/bin
# started on Fri Mar 12 12:18:12 2021


 Performance counter stats for 'system wide':

S0-C0           1           25146.61 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              40550      context-switches          #    0.002 M/sec                  
S0-C0           1               2411      cpu-migrations            #    0.096 K/sec                  
S0-C0           1               6870      page-faults               #    0.273 K/sec                  
S0-C0           1        21268105366      cycles                    #    0.846 GHz                    
S0-C0           1        10114534525      instructions              #    0.48  insn per cycle         
S0-C0           1         1265449244      branches                  #   50.323 M/sec                  
S0-C0           1          184566354      branch-misses             #   14.59% of all branches        
S0-C1           1           25146.61 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              33071      context-switches          #    0.001 M/sec                  
S0-C1           1               2045      cpu-migrations            #    0.081 K/sec                  
S0-C1           1               8358      page-faults               #    0.332 K/sec                  
S0-C1           1        21591166943      cycles                    #    0.859 GHz                    
S0-C1           1        10391784611      instructions              #    0.48  insn per cycle         
S0-C1           1         1290921768      branches                  #   51.336 M/sec                  
S0-C1           1          192915249      branch-misses             #   14.94% of all branches        
S0-C2           1           25146.62 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              30928      context-switches          #    0.001 M/sec                  
S0-C2           1               1823      cpu-migrations            #    0.072 K/sec                  
S0-C2           1              10383      page-faults               #    0.413 K/sec                  
S0-C2           1        21667525147      cycles                    #    0.862 GHz                    
S0-C2           1        10478289613      instructions              #    0.48  insn per cycle         
S0-C2           1         1310858845      branches                  #   52.129 M/sec                  
S0-C2           1          194720497      branch-misses             #   14.85% of all branches        
S0-C3           1           25146.62 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              31641      context-switches          #    0.001 M/sec                  
S0-C3           1               1681      cpu-migrations            #    0.067 K/sec                  
S0-C3           1               7438      page-faults               #    0.296 K/sec                  
S0-C3           1        21196290825      cycles                    #    0.843 GHz                    
S0-C3           1        10234072511      instructions              #    0.48  insn per cycle         
S0-C3           1         1174464775      branches                  #   46.705 M/sec                  
S0-C3           1          197020718      branch-misses             #   16.78% of all branches        

      25.148816803 seconds time elapsed

================================================================================
perf stat -o sqlite_4_threads.txt  --per-core -a taskset -c 0-3 ./sqlite_benchmark 4
SUCCESS::pthread_create() succeeded for command ./speedtest1 --size 130
SUCCESS::pthread_create() succeeded for command ./speedtest1 --size 130
SUCCESS::pthread_create() succeeded for command ./speedtest1 --size 130
SUCCESS::pthread_create() succeeded for command ./speedtest1 --size 130
-- Speedtest1 for SQLite 3.31.1 2020-01-27 19:55:54 3bfa9cc97da10598521b342961df8f
-- Speedtest1 for SQLite 3.31.1 2020-01-27 19:55:54 3bfa9cc97da10598521b342961df8f
-- Speedtest1 for SQLite 3.31.1 2020-01-27 19:55:54 3bfa9cc97da10598521b342961df8f
-- Speedtest1 for SQLite 3.31.1 2020-01-27 19:55:54 3bfa9cc97da10598521b342961df8f
 100 - 13000 INSERTs into table with no index......................  100 - 13000 INSERTs into table with no index......................  100 - 13000 INSERTs into table with no index......................  100 - 13000 INSERTs into table with no index......................    0.110s
 110 - 13000 ordered INSERTS with one index/PK.....................    0.111s
 110 - 13000 ordered INSERTS with one index/PK.....................    0.111s
 110 - 13000 ordered INSERTS with one index/PK.....................    0.112s
 110 - 13000 ordered INSERTS with one index/PK.....................    0.158s
 120 - 13000 unordered INSERTS with one index/PK...................    0.161s
 120 - 13000 unordered INSERTS with one index/PK...................    0.159s
 120 - 13000 unordered INSERTS with one index/PK...................    0.161s
 120 - 13000 unordered INSERTS with one index/PK...................    0.234s
   0.231s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................  130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.228s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.236s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.122s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.125s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.125s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.130s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.227s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    0.226s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    0.223s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    0.227s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    0.352s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.357s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.359s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.353s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.192s
 150 - CREATE INDEX five times.....................................    0.188s
   0.192s
 150 - CREATE INDEX five times.....................................    0.191s
 150 - CREATE INDEX five times.....................................  150 - CREATE INDEX five times.....................................    0.238s
 160 - 2600 SELECTS, numeric BETWEEN, indexed......................    0.242s
 160 - 2600 SELECTS, numeric BETWEEN, indexed......................    0.241s
 160 - 2600 SELECTS, numeric BETWEEN, indexed......................    0.261s
 160 - 2600 SELECTS, numeric BETWEEN, indexed......................    0.119s
 161 - 2600 SELECTS, numeric BETWEEN, PK...........................    0.119s
 161 - 2600 SELECTS, numeric BETWEEN, PK...........................    0.121s
 161 - 2600 SELECTS, numeric BETWEEN, PK...........................    0.120s
 161 - 2600 SELECTS, numeric BETWEEN, PK...........................    0.117s
 170 - 2600 SELECTS, text BETWEEN, indexed.........................    0.117s
 170 - 2600 SELECTS, text BETWEEN, indexed.........................    0.119s
 170 - 2600 SELECTS, text BETWEEN, indexed.........................    0.119s
 170 - 2600 SELECTS, text BETWEEN, indexed.........................    0.241s
 180 - 13000 INSERTS with three indexes............................    0.244s
 180 - 13000 INSERTS with three indexes............................    0.245s
 180 - 13000 INSERTS with three indexes............................    0.244s
 180 - 13000 INSERTS with three indexes............................    0.257s
 190 - DELETE and REFILL one table.................................    0.257s
 190 - DELETE and REFILL one table.................................    0.256s
 190 - DELETE and REFILL one table.................................    0.258s
 190 - DELETE and REFILL one table.................................    0.263s
 200 - VACUUM......................................................    0.269s
 200 - VACUUM......................................................    0.267s
 200 - VACUUM......................................................    0.260s
 200 - VACUUM......................................................    0.416s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.010s
 230 - 2600 UPDATES, numeric BETWEEN, indexed......................    0.430s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.421s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.011s
 230 - 2600 UPDATES, numeric BETWEEN, indexed......................    0.009s
 230 - 2600 UPDATES, numeric BETWEEN, indexed......................    0.469s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.008s
 230 - 2600 UPDATES, numeric BETWEEN, indexed......................    0.100s
 240 - 13000 UPDATES of individual rows............................    0.097s
 240 - 13000 UPDATES of individual rows............................    0.103s
 240 - 13000 UPDATES of individual rows............................    0.096s
 240 - 13000 UPDATES of individual rows............................    0.167s
 250 - One big UPDATE of the whole 13000-row table.................    0.165s
 250 - One big UPDATE of the whole 13000-row table.................    0.171s
 250 - One big UPDATE of the whole 13000-row table.................    0.049s
 260 - Query added column after filling............................    0.007s
 270 - 2600 DELETEs, numeric BETWEEN, indexed......................    0.164s
 250 - One big UPDATE of the whole 13000-row table.................    0.051s
 260 - Query added column after filling............................    0.007s
 270 - 2600 DELETEs, numeric BETWEEN, indexed......................    0.059s
 260 - Query added column after filling............................    0.009s
 270 - 2600 DELETEs, numeric BETWEEN, indexed......................    0.049s
 260 - Query added column after filling............................    0.007s
 270 - 2600 DELETEs, numeric BETWEEN, indexed......................    0.236s
 280 - 13000 DELETEs of individual rows............................    0.239s
 280 - 13000 DELETEs of individual rows............................    0.254s
 280 - 13000 DELETEs of individual rows............................    0.239s
 280 - 13000 DELETEs of individual rows............................    0.219s
 290 - Refill two 13000-row tables using REPLACE...................    0.220s
 290 - Refill two 13000-row tables using REPLACE...................    0.214s
 290 - Refill two 13000-row tables using REPLACE...................    0.233s
 290 - Refill two 13000-row tables using REPLACE...................    0.647s
 300 - Refill a 13000-row table using (b&1)==(a&1).................    0.688s
 300 - Refill a 13000-row table using (b&1)==(a&1).................    0.627s
 300 - Refill a 13000-row table using (b&1)==(a&1).................    0.669s
 300 - Refill a 13000-row table using (b&1)==(a&1).................    0.286s
 310 - 2600 four-ways joins........................................    0.287s
 310 - 2600 four-ways joins........................................    0.286s
 310 - 2600 four-ways joins........................................    0.307s
 310 - 2600 four-ways joins........................................    0.517s
 320 - subquery in result set......................................    0.522s
 320 - subquery in result set......................................    0.521s
 320 - subquery in result set......................................    0.518s
 320 - subquery in result set......................................    0.950s
 400 - 26000 REPLACE ops on an IPK.................................    0.958s
 400 - 26000 REPLACE ops on an IPK.................................    0.960s
 400 - 26000 REPLACE ops on an IPK.................................    0.974s
 400 - 26000 REPLACE ops on an IPK.................................    0.346s
 410 - 26000 SELECTS on an IPK.....................................    0.356s
 410 - 26000 SELECTS on an IPK.....................................    0.352s
 410 - 26000 SELECTS on an IPK.....................................    0.353s
 410 - 26000 SELECTS on an IPK.....................................    0.243s
 500 - 26000 REPLACE on TEXT PK....................................    0.240s
 500 - 26000 REPLACE on TEXT PK....................................    0.243s
 500 - 26000 REPLACE on TEXT PK....................................    0.244s
 500 - 26000 REPLACE on TEXT PK....................................    0.350s
 510 - 26000 SELECTS on a TEXT PK..................................    0.349s
 510 - 26000 SELECTS on a TEXT PK..................................    0.357s
 510 - 26000 SELECTS on a TEXT PK..................................    0.357s
 510 - 26000 SELECTS on a TEXT PK..................................    0.404s
 520 - 26000 SELECT DISTINCT.......................................    0.386s
 520 - 26000 SELECT DISTINCT.......................................    0.423s
 520 - 26000 SELECT DISTINCT.......................................    0.382s
 520 - 26000 SELECT DISTINCT.......................................    0.242s
 980 - PRAGMA integrity_check......................................    0.242s
 980 - PRAGMA integrity_check......................................    0.244s
 980 - PRAGMA integrity_check......................................    0.250s
 980 - PRAGMA integrity_check......................................    0.499s
 990 - ANALYZE.....................................................    0.497s
 990 - ANALYZE.....................................................    0.486s
 990 - ANALYZE.....................................................    0.095s
       TOTAL.......................................................    8.462s
   0.496s
 990 - ANALYZE.....................................................    0.106s
       TOTAL.......................................................    8.486s
   0.101s
       TOTAL.......................................................    8.469s
SUCCESS::system(./speedtest1 --size 130) succeeded
SUCCESS::system(./speedtest1 --size 130) succeeded
SUCCESS::system(./speedtest1 --size 130) succeeded
   0.084s
       TOTAL.......................................................    8.551s
SUCCESS::system(./speedtest1 --size 130) succeeded
# started on Fri Mar 12 12:18:38 2021


 Performance counter stats for 'system wide':

S0-C0           1            8607.58 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               3583      context-switches          #    0.416 K/sec                  
S0-C0           1                 97      cpu-migrations            #    0.011 K/sec                  
S0-C0           1               2166      page-faults               #    0.252 K/sec                  
S0-C0           1        10203330039      cycles                    #    1.185 GHz                    
S0-C0           1         4944262988      instructions              #    0.48  insn per cycle         
S0-C0           1          617011504      branches                  #   71.682 M/sec                  
S0-C0           1           89463622      branch-misses             #   14.50% of all branches        
S0-C1           1            8607.55 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               5404      context-switches          #    0.628 K/sec                  
S0-C1           1                169      cpu-migrations            #    0.020 K/sec                  
S0-C1           1               2260      page-faults               #    0.263 K/sec                  
S0-C1           1        10207170606      cycles                    #    1.186 GHz                    
S0-C1           1         4934688786      instructions              #    0.48  insn per cycle         
S0-C1           1          614993242      branches                  #   71.448 M/sec                  
S0-C1           1           89023083      branch-misses             #   14.48% of all branches        
S0-C2           1            8607.54 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               4564      context-switches          #    0.530 K/sec                  
S0-C2           1                 97      cpu-migrations            #    0.011 K/sec                  
S0-C2           1               2114      page-faults               #    0.246 K/sec                  
S0-C2           1        10274172535      cycles                    #    1.194 GHz                    
S0-C2           1         4922842744      instructions              #    0.48  insn per cycle         
S0-C2           1          613577886      branches                  #   71.284 M/sec                  
S0-C2           1           89415630      branch-misses             #   14.57% of all branches        
S0-C3           1            8607.54 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               3909      context-switches          #    0.454 K/sec                  
S0-C3           1                118      cpu-migrations            #    0.014 K/sec                  
S0-C3           1               2009      page-faults               #    0.233 K/sec                  
S0-C3           1        10198233975      cycles                    #    1.185 GHz                    
S0-C3           1         4949006797      instructions              #    0.49  insn per cycle         
S0-C3           1          616508709      branches                  #   71.624 M/sec                  
S0-C3           1           89538844      branch-misses             #   14.52% of all branches        

       8.608567890 seconds time elapsed

================================================================================
perf stat -o go_word2vec_4_threads.txt  --per-core -a taskset -c 0-3 ./go_word2vec.sh 4
/root/i-benchmarks/golang/bin
Save trained vectors to example/word_vectors_sg.txt
# started on Fri Mar 12 12:18:46 2021


 Performance counter stats for 'system wide':

S0-C0           1           39465.80 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              15795      context-switches          #    0.400 K/sec                  
S0-C0           1                389      cpu-migrations            #    0.010 K/sec                  
S0-C0           1               1031      page-faults               #    0.026 K/sec                  
S0-C0           1        35176215496      cycles                    #    0.891 GHz                    
S0-C0           1        20343641969      instructions              #    0.58  insn per cycle         
S0-C0           1         1876355950      branches                  #   47.544 M/sec                  
S0-C0           1           36102002      branch-misses             #    1.92% of all branches        
S0-C1           1           39465.80 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              13946      context-switches          #    0.353 K/sec                  
S0-C1           1                367      cpu-migrations            #    0.009 K/sec                  
S0-C1           1                774      page-faults               #    0.020 K/sec                  
S0-C1           1        35131830379      cycles                    #    0.890 GHz                    
S0-C1           1        20419437525      instructions              #    0.58  insn per cycle         
S0-C1           1         1880796797      branches                  #   47.656 M/sec                  
S0-C1           1           35459491      branch-misses             #    1.89% of all branches        
S0-C2           1           39465.80 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              14211      context-switches          #    0.360 K/sec                  
S0-C2           1                333      cpu-migrations            #    0.008 K/sec                  
S0-C2           1                927      page-faults               #    0.023 K/sec                  
S0-C2           1        35218749196      cycles                    #    0.892 GHz                    
S0-C2           1        20550679673      instructions              #    0.58  insn per cycle         
S0-C2           1         1892086790      branches                  #   47.942 M/sec                  
S0-C2           1           35116772      branch-misses             #    1.86% of all branches        
S0-C3           1           39465.80 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              11421      context-switches          #    0.289 K/sec                  
S0-C3           1                203      cpu-migrations            #    0.005 K/sec                  
S0-C3           1               5458      page-faults               #    0.138 K/sec                  
S0-C3           1        46909174313      cycles                    #    1.189 GHz                    
S0-C3           1        28512271580      instructions              #    0.61  insn per cycle         
S0-C3           1         2597196550      branches                  #   65.809 M/sec                  
S0-C3           1           91701401      branch-misses             #    3.53% of all branches        

      39.468658642 seconds time elapsed

================================================================================
================================================================================
Running run_forest_importances_faces test
perf stat -o ../output/run_forest_importances_faces.log --per-core -a taskset -c 0-3 ./run_forest_importances_faces.sh -n 4

=================================================
Pixel importances with a parallel forest of trees
=================================================

This example shows the use of forests of trees to evaluate the importance
of the pixels in an image classification task (faces). The hotter the pixel,
the more important.

The code below also illustrates how the construction and the computation
of the predictions can be parallelized within multiple jobs.

=================================================
Pixel importances with a parallel forest of trees
=================================================

This example shows the use of forests of trees to evaluate the importance
of the pixels in an image classification task (faces). The hotter the pixel,
the more important.

The code below also illustrates how the construction and the computation
of the predictions can be parallelized within multiple jobs.

=================================================
Pixel importances with a parallel forest of trees
=================================================

This example shows the use of forests of trees to evaluate the importance
of the pixels in an image classification task (faces). The hotter the pixel,
the more important.

The code below also illustrates how the construction and the computation
of the predictions can be parallelized within multiple jobs.



=================================================
Pixel importances with a parallel forest of trees
=================================================

This example shows the use of forests of trees to evaluate the importance
of the pixels in an image classification task (faces). The hotter the pixel,
the more important.

The code below also illustrates how the construction and the computation
of the predictions can be parallelized within multiple jobs.


/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
Fitting ExtraTreesClassifier on faces data with 1 cores...
Fitting ExtraTreesClassifier on faces data with 1 cores...
Fitting ExtraTreesClassifier on faces data with 1 cores...








Fitting ExtraTreesClassifier on faces data with 1 cores...
done in 67.180s
done in 67.180s
done in 67.580s
done in 23.080s
/root/i-benchmarks/scikit/bin
# started on Fri Mar 12 12:19:26 2021


 Performance counter stats for 'system wide':

S0-C0           1          468059.90 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1            2622033      context-switches          #    0.006 M/sec                  
S0-C0           1              70360      cpu-migrations            #    0.150 K/sec                  
S0-C0           1             928555      page-faults               #    0.002 M/sec                  
S0-C0           1       220427163245      cycles                    #    0.471 GHz                    
S0-C0           1        61824529600      instructions              #    0.28  insn per cycle         
S0-C0           1         8689406190      branches                  #   18.565 M/sec                  
S0-C0           1         1534916262      branch-misses             #   17.66% of all branches        
S0-C1           1          468059.91 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1            3742773      context-switches          #    0.008 M/sec                  
S0-C1           1              80860      cpu-migrations            #    0.173 K/sec                  
S0-C1           1             984954      page-faults               #    0.002 M/sec                  
S0-C1           1       186187348787      cycles                    #    0.398 GHz                    
S0-C1           1        52295709175      instructions              #    0.28  insn per cycle         
S0-C1           1         7421577439      branches                  #   15.856 M/sec                  
S0-C1           1         1283966723      branch-misses             #   17.30% of all branches        
S0-C2           1          468060.00 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1             655800      context-switches          #    0.001 M/sec                  
S0-C2           1              38786      cpu-migrations            #    0.083 K/sec                  
S0-C2           1             683779      page-faults               #    0.001 M/sec                  
S0-C2           1       403581607391      cycles                    #    0.862 GHz                    
S0-C2           1       147167164772      instructions              #    0.36  insn per cycle         
S0-C2           1        18865970231      branches                  #   40.307 M/sec                  
S0-C2           1         1794522219      branch-misses             #    9.51% of all branches        
S0-C3           1          468060.00 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1             904845      context-switches          #    0.002 M/sec                  
S0-C3           1              47156      cpu-migrations            #    0.101 K/sec                  
S0-C3           1             853351      page-faults               #    0.002 M/sec                  
S0-C3           1       306263173208      cycles                    #    0.654 GHz                    
S0-C3           1       108709345911      instructions              #    0.35  insn per cycle         
S0-C3           1        13967018297      branches                  #   29.840 M/sec                  
S0-C3           1         1494985973      branch-misses             #   10.70% of all branches        

     468.082885800 seconds time elapsed

================================================================================
Running run_multioutput_face_completion test
perf stat -o ../output/run_multioutput_face_completion.log --per-core -a taskset -c 0-3 ./run_multioutput_face_completion.sh -n 4

==============================================
Face completion with a multi-output estimators
==============================================

This example shows the use of multi-output estimator to complete images.
The goal is to predict the lower half of a face given its upper half.

The first column of images shows true faces. The next columns illustrate
how extremely randomized trees, k nearest neighbors, linear
regression and ridge regression complete the lower half of those faces.



==============================================
Face completion with a multi-output estimators
==============================================

This example shows the use of multi-output estimator to complete images.
The goal is to predict the lower half of a face given its upper half.

The first column of images shows true faces. The next columns illustrate
how extremely randomized trees, k nearest neighbors, linear
regression and ridge regression complete the lower half of those faces.


==============================================
Face completion with a multi-output estimators
==============================================

This example shows the use of multi-output estimator to complete images.
The goal is to predict the lower half of a face given its upper half.

The first column of images shows true faces. The next columns illustrate
how extremely randomized trees, k nearest neighbors, linear
regression and ridge regression complete the lower half of those faces.




==============================================
Face completion with a multi-output estimators
==============================================

This example shows the use of multi-output estimator to complete images.
The goal is to predict the lower half of a face given its upper half.

The first column of images shows true faces. The next columns illustrate
how extremely randomized trees, k nearest neighbors, linear
regression and ridge regression complete the lower half of those faces.


/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[B^[[B^[[B^[[B^[[B^[[B./run_multioutput_face_completion.sh: line 35:   241 Killed                  python3 plot_multioutput_face_completion.py
./run_multioutput_face_completion.sh: line 35:   244 Killed                  python3 plot_multioutput_face_completion.py
/root/i-benchmarks/scikit/bin
# started on Fri Mar 12 12:27:14 2021


 Performance counter stats for 'system wide':

S0-C0           1           74388.57 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1             161668      context-switches          #    0.002 M/sec                  
S0-C0           1               3516      cpu-migrations            #    0.047 K/sec                  
S0-C0           1              81656      page-faults               #    0.001 M/sec                  
S0-C0           1        59437991274      cycles                    #    0.799 GHz                    
S0-C0           1        22700703743      instructions              #    0.38  insn per cycle         
S0-C0           1         1728154740      branches                  #   23.231 M/sec                  
S0-C0           1          169350259      branch-misses             #    9.80% of all branches        
S0-C1           1           74388.58 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1             126143      context-switches          #    0.002 M/sec                  
S0-C1           1               2726      cpu-migrations            #    0.037 K/sec                  
S0-C1           1              91868      page-faults               #    0.001 M/sec                  
S0-C1           1        58841682267      cycles                    #    0.791 GHz                    
S0-C1           1        23060798128      instructions              #    0.39  insn per cycle         
S0-C1           1         1731068401      branches                  #   23.271 M/sec                  
S0-C1           1          152965109      branch-misses             #    8.84% of all branches        
S0-C2           1           74388.59 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1             108454      context-switches          #    0.001 M/sec                  
S0-C2           1               3481      cpu-migrations            #    0.047 K/sec                  
S0-C2           1             115214      page-faults               #    0.002 M/sec                  
S0-C2           1        63123174143      cycles                    #    0.849 GHz                    
S0-C2           1        24560225902      instructions              #    0.39  insn per cycle         
S0-C2           1         1755369464      branches                  #   23.597 M/sec                  
S0-C2           1          185329041      branch-misses             #   10.56% of all branches        
S0-C3           1           74388.59 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              64995      context-switches          #    0.874 K/sec                  
S0-C3           1               1140      cpu-migrations            #    0.015 K/sec                  
S0-C3           1              69133      page-faults               #    0.929 K/sec                  
S0-C3           1        65569810513      cycles                    #    0.881 GHz                    
S0-C3           1        25231052807      instructions              #    0.38  insn per cycle         
S0-C3           1         2314116555      branches                  #   31.108 M/sec                  
S0-C3           1          211666871      branch-misses             #    9.15% of all branches        

      74.400939215 seconds time elapsed

================================================================================
Running run_logistic_path test
perf stat -o ../output/run_logistic_path.log --per-core -a taskset -c 0-3 ./run_logistic_path.sh -n 4

==============================================
Regularization path of L1- Logistic Regression
==============================================


Train l1-penalized logistic regression models on a binary classification
problem derived from the Iris dataset.

The models are ordered from strongest regularized to least regularized. The 4
coefficients of the models are collected and plotted as a "regularization
path": on the left-hand side of the figure (strong regularizers), all the
coefficients are exactly 0. When regularization gets progressively looser,
coefficients can get non-zero values one after the other.

Here we choose the SAGA solver because it can efficiently optimize for the
Logistic Regression loss with a non-smooth, sparsity inducing l1 penalty.

Also note that we set a low value for the tolerance to make sure that the model
has converged before collecting the coefficients.

We also use warm_start=True which means that the coefficients of the models are
reused to initialize the next model fit to speed-up the computation of the
full-path.


==============================================
Regularization path of L1- Logistic Regression
==============================================


Train l1-penalized logistic regression models on a binary classification
problem derived from the Iris dataset.

The models are ordered from strongest regularized to least regularized. The 4
coefficients of the models are collected and plotted as a "regularization
path": on the left-hand side of the figure (strong regularizers), all the
coefficients are exactly 0. When regularization gets progressively looser,
coefficients can get non-zero values one after the other.

Here we choose the SAGA solver because it can efficiently optimize for the
Logistic Regression loss with a non-smooth, sparsity inducing l1 penalty.

Also note that we set a low value for the tolerance to make sure that the model
has converged before collecting the coefficients.

We also use warm_start=True which means that the coefficients of the models are
reused to initialize the next model fit to speed-up the computation of the
full-path.




==============================================
Regularization path of L1- Logistic Regression
==============================================


Train l1-penalized logistic regression models on a binary classification
problem derived from the Iris dataset.

The models are ordered from strongest regularized to least regularized. The 4
coefficients of the models are collected and plotted as a "regularization
path": on the left-hand side of the figure (strong regularizers), all the
coefficients are exactly 0. When regularization gets progressively looser,
coefficients can get non-zero values one after the other.

Here we choose the SAGA solver because it can efficiently optimize for the
Logistic Regression loss with a non-smooth, sparsity inducing l1 penalty.

Also note that we set a low value for the tolerance to make sure that the model
has converged before collecting the coefficients.

We also use warm_start=True which means that the coefficients of the models are
reused to initialize the next model fit to speed-up the computation of the
full-path.



==============================================
Regularization path of L1- Logistic Regression
==============================================


Train l1-penalized logistic regression models on a binary classification
problem derived from the Iris dataset.

The models are ordered from strongest regularized to least regularized. The 4
coefficients of the models are collected and plotted as a "regularization
path": on the left-hand side of the figure (strong regularizers), all the
coefficients are exactly 0. When regularization gets progressively looser,
coefficients can get non-zero values one after the other.

Here we choose the SAGA solver because it can efficiently optimize for the
Logistic Regression loss with a non-smooth, sparsity inducing l1 penalty.

Also note that we set a low value for the tolerance to make sure that the model
has converged before collecting the coefficients.

We also use warm_start=True which means that the coefficients of the models are
reused to initialize the next model fit to speed-up the computation of the
full-path.


/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
Computing regularization path ...
Computing regularization path ...
Computing regularization path ...
Computing regularization path ...
This took 36.054s
This took 36.427s
This took 37.886s
This took 38.474s
/root/i-benchmarks/scikit/bin
# started on Fri Mar 12 12:28:29 2021


 Performance counter stats for 'system wide':

S0-C0           1           49337.26 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              18232      context-switches          #    0.370 K/sec                  
S0-C0           1                888      cpu-migrations            #    0.018 K/sec                  
S0-C0           1              28127      page-faults               #    0.570 K/sec                  
S0-C0           1        55514667872      cycles                    #    1.125 GHz                    
S0-C0           1        25874324184      instructions              #    0.47  insn per cycle         
S0-C0           1         2656999456      branches                  #   53.854 M/sec                  
S0-C0           1          466441624      branch-misses             #   17.56% of all branches        
S0-C1           1           49337.26 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              13435      context-switches          #    0.272 K/sec                  
S0-C1           1                680      cpu-migrations            #    0.014 K/sec                  
S0-C1           1              32892      page-faults               #    0.667 K/sec                  
S0-C1           1        56453901641      cycles                    #    1.144 GHz                    
S0-C1           1        27103887154      instructions              #    0.48  insn per cycle         
S0-C1           1         2788029838      branches                  #   56.510 M/sec                  
S0-C1           1          467209662      branch-misses             #   16.76% of all branches        
S0-C2           1           49337.26 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              13567      context-switches          #    0.275 K/sec                  
S0-C2           1                523      cpu-migrations            #    0.011 K/sec                  
S0-C2           1              24962      page-faults               #    0.506 K/sec                  
S0-C2           1        53723261485      cycles                    #    1.089 GHz                    
S0-C2           1        25152830706      instructions              #    0.47  insn per cycle         
S0-C2           1         2580102337      branches                  #   52.295 M/sec                  
S0-C2           1          456629255      branch-misses             #   17.70% of all branches        
S0-C3           1           49337.27 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              21884      context-switches          #    0.444 K/sec                  
S0-C3           1                383      cpu-migrations            #    0.008 K/sec                  
S0-C3           1              28438      page-faults               #    0.576 K/sec                  
S0-C3           1        54088999901      cycles                    #    1.096 GHz                    
S0-C3           1        26155679676      instructions              #    0.48  insn per cycle         
S0-C3           1         2686509384      branches                  #   54.452 M/sec                  
S0-C3           1          450003982      branch-misses             #   16.75% of all branches        

      49.348186556 seconds time elapsed

================================================================================
Running run_plot_svm_nonlinear test
perf stat -o ../output/run_plot_svm_nonlinear.log --per-core -a taskset -c 0-3 ./run_plot_svm_nonlinear.sh -n 4

==============
Non-linear SVM
==============

Perform binary classification using non-linear SVC
with RBF kernel. The target to predict is a XOR of the
inputs.

The color map illustrates the decision function learned by the SVC.


==============
Non-linear SVM
==============

Perform binary classification using non-linear SVC
with RBF kernel. The target to predict is a XOR of the
inputs.

The color map illustrates the decision function learned by the SVC.

==============
Non-linear SVM
==============

Perform binary classification using non-linear SVC
with RBF kernel. The target to predict is a XOR of the
inputs.

The color map illustrates the decision function learned by the SVC.


==============
Non-linear SVM
==============

Perform binary classification using non-linear SVC
with RBF kernel. The target to predict is a XOR of the
inputs.

The color map illustrates the decision function learned by the SVC.


/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/root/i-benchmarks/scikit/bin
# started on Fri Mar 12 12:29:18 2021


 Performance counter stats for 'system wide':

S0-C0           1           16840.17 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               7833      context-switches          #    0.465 K/sec                  
S0-C0           1                355      cpu-migrations            #    0.021 K/sec                  
S0-C0           1              30299      page-faults               #    0.002 M/sec                  
S0-C0           1        19546437427      cycles                    #    1.161 GHz                    
S0-C0           1         8996360128      instructions              #    0.46  insn per cycle         
S0-C0           1          943911246      branches                  #   56.051 M/sec                  
S0-C0           1           90114799      branch-misses             #    9.55% of all branches        
S0-C1           1           16840.18 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               6367      context-switches          #    0.378 K/sec                  
S0-C1           1                280      cpu-migrations            #    0.017 K/sec                  
S0-C1           1              32297      page-faults               #    0.002 M/sec                  
S0-C1           1        19649478410      cycles                    #    1.167 GHz                    
S0-C1           1         9033900859      instructions              #    0.46  insn per cycle         
S0-C1           1          948730664      branches                  #   56.337 M/sec                  
S0-C1           1           90856882      branch-misses             #    9.58% of all branches        
S0-C2           1           16840.18 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               7073      context-switches          #    0.420 K/sec                  
S0-C2           1                251      cpu-migrations            #    0.015 K/sec                  
S0-C2           1              33266      page-faults               #    0.002 M/sec                  
S0-C2           1        19662091692      cycles                    #    1.168 GHz                    
S0-C2           1         9089070425      instructions              #    0.46  insn per cycle         
S0-C2           1          958097250      branches                  #   56.894 M/sec                  
S0-C2           1           91840074      branch-misses             #    9.59% of all branches        
S0-C3           1           16840.18 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               9624      context-switches          #    0.571 K/sec                  
S0-C3           1                152      cpu-migrations            #    0.009 K/sec                  
S0-C3           1              30588      page-faults               #    0.002 M/sec                  
S0-C3           1        19562283176      cycles                    #    1.162 GHz                    
S0-C3           1         8982739008      instructions              #    0.46  insn per cycle         
S0-C3           1          937601910      branches                  #   55.676 M/sec                  
S0-C3           1           89719408      branch-misses             #    9.57% of all branches        

      16.843579182 seconds time elapsed

================================================================================
Running run_plot_theilsen test
perf stat -o ../output/run_plot_theilsen.log --per-core -a taskset -c 0-3 ./run_plot_theilsen.sh -n 4
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/sklearn/externals/joblib.py:1: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp

====================
Theil-Sen Regression
====================

Computes a Theil-Sen Regression on a synthetic dataset.

See :ref:`theil_sen_regression` for more information on the regressor.

Compared to the OLS (ordinary least squares) estimator, the Theil-Sen
estimator is robust against outliers. It has a breakdown point of about 29.3%
in case of a simple linear regression which means that it can tolerate
arbitrary corrupted data (outliers) of up to 29.3% in the two-dimensional
case.

The estimation of the model is done by calculating the slopes and intercepts
of a subpopulation of all possible combinations of p subsample points. If an
intercept is fitted, p must be greater than or equal to n_features + 1. The
final slope and intercept is then defined as the spatial median of these
slopes and intercepts.

In certain cases Theil-Sen performs better than :ref:`RANSAC
<ransac_regression>` which is also a robust method. This is illustrated in the
second example below where outliers with respect to the x-axis perturb RANSAC.
Tuning the ``residual_threshold`` parameter of RANSAC remedies this but in
general a priori knowledge about the data and the nature of the outliers is
needed.
Due to the computational complexity of Theil-Sen it is recommended to use it
only for small problems in terms of number of samples and features. For larger
problems the ``max_subpopulation`` parameter restricts the magnitude of all
possible combinations of p subsample points to a randomly chosen subset and
therefore also limits the runtime. Therefore, Theil-Sen is applicable to larger
problems with the drawback of losing some of its mathematical properties since
it then works on a random subset.


====================
Theil-Sen Regression
====================

Computes a Theil-Sen Regression on a synthetic dataset.

See :ref:`theil_sen_regression` for more information on the regressor.

Compared to the OLS (ordinary least squares) estimator, the Theil-Sen
estimator is robust against outliers. It has a breakdown point of about 29.3%
in case of a simple linear regression which means that it can tolerate
arbitrary corrupted data (outliers) of up to 29.3% in the two-dimensional
case.

The estimation of the model is done by calculating the slopes and intercepts
of a subpopulation of all possible combinations of p subsample points. If an
intercept is fitted, p must be greater than or equal to n_features + 1. The
final slope and intercept is then defined as the spatial median of these
slopes and intercepts.

In certain cases Theil-Sen performs better than :ref:`RANSAC
<ransac_regression>` which is also a robust method. This is illustrated in the
second example below where outliers with respect to the x-axis perturb RANSAC.
Tuning the ``residual_threshold`` parameter of RANSAC remedies this but in
general a priori knowledge about the data and the nature of the outliers is
needed.
Due to the computational complexity of Theil-Sen it is recommended to use it
only for small problems in terms of number of samples and features. For larger
problems the ``max_subpopulation`` parameter restricts the magnitude of all
possible combinations of p subsample points to a randomly chosen subset and
therefore also limits the runtime. Therefore, Theil-Sen is applicable to larger
problems with the drawback of losing some of its mathematical properties since
it then works on a random subset.


====================
Theil-Sen Regression
====================

Computes a Theil-Sen Regression on a synthetic dataset.

See :ref:`theil_sen_regression` for more information on the regressor.

Compared to the OLS (ordinary least squares) estimator, the Theil-Sen
estimator is robust against outliers. It has a breakdown point of about 29.3%
in case of a simple linear regression which means that it can tolerate
arbitrary corrupted data (outliers) of up to 29.3% in the two-dimensional
case.

The estimation of the model is done by calculating the slopes and intercepts
of a subpopulation of all possible combinations of p subsample points. If an
intercept is fitted, p must be greater than or equal to n_features + 1. The
final slope and intercept is then defined as the spatial median of these
slopes and intercepts.

In certain cases Theil-Sen performs better than :ref:`RANSAC
<ransac_regression>` which is also a robust method. This is illustrated in the
second example below where outliers with respect to the x-axis perturb RANSAC.
Tuning the ``residual_threshold`` parameter of RANSAC remedies this but in
general a priori knowledge about the data and the nature of the outliers is
needed.
Due to the computational complexity of Theil-Sen it is recommended to use it
only for small problems in terms of number of samples and features. For larger
problems the ``max_subpopulation`` parameter restricts the magnitude of all
possible combinations of p subsample points to a randomly chosen subset and
therefore also limits the runtime. Therefore, Theil-Sen is applicable to larger
problems with the drawback of losing some of its mathematical properties since
it then works on a random subset.


====================
Theil-Sen Regression
====================

Computes a Theil-Sen Regression on a synthetic dataset.

See :ref:`theil_sen_regression` for more information on the regressor.

Compared to the OLS (ordinary least squares) estimator, the Theil-Sen
estimator is robust against outliers. It has a breakdown point of about 29.3%
in case of a simple linear regression which means that it can tolerate
arbitrary corrupted data (outliers) of up to 29.3% in the two-dimensional
case.

The estimation of the model is done by calculating the slopes and intercepts
of a subpopulation of all possible combinations of p subsample points. If an
intercept is fitted, p must be greater than or equal to n_features + 1. The
final slope and intercept is then defined as the spatial median of these
slopes and intercepts.

In certain cases Theil-Sen performs better than :ref:`RANSAC
<ransac_regression>` which is also a robust method. This is illustrated in the
second example below where outliers with respect to the x-axis perturb RANSAC.
Tuning the ``residual_threshold`` parameter of RANSAC remedies this but in
general a priori knowledge about the data and the nature of the outliers is
needed.
Due to the computational complexity of Theil-Sen it is recommended to use it
only for small problems in terms of number of samples and features. For larger
problems the ``max_subpopulation`` parameter restricts the magnitude of all
possible combinations of p subsample points to a randomly chosen subset and
therefore also limits the runtime. Therefore, Theil-Sen is applicable to larger
problems with the drawback of losing some of its mathematical properties since
it then works on a random subset.

./run_plot_theilsen.sh: line 32:   277 Killed                  python3 plot_theilsen.py
./run_plot_theilsen.sh: line 32:   280 Killed                  python3 plot_theilsen.py
/root/i-benchmarks/scikit/bin
# started on Fri Mar 12 12:29:35 2021


 Performance counter stats for 'system wide':

S0-C0           1           30280.00 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              19403      context-switches          #    0.641 K/sec                  
S0-C0           1                511      cpu-migrations            #    0.017 K/sec                  
S0-C0           1             101924      page-faults               #    0.003 M/sec                  
S0-C0           1        29192411969      cycles                    #    0.964 GHz                    
S0-C0           1         8101390068      instructions              #    0.28  insn per cycle         
S0-C0           1          963075738      branches                  #   31.806 M/sec                  
S0-C0           1          274248123      branch-misses             #   28.48% of all branches        
S0-C1           1           30280.01 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              11539      context-switches          #    0.381 K/sec                  
S0-C1           1                433      cpu-migrations            #    0.014 K/sec                  
S0-C1           1             103383      page-faults               #    0.003 M/sec                  
S0-C1           1        27008900976      cycles                    #    0.892 GHz                    
S0-C1           1         7624528914      instructions              #    0.28  insn per cycle         
S0-C1           1          900131248      branches                  #   29.727 M/sec                  
S0-C1           1          254477070      branch-misses             #   28.27% of all branches        
S0-C2           1           30280.01 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              17571      context-switches          #    0.580 K/sec                  
S0-C2           1                337      cpu-migrations            #    0.011 K/sec                  
S0-C2           1              74271      page-faults               #    0.002 M/sec                  
S0-C2           1        29265738388      cycles                    #    0.967 GHz                    
S0-C2           1         8508898432      instructions              #    0.29  insn per cycle         
S0-C2           1         1015676994      branches                  #   33.543 M/sec                  
S0-C2           1          280496700      branch-misses             #   27.62% of all branches        
S0-C3           1           30280.01 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              12163      context-switches          #    0.402 K/sec                  
S0-C3           1                376      cpu-migrations            #    0.012 K/sec                  
S0-C3           1              63190      page-faults               #    0.002 M/sec                  
S0-C3           1        21224434303      cycles                    #    0.701 GHz                    
S0-C3           1         5854994636      instructions              #    0.28  insn per cycle         
S0-C3           1          697034895      branches                  #   23.020 M/sec                  
S0-C3           1          178857426      branch-misses             #   25.66% of all branches        

      30.285275958 seconds time elapsed

================================================================================
================================================================================
perf stat -o 099_go.log --per-core -a taskset -c 0-3 ./spec95_099_go.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:30:06 2021


 Performance counter stats for 'system wide':

S0-C0           1           47591.22 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              13780      context-switches          #    0.290 K/sec                  
S0-C0           1                178      cpu-migrations            #    0.004 K/sec                  
S0-C0           1                352      page-faults               #    0.007 K/sec                  
S0-C0           1        57055713380      cycles                    #    1.199 GHz                    
S0-C0           1        27176790242      instructions              #    0.48  insn per cycle         
S0-C0           1         2637721997      branches                  #   55.425 M/sec                  
S0-C0           1         1081996750      branch-misses             #   41.02% of all branches        
S0-C1           1           47591.22 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               5014      context-switches          #    0.105 K/sec                  
S0-C1           1                 92      cpu-migrations            #    0.002 K/sec                  
S0-C1           1                193      page-faults               #    0.004 K/sec                  
S0-C1           1        56136582713      cycles                    #    1.180 GHz                    
S0-C1           1        27061560509      instructions              #    0.48  insn per cycle         
S0-C1           1         2623854241      branches                  #   55.133 M/sec                  
S0-C1           1         1078268547      branch-misses             #   41.09% of all branches        
S0-C2           1           47591.22 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               2380      context-switches          #    0.050 K/sec                  
S0-C2           1                 31      cpu-migrations            #    0.001 K/sec                  
S0-C2           1                459      page-faults               #    0.010 K/sec                  
S0-C2           1        56423266324      cycles                    #    1.186 GHz                    
S0-C2           1        27050525683      instructions              #    0.48  insn per cycle         
S0-C2           1         2622384112      branches                  #   55.102 M/sec                  
S0-C2           1         1077598942      branch-misses             #   41.09% of all branches        
S0-C3           1           47591.22 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               4721      context-switches          #    0.099 K/sec                  
S0-C3           1                120      cpu-migrations            #    0.003 K/sec                  
S0-C3           1                580      page-faults               #    0.012 K/sec                  
S0-C3           1        56441935143      cycles                    #    1.186 GHz                    
S0-C3           1        27083523799      instructions              #    0.48  insn per cycle         
S0-C3           1         2626408450      branches                  #   55.187 M/sec                  
S0-C3           1         1078624675      branch-misses             #   41.07% of all branches        

      47.598165412 seconds time elapsed

================================================================================
perf stat -o 101_tomcatv.log --per-core -a taskset -c 0-3 ./spec95_101_tomcatv.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:30:54 2021


 Performance counter stats for 'system wide':

S0-C0           1           86193.89 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              28411      context-switches          #    0.330 K/sec                  
S0-C0           1                559      cpu-migrations            #    0.006 K/sec                  
S0-C0           1              16113      page-faults               #    0.187 K/sec                  
S0-C0           1        97493328434      cycles                    #    1.131 GHz                    
S0-C0           1        16769181499      instructions              #    0.17  insn per cycle         
S0-C0           1          940246977      branches                  #   10.909 M/sec                  
S0-C0           1           48282495      branch-misses             #    5.14% of all branches        
S0-C1           1           86193.89 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              21469      context-switches          #    0.249 K/sec                  
S0-C1           1                579      cpu-migrations            #    0.007 K/sec                  
S0-C1           1              13793      page-faults               #    0.160 K/sec                  
S0-C1           1        97405385790      cycles                    #    1.130 GHz                    
S0-C1           1        17181170109      instructions              #    0.18  insn per cycle         
S0-C1           1          995216489      branches                  #   11.546 M/sec                  
S0-C1           1           44079915      branch-misses             #    4.43% of all branches        
S0-C2           1           86193.89 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              15941      context-switches          #    0.185 K/sec                  
S0-C2           1                227      cpu-migrations            #    0.003 K/sec                  
S0-C2           1               8280      page-faults               #    0.096 K/sec                  
S0-C2           1        97504618179      cycles                    #    1.131 GHz                    
S0-C2           1        16592888550      instructions              #    0.17  insn per cycle         
S0-C2           1          897662036      branches                  #   10.414 M/sec                  
S0-C2           1           38768694      branch-misses             #    4.32% of all branches        
S0-C3           1           86193.90 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              23893      context-switches          #    0.277 K/sec                  
S0-C3           1                451      cpu-migrations            #    0.005 K/sec                  
S0-C3           1              13571      page-faults               #    0.157 K/sec                  
S0-C3           1        98463803543      cycles                    #    1.142 GHz                    
S0-C3           1        16781535766      instructions              #    0.17  insn per cycle         
S0-C3           1          916639511      branches                  #   10.635 M/sec                  
S0-C3           1           41026524      branch-misses             #    4.48% of all branches        

      86.203889345 seconds time elapsed

================================================================================
perf stat -o 102_swim.log --per-core -a taskset -c 0-3 ./spec95_102_swim.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:32:20 2021


 Performance counter stats for 'system wide':

S0-C0           1           73834.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              14693      context-switches          #    0.199 K/sec                  
S0-C0           1                272      cpu-migrations            #    0.004 K/sec                  
S0-C0           1               1130      page-faults               #    0.015 K/sec                  
S0-C0           1        88556099169      cycles                    #    1.199 GHz                    
S0-C0           1         6158268188      instructions              #    0.07  insn per cycle         
S0-C0           1          194262567      branches                  #    2.631 M/sec                  
S0-C0           1            7659709      branch-misses             #    3.94% of all branches        
S0-C1           1           73834.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              12614      context-switches          #    0.171 K/sec                  
S0-C1           1                280      cpu-migrations            #    0.004 K/sec                  
S0-C1           1                806      page-faults               #    0.011 K/sec                  
S0-C1           1        88200584641      cycles                    #    1.195 GHz                    
S0-C1           1         6089156066      instructions              #    0.07  insn per cycle         
S0-C1           1          185454887      branches                  #    2.512 M/sec                  
S0-C1           1            5688076      branch-misses             #    3.07% of all branches        
S0-C2           1           73834.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              13728      context-switches          #    0.186 K/sec                  
S0-C2           1                151      cpu-migrations            #    0.002 K/sec                  
S0-C2           1                767      page-faults               #    0.010 K/sec                  
S0-C2           1        88287616759      cycles                    #    1.196 GHz                    
S0-C2           1         6101253734      instructions              #    0.07  insn per cycle         
S0-C2           1          185756126      branches                  #    2.516 M/sec                  
S0-C2           1            5893943      branch-misses             #    3.17% of all branches        
S0-C3           1           73834.79 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               6618      context-switches          #    0.090 K/sec                  
S0-C3           1                 29      cpu-migrations            #    0.000 K/sec                  
S0-C3           1                909      page-faults               #    0.012 K/sec                  
S0-C3           1        87897019157      cycles                    #    1.190 GHz                    
S0-C3           1         6028795481      instructions              #    0.07  insn per cycle         
S0-C3           1          177337938      branches                  #    2.402 M/sec                  
S0-C3           1            3809862      branch-misses             #    2.15% of all branches        

      73.842002053 seconds time elapsed

================================================================================
perf stat -o 103_su2cor.log --per-core -a taskset -c 0-3 ./spec95_103_su2cor.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:33:34 2021


 Performance counter stats for 'system wide':

S0-C0           1          129318.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              21196      context-switches          #    0.164 K/sec                  
S0-C0           1                456      cpu-migrations            #    0.004 K/sec                  
S0-C0           1               1152      page-faults               #    0.009 K/sec                  
S0-C0           1       153391107887      cycles                    #    1.186 GHz                    
S0-C0           1        21587612461      instructions              #    0.14  insn per cycle         
S0-C0           1         1210500835      branches                  #    9.361 M/sec                  
S0-C0           1          114109161      branch-misses             #    9.43% of all branches        
S0-C1           1          129318.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              34451      context-switches          #    0.266 K/sec                  
S0-C1           1                477      cpu-migrations            #    0.004 K/sec                  
S0-C1           1               1250      page-faults               #    0.010 K/sec                  
S0-C1           1       152786537343      cycles                    #    1.181 GHz                    
S0-C1           1        21531367857      instructions              #    0.14  insn per cycle         
S0-C1           1         1216688829      branches                  #    9.408 M/sec                  
S0-C1           1          115290255      branch-misses             #    9.48% of all branches        
S0-C2           1          129318.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               8408      context-switches          #    0.065 K/sec                  
S0-C2           1                106      cpu-migrations            #    0.001 K/sec                  
S0-C2           1               1246      page-faults               #    0.010 K/sec                  
S0-C2           1       152224535529      cycles                    #    1.177 GHz                    
S0-C2           1        21295562349      instructions              #    0.14  insn per cycle         
S0-C2           1         1180972576      branches                  #    9.132 M/sec                  
S0-C2           1          107326331      branch-misses             #    9.09% of all branches        
S0-C3           1          129318.19 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              22358      context-switches          #    0.173 K/sec                  
S0-C3           1                198      cpu-migrations            #    0.002 K/sec                  
S0-C3           1               1073      page-faults               #    0.008 K/sec                  
S0-C3           1       152371789771      cycles                    #    1.178 GHz                    
S0-C3           1        21410446520      instructions              #    0.14  insn per cycle         
S0-C3           1         1193809228      branches                  #    9.232 M/sec                  
S0-C3           1          111189189      branch-misses             #    9.31% of all branches        

     129.329182657 seconds time elapsed

================================================================================
perf stat -o 104_hydro2d.log --per-core -a taskset -c 0-3 ./spec95_104_hydro2d.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:35:43 2021


 Performance counter stats for 'system wide':

S0-C0           1           99356.51 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              30963      context-switches          #    0.312 K/sec                  
S0-C0           1                493      cpu-migrations            #    0.005 K/sec                  
S0-C0           1              16632      page-faults               #    0.167 K/sec                  
S0-C0           1       118304868254      cycles                    #    1.191 GHz                    
S0-C0           1        32085857248      instructions              #    0.27  insn per cycle         
S0-C0           1         2689953444      branches                  #   27.074 M/sec                  
S0-C0           1           37102103      branch-misses             #    1.38% of all branches        
S0-C1           1           99356.51 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              14059      context-switches          #    0.142 K/sec                  
S0-C1           1                254      cpu-migrations            #    0.003 K/sec                  
S0-C1           1              11672      page-faults               #    0.117 K/sec                  
S0-C1           1       117782889078      cycles                    #    1.185 GHz                    
S0-C1           1        32177471539      instructions              #    0.27  insn per cycle         
S0-C1           1         2673392716      branches                  #   26.907 M/sec                  
S0-C1           1           25733688      branch-misses             #    0.96% of all branches        
S0-C2           1           99356.51 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              27754      context-switches          #    0.279 K/sec                  
S0-C2           1                392      cpu-migrations            #    0.004 K/sec                  
S0-C2           1               3775      page-faults               #    0.038 K/sec                  
S0-C2           1       117957470629      cycles                    #    1.187 GHz                    
S0-C2           1        32218094112      instructions              #    0.27  insn per cycle         
S0-C2           1         2691838603      branches                  #   27.093 M/sec                  
S0-C2           1           31781855      branch-misses             #    1.18% of all branches        
S0-C3           1           99356.51 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              19465      context-switches          #    0.196 K/sec                  
S0-C3           1                311      cpu-migrations            #    0.003 K/sec                  
S0-C3           1              17949      page-faults               #    0.181 K/sec                  
S0-C3           1       116898061591      cycles                    #    1.177 GHz                    
S0-C3           1        32017234781      instructions              #    0.27  insn per cycle         
S0-C3           1         2682724400      branches                  #   27.001 M/sec                  
S0-C3           1           30264538      branch-misses             #    1.13% of all branches        

      99.365860651 seconds time elapsed

================================================================================
perf stat -o 107_mgrid.log --per-core -a taskset -c 0-3 ./spec95_107_mgrid.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:37:23 2021


 Performance counter stats for 'system wide':

S0-C0           1           92980.39 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              17077      context-switches          #    0.184 K/sec                  
S0-C0           1                381      cpu-migrations            #    0.004 K/sec                  
S0-C0           1               1230      page-faults               #    0.013 K/sec                  
S0-C0           1       111547630217      cycles                    #    1.200 GHz                    
S0-C0           1        30304583591      instructions              #    0.27  insn per cycle         
S0-C0           1          719952223      branches                  #    7.743 M/sec                  
S0-C0           1           38959345      branch-misses             #    5.41% of all branches        
S0-C1           1           92980.39 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              15653      context-switches          #    0.168 K/sec                  
S0-C1           1                287      cpu-migrations            #    0.003 K/sec                  
S0-C1           1               1515      page-faults               #    0.016 K/sec                  
S0-C1           1       111440186470      cycles                    #    1.199 GHz                    
S0-C1           1        30346221577      instructions              #    0.27  insn per cycle         
S0-C1           1          725800739      branches                  #    7.806 M/sec                  
S0-C1           1           39596152      branch-misses             #    5.46% of all branches        
S0-C2           1           92980.39 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              17394      context-switches          #    0.187 K/sec                  
S0-C2           1                347      cpu-migrations            #    0.004 K/sec                  
S0-C2           1               1255      page-faults               #    0.013 K/sec                  
S0-C2           1       111038239810      cycles                    #    1.194 GHz                    
S0-C2           1        30278940640      instructions              #    0.27  insn per cycle         
S0-C2           1          715307710      branches                  #    7.693 M/sec                  
S0-C2           1           37687149      branch-misses             #    5.27% of all branches        
S0-C3           1           92980.39 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              10772      context-switches          #    0.116 K/sec                  
S0-C3           1                125      cpu-migrations            #    0.001 K/sec                  
S0-C3           1               1046      page-faults               #    0.011 K/sec                  
S0-C3           1       110884812876      cycles                    #    1.193 GHz                    
S0-C3           1        30182633170      instructions              #    0.27  insn per cycle         
S0-C3           1          704550543      branches                  #    7.577 M/sec                  
S0-C3           1           35484095      branch-misses             #    5.04% of all branches        

      92.989463631 seconds time elapsed

================================================================================
perf stat -o 110_applu.log --per-core -a taskset -c 0-3 ./spec95_110_applu.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:38:56 2021


 Performance counter stats for 'system wide':

S0-C0           1           88568.69 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              25966      context-switches          #    0.293 K/sec                  
S0-C0           1                279      cpu-migrations            #    0.003 K/sec                  
S0-C0           1               1194      page-faults               #    0.013 K/sec                  
S0-C0           1       106254190856      cycles                    #    1.200 GHz                    
S0-C0           1        21961814990      instructions              #    0.21  insn per cycle         
S0-C0           1          354139259      branches                  #    3.998 M/sec                  
S0-C0           1           23305563      branch-misses             #    6.58% of all branches        
S0-C1           1           88568.69 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               8859      context-switches          #    0.100 K/sec                  
S0-C1           1                164      cpu-migrations            #    0.002 K/sec                  
S0-C1           1               1111      page-faults               #    0.013 K/sec                  
S0-C1           1       105768552174      cycles                    #    1.194 GHz                    
S0-C1           1        21899844488      instructions              #    0.21  insn per cycle         
S0-C1           1          341074703      branches                  #    3.851 M/sec                  
S0-C1           1           19132067      branch-misses             #    5.61% of all branches        
S0-C2           1           88568.69 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              20590      context-switches          #    0.232 K/sec                  
S0-C2           1                295      cpu-migrations            #    0.003 K/sec                  
S0-C2           1               1299      page-faults               #    0.015 K/sec                  
S0-C2           1       105807449861      cycles                    #    1.195 GHz                    
S0-C2           1        21938299439      instructions              #    0.21  insn per cycle         
S0-C2           1          356042440      branches                  #    4.020 M/sec                  
S0-C2           1           22967126      branch-misses             #    6.45% of all branches        
S0-C3           1           88568.69 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               6817      context-switches          #    0.077 K/sec                  
S0-C3           1                 61      cpu-migrations            #    0.001 K/sec                  
S0-C3           1               1337      page-faults               #    0.015 K/sec                  
S0-C3           1       105448665956      cycles                    #    1.191 GHz                    
S0-C3           1        21801140844      instructions              #    0.21  insn per cycle         
S0-C3           1          334707818      branches                  #    3.779 M/sec                  
S0-C3           1           17985318      branch-misses             #    5.37% of all branches        

      88.576848402 seconds time elapsed

================================================================================
perf stat -o 125_turb3d.log --per-core -a taskset -c 0-3 ./spec95_125_turb3d.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:40:24 2021


 Performance counter stats for 'system wide':

S0-C0           1          107072.27 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              11608      context-switches          #    0.108 K/sec                  
S0-C0           1                250      cpu-migrations            #    0.002 K/sec                  
S0-C0           1               5950      page-faults               #    0.056 K/sec                  
S0-C0           1       128407681259      cycles                    #    1.199 GHz                    
S0-C0           1        62031459831      instructions              #    0.48  insn per cycle         
S0-C0           1         3580557356      branches                  #   33.441 M/sec                  
S0-C0           1          291222987      branch-misses             #    8.13% of all branches        
S0-C1           1          107072.28 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              18460      context-switches          #    0.172 K/sec                  
S0-C1           1                430      cpu-migrations            #    0.004 K/sec                  
S0-C1           1               1786      page-faults               #    0.017 K/sec                  
S0-C1           1       128299762315      cycles                    #    1.198 GHz                    
S0-C1           1        62049236726      instructions              #    0.48  insn per cycle         
S0-C1           1         3580018100      branches                  #   33.436 M/sec                  
S0-C1           1          293061616      branch-misses             #    8.19% of all branches        
S0-C2           1          107072.28 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              15135      context-switches          #    0.141 K/sec                  
S0-C2           1                151      cpu-migrations            #    0.001 K/sec                  
S0-C2           1               3585      page-faults               #    0.033 K/sec                  
S0-C2           1       128351317012      cycles                    #    1.199 GHz                    
S0-C2           1        62216371148      instructions              #    0.48  insn per cycle         
S0-C2           1         3582719090      branches                  #   33.461 M/sec                  
S0-C2           1          288993483      branch-misses             #    8.07% of all branches        
S0-C3           1          107072.28 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              27750      context-switches          #    0.259 K/sec                  
S0-C3           1                272      cpu-migrations            #    0.003 K/sec                  
S0-C3           1               2551      page-faults               #    0.024 K/sec                  
S0-C3           1       128422304022      cycles                    #    1.199 GHz                    
S0-C3           1        62070153566      instructions              #    0.48  insn per cycle         
S0-C3           1         3579243255      branches                  #   33.428 M/sec                  
S0-C3           1          292844442      branch-misses             #    8.18% of all branches        

     107.081651029 seconds time elapsed

================================================================================
perf stat -o 126_gcc.log --per-core -a taskset -c 0-3 ./spec95_126_gcc.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:42:12 2021


 Performance counter stats for 'system wide':

S0-C0           1            7678.03 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               4890      context-switches          #    0.637 K/sec                  
S0-C0           1                104      cpu-migrations            #    0.014 K/sec                  
S0-C0           1              14141      page-faults               #    0.002 M/sec                  
S0-C0           1         8806954972      cycles                    #    1.147 GHz                    
S0-C0           1         3704504643      instructions              #    0.42  insn per cycle         
S0-C0           1          498665419      branches                  #   64.947 M/sec                  
S0-C0           1          123556021      branch-misses             #   24.78% of all branches        
S0-C1           1            7678.03 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               6390      context-switches          #    0.832 K/sec                  
S0-C1           1                 99      cpu-migrations            #    0.013 K/sec                  
S0-C1           1              19491      page-faults               #    0.003 M/sec                  
S0-C1           1         9136580023      cycles                    #    1.190 GHz                    
S0-C1           1         3897789733      instructions              #    0.43  insn per cycle         
S0-C1           1          530777677      branches                  #   69.129 M/sec                  
S0-C1           1          132270584      branch-misses             #   24.92% of all branches        
S0-C2           1            7678.03 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               7438      context-switches          #    0.969 K/sec                  
S0-C2           1                101      cpu-migrations            #    0.013 K/sec                  
S0-C2           1               7800      page-faults               #    0.001 M/sec                  
S0-C2           1         8795299442      cycles                    #    1.146 GHz                    
S0-C2           1         3917257298      instructions              #    0.45  insn per cycle         
S0-C2           1          508398626      branches                  #   66.215 M/sec                  
S0-C2           1          110353657      branch-misses             #   21.71% of all branches        
S0-C3           1            7678.03 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               3826      context-switches          #    0.498 K/sec                  
S0-C3           1                 91      cpu-migrations            #    0.012 K/sec                  
S0-C3           1               9768      page-faults               #    0.001 M/sec                  
S0-C3           1         8714191700      cycles                    #    1.135 GHz                    
S0-C3           1         3706173318      instructions              #    0.43  insn per cycle         
S0-C3           1          503597977      branches                  #   65.589 M/sec                  
S0-C3           1          126470424      branch-misses             #   25.11% of all branches        

       7.679097583 seconds time elapsed

================================================================================
perf stat -o 129_compress.log --per-core -a taskset -c 0-3 ./spec95_129_compress.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:42:19 2021


 Performance counter stats for 'system wide':

S0-C0           1          165915.11 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              33645      context-switches          #    0.203 K/sec                  
S0-C0           1                528      cpu-migrations            #    0.003 K/sec                  
S0-C0           1                864      page-faults               #    0.005 K/sec                  
S0-C0           1       196135553507      cycles                    #    1.182 GHz                    
S0-C0           1        35064646398      instructions              #    0.18  insn per cycle         
S0-C0           1         3608862798      branches                  #   21.751 M/sec                  
S0-C0           1          612094050      branch-misses             #   16.96% of all branches        
S0-C1           1          165915.12 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              15275      context-switches          #    0.092 K/sec                  
S0-C1           1                241      cpu-migrations            #    0.001 K/sec                  
S0-C1           1                804      page-faults               #    0.005 K/sec                  
S0-C1           1       197145355687      cycles                    #    1.188 GHz                    
S0-C1           1        35433418559      instructions              #    0.18  insn per cycle         
S0-C1           1         3642912666      branches                  #   21.956 M/sec                  
S0-C1           1          613610560      branch-misses             #   16.84% of all branches        
S0-C2           1          165915.12 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              21187      context-switches          #    0.128 K/sec                  
S0-C2           1                122      cpu-migrations            #    0.001 K/sec                  
S0-C2           1               1196      page-faults               #    0.007 K/sec                  
S0-C2           1       199052758667      cycles                    #    1.200 GHz                    
S0-C2           1        36414924730      instructions              #    0.18  insn per cycle         
S0-C2           1         3747143976      branches                  #   22.585 M/sec                  
S0-C2           1          629245363      branch-misses             #   16.79% of all branches        
S0-C3           1          165915.12 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              34326      context-switches          #    0.207 K/sec                  
S0-C3           1                352      cpu-migrations            #    0.002 K/sec                  
S0-C3           1                911      page-faults               #    0.005 K/sec                  
S0-C3           1       196132932804      cycles                    #    1.182 GHz                    
S0-C3           1        35414290792      instructions              #    0.18  insn per cycle         
S0-C3           1         3642332863      branches                  #   21.953 M/sec                  
S0-C3           1          615516934      branch-misses             #   16.90% of all branches        

     165.928809238 seconds time elapsed

================================================================================
perf stat -o 130_li.log --per-core -a taskset -c 0-3 ./spec95_130_li.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:45:05 2021


 Performance counter stats for 'system wide':

S0-C0           1           85093.84 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              11016      context-switches          #    0.129 K/sec                  
S0-C0           1                205      cpu-migrations            #    0.002 K/sec                  
S0-C0           1                329      page-faults               #    0.004 K/sec                  
S0-C0           1       101882314825      cycles                    #    1.197 GHz                    
S0-C0           1        48269848171      instructions              #    0.47  insn per cycle         
S0-C0           1         6121097538      branches                  #   71.933 M/sec                  
S0-C0           1         1040677329      branch-misses             #   17.00% of all branches        
S0-C1           1           85093.84 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              19348      context-switches          #    0.227 K/sec                  
S0-C1           1                385      cpu-migrations            #    0.005 K/sec                  
S0-C1           1                581      page-faults               #    0.007 K/sec                  
S0-C1           1       101887791525      cycles                    #    1.197 GHz                    
S0-C1           1        48251245035      instructions              #    0.47  insn per cycle         
S0-C1           1         6115555710      branches                  #   71.868 M/sec                  
S0-C1           1         1039354760      branch-misses             #   17.00% of all branches        
S0-C2           1           85093.84 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               8359      context-switches          #    0.098 K/sec                  
S0-C2           1                 39      cpu-migrations            #    0.000 K/sec                  
S0-C2           1                328      page-faults               #    0.004 K/sec                  
S0-C2           1       101969846371      cycles                    #    1.198 GHz                    
S0-C2           1        48330903354      instructions              #    0.47  insn per cycle         
S0-C2           1         6128005971      branches                  #   72.015 M/sec                  
S0-C2           1         1042269841      branch-misses             #   17.01% of all branches        
S0-C3           1           85093.84 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              19705      context-switches          #    0.232 K/sec                  
S0-C3           1                321      cpu-migrations            #    0.004 K/sec                  
S0-C3           1                575      page-faults               #    0.007 K/sec                  
S0-C3           1       101850598021      cycles                    #    1.197 GHz                    
S0-C3           1        48229021637      instructions              #    0.47  insn per cycle         
S0-C3           1         6113263690      branches                  #   71.841 M/sec                  
S0-C3           1         1038915247      branch-misses             #   16.99% of all branches        

      85.100839704 seconds time elapsed

================================================================================
perf stat -o 132_ijpeg.log --per-core -a taskset -c 0-3 ./spec95_132_ijpeg.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:46:31 2021


 Performance counter stats for 'system wide':

S0-C0           1           23808.89 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               2372      context-switches          #    0.100 K/sec                  
S0-C0           1                 73      cpu-migrations            #    0.003 K/sec                  
S0-C0           1               2785      page-faults               #    0.117 K/sec                  
S0-C0           1        27668323416      cycles                    #    1.162 GHz                    
S0-C0           1        21074352399      instructions              #    0.76  insn per cycle         
S0-C0           1         1085478216      branches                  #   45.591 M/sec                  
S0-C0           1          197471708      branch-misses             #   18.19% of all branches        
S0-C1           1           23808.89 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               6217      context-switches          #    0.261 K/sec                  
S0-C1           1                 66      cpu-migrations            #    0.003 K/sec                  
S0-C1           1               2751      page-faults               #    0.116 K/sec                  
S0-C1           1        28044536212      cycles                    #    1.178 GHz                    
S0-C1           1        21429756970      instructions              #    0.76  insn per cycle         
S0-C1           1         1093263796      branches                  #   45.918 M/sec                  
S0-C1           1          192591660      branch-misses             #   17.62% of all branches        
S0-C2           1           23808.89 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               2305      context-switches          #    0.097 K/sec                  
S0-C2           1                 58      cpu-migrations            #    0.002 K/sec                  
S0-C2           1               2746      page-faults               #    0.115 K/sec                  
S0-C2           1        28401637581      cycles                    #    1.193 GHz                    
S0-C2           1        21704936418      instructions              #    0.76  insn per cycle         
S0-C2           1         1113787176      branches                  #   46.780 M/sec                  
S0-C2           1          201382075      branch-misses             #   18.08% of all branches        
S0-C3           1           23808.89 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               3205      context-switches          #    0.135 K/sec                  
S0-C3           1                 76      cpu-migrations            #    0.003 K/sec                  
S0-C3           1               2391      page-faults               #    0.100 K/sec                  
S0-C3           1        25000971269      cycles                    #    1.050 GHz                    
S0-C3           1        19157308126      instructions              #    0.77  insn per cycle         
S0-C3           1          973078566      branches                  #   40.870 M/sec                  
S0-C3           1          166316480      branch-misses             #   17.09% of all branches        

      23.811065127 seconds time elapsed

================================================================================
perf stat -o 134_perl.log --per-core -a taskset -c 0-3 ./spec95_134_perl.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:46:54 2021


 Performance counter stats for 'system wide':

S0-C0           1           35270.31 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              14379      context-switches          #    0.408 K/sec                  
S0-C0           1                223      cpu-migrations            #    0.006 K/sec                  
S0-C0           1              18524      page-faults               #    0.525 K/sec                  
S0-C0           1        41774326144      cycles                    #    1.184 GHz                    
S0-C0           1        22775872076      instructions              #    0.55  insn per cycle         
S0-C0           1         2780120782      branches                  #   78.823 M/sec                  
S0-C0           1          480247892      branch-misses             #   17.27% of all branches        
S0-C1           1           35270.31 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              13708      context-switches          #    0.389 K/sec                  
S0-C1           1                195      cpu-migrations            #    0.006 K/sec                  
S0-C1           1              31649      page-faults               #    0.897 K/sec                  
S0-C1           1        42015346818      cycles                    #    1.191 GHz                    
S0-C1           1        23149410669      instructions              #    0.55  insn per cycle         
S0-C1           1         2830323306      branches                  #   80.247 M/sec                  
S0-C1           1          504023756      branch-misses             #   17.81% of all branches        
S0-C2           1           35270.31 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              13664      context-switches          #    0.387 K/sec                  
S0-C2           1                171      cpu-migrations            #    0.005 K/sec                  
S0-C2           1              20366      page-faults               #    0.577 K/sec                  
S0-C2           1        41698382510      cycles                    #    1.182 GHz                    
S0-C2           1        22872292525      instructions              #    0.55  insn per cycle         
S0-C2           1         2795792099      branches                  #   79.268 M/sec                  
S0-C2           1          502712258      branch-misses             #   17.98% of all branches        
S0-C3           1           35270.31 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               8803      context-switches          #    0.250 K/sec                  
S0-C3           1                144      cpu-migrations            #    0.004 K/sec                  
S0-C3           1              19901      page-faults               #    0.564 K/sec                  
S0-C3           1        41158365334      cycles                    #    1.167 GHz                    
S0-C3           1        23037277427      instructions              #    0.56  insn per cycle         
S0-C3           1         2817583483      branches                  #   79.885 M/sec                  
S0-C3           1          489823758      branch-misses             #   17.38% of all branches        

      35.273354224 seconds time elapsed

================================================================================
perf stat -o 141_apsi.log --per-core -a taskset -c 0-3 ./spec95_141_apsi.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:47:30 2021


 Performance counter stats for 'system wide':

S0-C0           1           57595.34 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              10704      context-switches          #    0.186 K/sec                  
S0-C0           1                233      cpu-migrations            #    0.004 K/sec                  
S0-C0           1               1029      page-faults               #    0.018 K/sec                  
S0-C0           1        66192071835      cycles                    #    1.149 GHz                    
S0-C0           1        19293445101      instructions              #    0.29  insn per cycle         
S0-C0           1          872903038      branches                  #   15.156 M/sec                  
S0-C0           1           41192241      branch-misses             #    4.72% of all branches        
S0-C1           1           57595.34 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              12963      context-switches          #    0.225 K/sec                  
S0-C1           1                289      cpu-migrations            #    0.005 K/sec                  
S0-C1           1               1561      page-faults               #    0.027 K/sec                  
S0-C1           1        66447945231      cycles                    #    1.154 GHz                    
S0-C1           1        19356460849      instructions              #    0.29  insn per cycle         
S0-C1           1          880659050      branches                  #   15.290 M/sec                  
S0-C1           1           43142847      branch-misses             #    4.90% of all branches        
S0-C2           1           57595.34 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               4782      context-switches          #    0.083 K/sec                  
S0-C2           1                 89      cpu-migrations            #    0.002 K/sec                  
S0-C2           1               1389      page-faults               #    0.024 K/sec                  
S0-C2           1        66210812000      cycles                    #    1.150 GHz                    
S0-C2           1        19213257734      instructions              #    0.29  insn per cycle         
S0-C2           1          861774472      branches                  #   14.963 M/sec                  
S0-C2           1           38410894      branch-misses             #    4.46% of all branches        
S0-C3           1           57595.34 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               9287      context-switches          #    0.161 K/sec                  
S0-C3           1                153      cpu-migrations            #    0.003 K/sec                  
S0-C3           1               1084      page-faults               #    0.019 K/sec                  
S0-C3           1        68890556861      cycles                    #    1.196 GHz                    
S0-C3           1        19235548381      instructions              #    0.28  insn per cycle         
S0-C3           1          864090475      branches                  #   15.003 M/sec                  
S0-C3           1           39729276      branch-misses             #    4.60% of all branches        

      57.600113186 seconds time elapsed

================================================================================
perf stat -o 145_fpppp.log --per-core -a taskset -c 0-3 ./spec95_145_fpppp.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:48:28 2021


 Performance counter stats for 'system wide':

S0-C0           1          148199.41 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              27538      context-switches          #    0.186 K/sec                  
S0-C0           1                308      cpu-migrations            #    0.002 K/sec                  
S0-C0           1                503      page-faults               #    0.003 K/sec                  
S0-C0           1       176887627317      cycles                    #    1.194 GHz                    
S0-C0           1       102216905511      instructions              #    0.58  insn per cycle         
S0-C0           1         1276737822      branches                  #    8.615 M/sec                  
S0-C0           1          126031268      branch-misses             #    9.87% of all branches        
S0-C1           1          148199.41 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              10927      context-switches          #    0.074 K/sec                  
S0-C1           1                196      cpu-migrations            #    0.001 K/sec                  
S0-C1           1                429      page-faults               #    0.003 K/sec                  
S0-C1           1       177088584864      cycles                    #    1.195 GHz                    
S0-C1           1       102738962578      instructions              #    0.58  insn per cycle         
S0-C1           1         1250436521      branches                  #    8.438 M/sec                  
S0-C1           1          118350426      branch-misses             #    9.46% of all branches        
S0-C2           1          148199.41 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              11579      context-switches          #    0.078 K/sec                  
S0-C2           1                 72      cpu-migrations            #    0.000 K/sec                  
S0-C2           1                444      page-faults               #    0.003 K/sec                  
S0-C2           1       176596571623      cycles                    #    1.192 GHz                    
S0-C2           1       102365550602      instructions              #    0.58  insn per cycle         
S0-C2           1         1247795100      branches                  #    8.420 M/sec                  
S0-C2           1          118371238      branch-misses             #    9.49% of all branches        
S0-C3           1          148199.41 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              38262      context-switches          #    0.258 K/sec                  
S0-C3           1                118      cpu-migrations            #    0.001 K/sec                  
S0-C3           1                615      page-faults               #    0.004 K/sec                  
S0-C3           1       177813033295      cycles                    #    1.200 GHz                    
S0-C3           1       102692713594      instructions              #    0.58  insn per cycle         
S0-C3           1         1283056349      branches                  #    8.658 M/sec                  
S0-C3           1          127106806      branch-misses             #    9.91% of all branches        

     148.211104169 seconds time elapsed

================================================================================
perf stat -o 146_wave5.log --per-core -a taskset -c 0-3 ./spec95_146_wave5.sh -n 4
/root/i-benchmarks/spec_95/bin
# started on Fri Mar 12 12:50:56 2021


 Performance counter stats for 'system wide':

S0-C0           1           69731.57 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               7284      context-switches          #    0.104 K/sec                  
S0-C0           1                146      cpu-migrations            #    0.002 K/sec                  
S0-C0           1                866      page-faults               #    0.012 K/sec                  
S0-C0           1        81730257646      cycles                    #    1.172 GHz                    
S0-C0           1        20321628800      instructions              #    0.25  insn per cycle         
S0-C0           1         1367100803      branches                  #   19.605 M/sec                  
S0-C0           1           17418991      branch-misses             #    1.27% of all branches        
S0-C1           1           69731.57 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               4914      context-switches          #    0.070 K/sec                  
S0-C1           1                126      cpu-migrations            #    0.002 K/sec                  
S0-C1           1               1022      page-faults               #    0.015 K/sec                  
S0-C1           1        80502925267      cycles                    #    1.154 GHz                    
S0-C1           1        19619923925      instructions              #    0.24  insn per cycle         
S0-C1           1         1310027875      branches                  #   18.787 M/sec                  
S0-C1           1           14776817      branch-misses             #    1.13% of all branches        
S0-C2           1           69731.57 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              15622      context-switches          #    0.224 K/sec                  
S0-C2           1                309      cpu-migrations            #    0.004 K/sec                  
S0-C2           1               1092      page-faults               #    0.016 K/sec                  
S0-C2           1        81780888920      cycles                    #    1.173 GHz                    
S0-C2           1        19460216754      instructions              #    0.24  insn per cycle         
S0-C2           1         1305904226      branches                  #   18.728 M/sec                  
S0-C2           1           18350583      branch-misses             #    1.41% of all branches        
S0-C3           1           69731.58 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              16903      context-switches          #    0.242 K/sec                  
S0-C3           1                278      cpu-migrations            #    0.004 K/sec                  
S0-C3           1                770      page-faults               #    0.011 K/sec                  
S0-C3           1        82173621954      cycles                    #    1.178 GHz                    
S0-C3           1        19391017506      instructions              #    0.24  insn per cycle         
S0-C3           1         1296495523      branches                  #   18.593 M/sec                  
S0-C3           1           18828316      branch-misses             #    1.45% of all branches        

      69.737218246 seconds time elapsed

================================================================================
perf stat -o 147_vortex.log --per-core -a taskset -c 0-3 ./spec95_147_vortex.sh -n 4
/root/i-benchmarks/spec_95/bin
	Command being timed: "perf stat -o 147_vortex.log --per-core -a taskset -c 0-3 ./spec95_147_vortex.sh -n 4"
	User time (seconds): 372.36
	System time (seconds): 0.77
	Percent of CPU this job got: 384%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 1:37.11
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 43852
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 15
	Minor (reclaiming a frame) page faults: 48512
	Voluntary context switches: 287
	Involuntary context switches: 21625
	Swaps: 0
	File system inputs: 8328
	File system outputs: 6800
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
# started on Fri Mar 12 12:52:06 2021


 Performance counter stats for 'system wide':

S0-C0           1           97057.49 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              26409      context-switches          #    0.272 K/sec                  
S0-C0           1                385      cpu-migrations            #    0.004 K/sec                  
S0-C0           1              34010      page-faults               #    0.350 K/sec                  
S0-C0           1       116093171429      cycles                    #    1.196 GHz                    
S0-C0           1        60214374384      instructions              #    0.52  insn per cycle         
S0-C0           1         5942042241      branches                  #   61.222 M/sec                  
S0-C0           1          403197806      branch-misses             #    6.79% of all branches        
S0-C1           1           97057.49 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              13191      context-switches          #    0.136 K/sec                  
S0-C1           1                274      cpu-migrations            #    0.003 K/sec                  
S0-C1           1              17928      page-faults               #    0.185 K/sec                  
S0-C1           1       113279349416      cycles                    #    1.167 GHz                    
S0-C1           1        59697873334      instructions              #    0.53  insn per cycle         
S0-C1           1         5894595428      branches                  #   60.733 M/sec                  
S0-C1           1          389353359      branch-misses             #    6.61% of all branches        
S0-C2           1           97057.49 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              20247      context-switches          #    0.209 K/sec                  
S0-C2           1                252      cpu-migrations            #    0.003 K/sec                  
S0-C2           1              25317      page-faults               #    0.261 K/sec                  
S0-C2           1       115100332722      cycles                    #    1.186 GHz                    
S0-C2           1        59984135701      instructions              #    0.52  insn per cycle         
S0-C2           1         5913693663      branches                  #   60.930 M/sec                  
S0-C2           1          398164419      branch-misses             #    6.73% of all branches        
S0-C3           1           97057.50 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              25053      context-switches          #    0.258 K/sec                  
S0-C3           1                267      cpu-migrations            #    0.003 K/sec                  
S0-C3           1              18715      page-faults               #    0.193 K/sec                  
S0-C3           1       114511755042      cycles                    #    1.180 GHz                    
S0-C3           1        59757230381      instructions              #    0.52  insn per cycle         
S0-C3           1         5887474404      branches                  #   60.660 M/sec                  
S0-C3           1          398144021      branch-misses             #    6.76% of all branches        

      97.065372959 seconds time elapsed

================================================================================
perf stat -o aes_benchmark.log --per-core -a taskset -c 0-3 ./aes_benchmark 4
SUCCESS::pthread_create() succeeded
SUCCESS::pthread_create() succeeded
SUCCESS::pthread_create() succeeded
SUCCESS::pthread_create() succeeded
AES Tests: SUCCEEDED
AES Tests: SUCCEEDED
AES Tests: SUCCEEDED
AES Tests: SUCCEEDED
# started on Fri Mar 12 12:53:43 2021


 Performance counter stats for 'system wide':

S0-C0           1            7026.52 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               1254      context-switches          #    0.178 K/sec                  
S0-C0           1                 50      cpu-migrations            #    0.007 K/sec                  
S0-C0           1                362      page-faults               #    0.052 K/sec                  
S0-C0           1         8396758463      cycles                    #    1.195 GHz                    
S0-C0           1         7731672812      instructions              #    0.92  insn per cycle         
S0-C0           1          177982133      branches                  #   25.330 M/sec                  
S0-C0           1            3261559      branch-misses             #    1.83% of all branches        
S0-C1           1            7026.53 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1                966      context-switches          #    0.137 K/sec                  
S0-C1           1                 37      cpu-migrations            #    0.005 K/sec                  
S0-C1           1                520      page-faults               #    0.074 K/sec                  
S0-C1           1         8378439694      cycles                    #    1.192 GHz                    
S0-C1           1         7728899382      instructions              #    0.92  insn per cycle         
S0-C1           1          177565819      branches                  #   25.271 M/sec                  
S0-C1           1            3129368      branch-misses             #    1.76% of all branches        
S0-C2           1            7026.53 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1                855      context-switches          #    0.122 K/sec                  
S0-C2           1                 21      cpu-migrations            #    0.003 K/sec                  
S0-C2           1                391      page-faults               #    0.056 K/sec                  
S0-C2           1         8365697024      cycles                    #    1.191 GHz                    
S0-C2           1         7725632448      instructions              #    0.92  insn per cycle         
S0-C2           1          177168058      branches                  #   25.214 M/sec                  
S0-C2           1            2997526      branch-misses             #    1.69% of all branches        
S0-C3           1            7026.53 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               1170      context-switches          #    0.167 K/sec                  
S0-C3           1                 66      cpu-migrations            #    0.009 K/sec                  
S0-C3           1                404      page-faults               #    0.057 K/sec                  
S0-C3           1         8392837359      cycles                    #    1.194 GHz                    
S0-C3           1         7731856922      instructions              #    0.92  insn per cycle         
S0-C3           1          177862347      branches                  #   25.313 M/sec                  
S0-C3           1            3178523      branch-misses             #    1.79% of all branches        

       7.027452381 seconds time elapsed

================================================================================
perf stat -o coremark_benchmark.log --per-core -a taskset -c 0-3 ./coremark_4.exe 0x3415 0x3415 0x66 200000 7 1 2000  > ./run.log
# started on Fri Mar 12 12:53:50 2021


 Performance counter stats for 'system wide':

S0-C0           1           63779.33 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               6870      context-switches          #    0.108 K/sec                  
S0-C0           1                 85      cpu-migrations            #    0.001 K/sec                  
S0-C0           1                 64      page-faults               #    0.001 K/sec                  
S0-C0           1        76295541296      cycles                    #    1.196 GHz                    
S0-C0           1        59103405849      instructions              #    0.77  insn per cycle         
S0-C0           1         6899346691      branches                  #  108.175 M/sec                  
S0-C0           1          977107669      branch-misses             #   14.16% of all branches        
S0-C1           1           63779.33 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               5258      context-switches          #    0.082 K/sec                  
S0-C1           1                110      cpu-migrations            #    0.002 K/sec                  
S0-C1           1                 72      page-faults               #    0.001 K/sec                  
S0-C1           1        75990743348      cycles                    #    1.191 GHz                    
S0-C1           1        59001239254      instructions              #    0.78  insn per cycle         
S0-C1           1         6884779422      branches                  #  107.947 M/sec                  
S0-C1           1          974136010      branch-misses             #   14.15% of all branches        
S0-C2           1           63779.34 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              15211      context-switches          #    0.238 K/sec                  
S0-C2           1                 51      cpu-migrations            #    0.001 K/sec                  
S0-C2           1                193      page-faults               #    0.003 K/sec                  
S0-C2           1        76524935982      cycles                    #    1.200 GHz                    
S0-C2           1        59152518129      instructions              #    0.77  insn per cycle         
S0-C2           1         6901480808      branches                  #  108.209 M/sec                  
S0-C2           1          978476612      branch-misses             #   14.18% of all branches        
S0-C3           1           63779.34 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               4152      context-switches          #    0.065 K/sec                  
S0-C3           1                 24      cpu-migrations            #    0.000 K/sec                  
S0-C3           1                 81      page-faults               #    0.001 K/sec                  
S0-C3           1        76057663309      cycles                    #    1.193 GHz                    
S0-C3           1        59047135013      instructions              #    0.78  insn per cycle         
S0-C3           1         6889039319      branches                  #  108.014 M/sec                  
S0-C3           1          974398170      branch-misses             #   14.14% of all branches        

      63.785228030 seconds time elapsed

2K validation run parameters for coremark.
CoreMark Size    : 666
Total ticks      : 63776
Total time (secs): 63.776000
Iterations/Sec   : 12543.903663
Iterations       : 800000
Compiler version : GCC8.3.1 20191121 (Red Hat 8.3.1-5)
Compiler flags   : -O3 -DMULTITHREAD=4 -DUSE_PTHREAD -pthread  -lrt
Parallel PThreads : 4
Memory location  : Please put data memory location here
			(e.g. code in flash, data on heap etc)
seedcrc          : 0x18f2
[0]crclist       : 0xe3c1
[1]crclist       : 0xe3c1
[2]crclist       : 0xe3c1
[3]crclist       : 0xe3c1
[0]crcmatrix     : 0x0747
[1]crcmatrix     : 0x0747
[2]crcmatrix     : 0x0747
[3]crcmatrix     : 0x0747
[0]crcstate      : 0x8d84
[1]crcstate      : 0x8d84
[2]crcstate      : 0x8d84
[3]crcstate      : 0x8d84
[0]crcfinal      : 0x5b5d
[1]crcfinal      : 0x5b5d
[2]crcfinal      : 0x5b5d
[3]crcfinal      : 0x5b5d
Correct operation validated. See README.md for run and reporting rules.
================================================================================
perf stat -o libquantum_groover.log --per-core -a taskset -c 0-3 ./groover_benchmark.sh -n 4
Iterating 100 times
Iteration #1
Iterating 100 times
Iteration #1
Iterating 100 times
Iteration #1
Iterating 100 times
Iteration #1
Iteration #2
Iteration #2
Iteration #2
Iteration #2
Iteration #3
Iteration #3
Iteration #3
Iteration #3
Iteration #4
Iteration #4
Iteration #4
Iteration #4
Iteration #5
Iteration #5
Iteration #5
Iteration #5
Iteration #6
Iteration #6
Iteration #6
Iteration #6
Iteration #7
Iteration #7
Iteration #7
Iteration #7
Iteration #8
Iteration #8
Iteration #8
Iteration #8
Iteration #9
Iteration #9
Iteration #9
Iteration #9
Iteration #10
Iteration #10
Iteration #10
Iteration #10
Iteration #11
Iteration #11
Iteration #11
Iteration #11
Iteration #12
Iteration #12
Iteration #12
Iteration #12
Iteration #13
Iteration #13
Iteration #13
Iteration #13
Iteration #14
Iteration #14
Iteration #14
Iteration #14
Iteration #15
Iteration #15
Iteration #15
Iteration #15
Iteration #16
Iteration #16
Iteration #16
Iteration #16
Iteration #17
Iteration #17
Iteration #17
Iteration #17
Iteration #18
Iteration #18
Iteration #18
Iteration #18
Iteration #19
Iteration #19
Iteration #19
Iteration #19
Iteration #20
Iteration #20
Iteration #20
Iteration #20
Iteration #21
Iteration #21
Iteration #21
Iteration #21
Iteration #22
Iteration #22
Iteration #22
Iteration #22
Iteration #23
Iteration #23
Iteration #23
Iteration #23
Iteration #24
Iteration #24
Iteration #24
Iteration #24
Iteration #25
Iteration #25
Iteration #25
Iteration #25
Iteration #26
Iteration #26
Iteration #26
Iteration #26
Iteration #27
Iteration #27
Iteration #27
Iteration #27
Iteration #28
Iteration #28
Iteration #28
Iteration #28
Iteration #29
Iteration #29
Iteration #29
Iteration #29
Iteration #30
Iteration #30
Iteration #30
Iteration #30
Iteration #31
Iteration #31
Iteration #31
Iteration #31
Iteration #32
Iteration #32
Iteration #32
Iteration #32
Iteration #33
Iteration #33
Iteration #33
Iteration #33
Iteration #34
Iteration #34
Iteration #34
Iteration #34
Iteration #35
Iteration #35
Iteration #35
Iteration #35
Iteration #36
Iteration #36
Iteration #36
Iteration #36
Iteration #37
Iteration #37
Iteration #37
Iteration #37
Iteration #38
Iteration #38
Iteration #38
Iteration #38
Iteration #39
Iteration #39
Iteration #39
Iteration #39
Iteration #40
Iteration #40
Iteration #40
Iteration #40
Iteration #41
Iteration #41
Iteration #41
Iteration #41
Iteration #42
Iteration #42
Iteration #42
Iteration #42
Iteration #43
Iteration #43
Iteration #43
Iteration #43
Iteration #44
Iteration #44
Iteration #44
Iteration #44
Iteration #45
Iteration #45
Iteration #45
Iteration #45
Iteration #46
Iteration #46
Iteration #46
Iteration #46
Iteration #47
Iteration #47
Iteration #47
Iteration #47
Iteration #48
Iteration #48
Iteration #48
Iteration #48
Iteration #49
Iteration #49
Iteration #49
Iteration #49
Iteration #50
Iteration #50
Iteration #50
Iteration #50
Iteration #51
Iteration #51
Iteration #51
Iteration #51
Iteration #52
Iteration #52
Iteration #52
Iteration #52
Iteration #53
Iteration #53
Iteration #53
Iteration #53
Iteration #54
Iteration #54
Iteration #54
Iteration #54
Iteration #55
Iteration #55
Iteration #55
Iteration #55
Iteration #56
Iteration #56
Iteration #56
Iteration #56
Iteration #57
Iteration #57
Iteration #57
Iteration #57
Iteration #58
Iteration #58
Iteration #58
Iteration #58
Iteration #59
Iteration #59
Iteration #59
Iteration #59
Iteration #60
Iteration #60
Iteration #60
Iteration #60
Iteration #61
Iteration #61
Iteration #61
Iteration #61
Iteration #62
Iteration #62
Iteration #62
Iteration #62
Iteration #63
Iteration #63
Iteration #63
Iteration #63
Iteration #64
Iteration #64
Iteration #64
Iteration #64
Iteration #65
Iteration #65
Iteration #65
Iteration #65
Iteration #66
Iteration #66
Iteration #66
Iteration #66
Iteration #67
Iteration #67
Iteration #67
Iteration #68
Iteration #67
Iteration #68
Iteration #68
Iteration #69
Iteration #68
Iteration #69
Iteration #69
Iteration #70
Iteration #69
Iteration #70
Iteration #70
Iteration #71
Iteration #70
Iteration #71
Iteration #71
Iteration #72
Iteration #71
Iteration #72
Iteration #72
Iteration #73
Iteration #72
Iteration #73
Iteration #73
Iteration #74
Iteration #73
Iteration #74
Iteration #74
Iteration #75
Iteration #74
Iteration #75
Iteration #75
Iteration #76
Iteration #75
Iteration #76
Iteration #76
Iteration #77
Iteration #76
Iteration #77
Iteration #77
Iteration #78
Iteration #77
Iteration #78
Iteration #78
Iteration #79
Iteration #78
Iteration #79
Iteration #79
Iteration #80
Iteration #79
Iteration #80
Iteration #80
Iteration #81
Iteration #80
Iteration #81
Iteration #82
Iteration #81
Iteration #81
Iteration #82
Iteration #83
Iteration #82
Iteration #82
Iteration #84
Iteration #83
Iteration #83
Iteration #83
Iteration #85
Iteration #84
Iteration #84
Iteration #84
Iteration #86
Iteration #85
Iteration #85
Iteration #85
Iteration #86
Iteration #87
Iteration #86
Iteration #86
Iteration #87
Iteration #88
Iteration #87
Iteration #87
Iteration #88
Iteration #89
Iteration #88
Iteration #88
Iteration #89
Iteration #90
Iteration #89
Iteration #89
Iteration #90
Iteration #91
Iteration #90
Iteration #90
Iteration #91
Iteration #92
Iteration #91
Iteration #91
Iteration #92
Iteration #93
Iteration #92
Iteration #92
Iteration #93
Iteration #94
Iteration #93
Iteration #93
Iteration #94
Iteration #95
Iteration #94
Iteration #94
Iteration #95
Iteration #96
Iteration #95
Iteration #95
Iteration #96
Iteration #97
Iteration #96
Iteration #96
Iteration #97
Iteration #98
Iteration #97
Iteration #97
Iteration #98
Iteration #99
Iteration #98
Iteration #98
Iteration #99
Iteration #100
Iteration #99
Iteration #99
Iteration #100

Found 10000 with a probability of 1.000000

Iteration #100
Iteration #100

Found 10000 with a probability of 1.000000


Found 10000 with a probability of 1.000000


Found 10000 with a probability of 1.000000

/root/i-benchmarks/coremark/bin
# started on Fri Mar 12 12:54:54 2021


 Performance counter stats for 'system wide':

S0-C0           1          104408.39 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1              92296      context-switches          #    0.884 K/sec                  
S0-C0           1               1944      cpu-migrations            #    0.019 K/sec                  
S0-C0           1              31557      page-faults               #    0.302 K/sec                  
S0-C0           1       125168771048      cycles                    #    1.199 GHz                    
S0-C0           1       115134517736      instructions              #    0.92  insn per cycle         
S0-C0           1        18904725546      branches                  #  181.065 M/sec                  
S0-C0           1           42393922      branch-misses             #    0.22% of all branches        
S0-C1           1          104408.39 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1              95362      context-switches          #    0.913 K/sec                  
S0-C1           1               1982      cpu-migrations            #    0.019 K/sec                  
S0-C1           1              32421      page-faults               #    0.311 K/sec                  
S0-C1           1       125189709409      cycles                    #    1.199 GHz                    
S0-C1           1       114927053254      instructions              #    0.92  insn per cycle         
S0-C1           1        18868413962      branches                  #  180.717 M/sec                  
S0-C1           1           40734211      branch-misses             #    0.22% of all branches        
S0-C2           1          104408.39 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1              84779      context-switches          #    0.812 K/sec                  
S0-C2           1               1784      cpu-migrations            #    0.017 K/sec                  
S0-C2           1              32119      page-faults               #    0.308 K/sec                  
S0-C2           1       125162926664      cycles                    #    1.199 GHz                    
S0-C2           1       115403213435      instructions              #    0.92  insn per cycle         
S0-C2           1        18955326561      branches                  #  181.550 M/sec                  
S0-C2           1           37002052      branch-misses             #    0.20% of all branches        
S0-C3           1          104408.40 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1              82488      context-switches          #    0.790 K/sec                  
S0-C3           1               1693      cpu-migrations            #    0.016 K/sec                  
S0-C3           1              32377      page-faults               #    0.310 K/sec                  
S0-C3           1       125216558993      cycles                    #    1.199 GHz                    
S0-C3           1       115564708989      instructions              #    0.92  insn per cycle         
S0-C3           1        18979441287      branches                  #  181.781 M/sec                  
S0-C3           1           36243902      branch-misses             #    0.19% of all branches        

     104.417690667 seconds time elapsed

================================================================================
perf stat -o libquatum_shor.log --per-core -a taskset -c 0-3 ./shor_benchmark.sh -n 4
N = 200, 42 qubits required
Random seed: 141
N = 200, 42 qubits required
Random seed: 141
N = 200, 42 qubits required
Random seed: 141
N = 200, 42 qubits required
Random seed: 141
Measured 26214 (0.399994), fractional approximation is 2/5.
Odd denominator, trying to expand by 2.
Possible period is 10.
Unable to determine factors, try again.
Measured 26214 (0.399994), fractional approximation is 2/5.
Odd denominator, trying to expand by 2.
Possible period is 10.
Unable to determine factors, try again.
Measured 26214 (0.399994), fractional approximation is 2/5.
Odd denominator, trying to expand by 2.
Possible period is 10.
Unable to determine factors, try again.
Measured 26214 (0.399994), fractional approximation is 2/5.
Odd denominator, trying to expand by 2.
Possible period is 10.
Unable to determine factors, try again.
/root/i-benchmarks/coremark/bin
# started on Fri Mar 12 12:56:38 2021


 Performance counter stats for 'system wide':

S0-C0           1          311776.27 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1             230066      context-switches          #    0.738 K/sec                  
S0-C0           1               2427      cpu-migrations            #    0.008 K/sec                  
S0-C0           1              13344      page-faults               #    0.043 K/sec                  
S0-C0           1       373967377498      cycles                    #    1.199 GHz                    
S0-C0           1       360055705751      instructions              #    0.96  insn per cycle         
S0-C0           1        60001887130      branches                  #  192.452 M/sec                  
S0-C0           1          138005298      branch-misses             #    0.23% of all branches        
S0-C1           1          311776.28 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1             223585      context-switches          #    0.717 K/sec                  
S0-C1           1               2358      cpu-migrations            #    0.008 K/sec                  
S0-C1           1              15947      page-faults               #    0.051 K/sec                  
S0-C1           1       373992377860      cycles                    #    1.200 GHz                    
S0-C1           1       360190162895      instructions              #    0.96  insn per cycle         
S0-C1           1        59998785880      branches                  #  192.442 M/sec                  
S0-C1           1          130677639      branch-misses             #    0.22% of all branches        
S0-C2           1          311776.27 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1             289564      context-switches          #    0.929 K/sec                  
S0-C2           1               2233      cpu-migrations            #    0.007 K/sec                  
S0-C2           1              12254      page-faults               #    0.039 K/sec                  
S0-C2           1       374004269009      cycles                    #    1.200 GHz                    
S0-C2           1       358541744376      instructions              #    0.96  insn per cycle         
S0-C2           1        59716289434      branches                  #  191.536 M/sec                  
S0-C2           1          150379863      branch-misses             #    0.25% of all branches        
S0-C3           1          311776.28 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1             219532      context-switches          #    0.704 K/sec                  
S0-C3           1               2169      cpu-migrations            #    0.007 K/sec                  
S0-C3           1              20552      page-faults               #    0.066 K/sec                  
S0-C3           1       374017085563      cycles                    #    1.200 GHz                    
S0-C3           1       360987723425      instructions              #    0.97  insn per cycle         
S0-C3           1        60167141120      branches                  #  192.982 M/sec                  
S0-C3           1          125776043      branch-misses             #    0.21% of all branches        

     311.802506912 seconds time elapsed

================================================================================
perf stat -o arm_core_benchmarks.log --per-core -a taskset -c 0-3 ./arm_core_benchmarks.sh -n 4
/root/i-benchmarks/libquantum/bin
# started on Fri Mar 12 13:01:50 2021


 Performance counter stats for 'system wide':

S0-C0           1           32255.67 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C0           1               3264      context-switches          #    0.101 K/sec                  
S0-C0           1                 63      cpu-migrations            #    0.002 K/sec                  
S0-C0           1                277      page-faults               #    0.009 K/sec                  
S0-C0           1        38298358824      cycles                    #    1.187 GHz                    
S0-C0           1        17744933227      instructions              #    0.46  insn per cycle         
S0-C0           1         1205688538      branches                  #   37.379 M/sec                  
S0-C0           1          260593641      branch-misses             #   21.61% of all branches        
S0-C1           1           32255.67 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C1           1               3518      context-switches          #    0.109 K/sec                  
S0-C1           1                 81      cpu-migrations            #    0.003 K/sec                  
S0-C1           1                309      page-faults               #    0.010 K/sec                  
S0-C1           1        38339815824      cycles                    #    1.189 GHz                    
S0-C1           1        17750259784      instructions              #    0.46  insn per cycle         
S0-C1           1         1206214731      branches                  #   37.395 M/sec                  
S0-C1           1          260682698      branch-misses             #   21.61% of all branches        
S0-C2           1           32255.67 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C2           1               9211      context-switches          #    0.286 K/sec                  
S0-C2           1                 49      cpu-migrations            #    0.002 K/sec                  
S0-C2           1                180      page-faults               #    0.006 K/sec                  
S0-C2           1        38682588932      cycles                    #    1.199 GHz                    
S0-C2           1        17856278476      instructions              #    0.46  insn per cycle         
S0-C2           1         1217441206      branches                  #   37.743 M/sec                  
S0-C2           1          262825666      branch-misses             #   21.59% of all branches        
S0-C3           1           32255.68 msec cpu-clock                 #    1.000 CPUs utilized          
S0-C3           1               2232      context-switches          #    0.069 K/sec                  
S0-C3           1                 27      cpu-migrations            #    0.001 K/sec                  
S0-C3           1                252      page-faults               #    0.008 K/sec                  
S0-C3           1        38281908555      cycles                    #    1.187 GHz                    
S0-C3           1        17731279658      instructions              #    0.46  insn per cycle         
S0-C3           1         1203946702      branches                  #   37.325 M/sec                  
S0-C3           1          260059969      branch-misses             #   21.60% of all branches        

      32.258612774 seconds time elapsed

================================================================================
perf stat -o multichase.log --per-core -a taskset -c 0-3 ./multichase -m 4g -n 10 -t 4
mmap: Cannot allocate memory
# started on Fri Mar 12 13:02:23 2021


 Performance counter stats for 'system wide':

S0-C0           1              60.33 msec cpu-clock                 #    0.995 CPUs utilized          
S0-C0           1                 51      context-switches          #    0.845 K/sec                  
S0-C0           1                  3      cpu-migrations            #    0.050 K/sec                  
S0-C0           1                  0      page-faults               #    0.000 K/sec                  
S0-C0           1            2744598      cycles                    #    0.045 GHz                    
S0-C0           1             583754      instructions              #    0.21  insn per cycle         
S0-C0           1              86437      branches                  #    1.433 M/sec                  
S0-C0           1              20622      branch-misses             #   23.86% of all branches        
S0-C1           1              60.33 msec cpu-clock                 #    0.995 CPUs utilized          
S0-C1           1                 48      context-switches          #    0.796 K/sec                  
S0-C1           1                  7      cpu-migrations            #    0.116 K/sec                  
S0-C1           1                  0      page-faults               #    0.000 K/sec                  
S0-C1           1            2578438      cycles                    #    0.043 GHz                    
S0-C1           1             563876      instructions              #    0.22  insn per cycle         
S0-C1           1              80753      branches                  #    1.338 M/sec                  
S0-C1           1              14183      branch-misses             #   17.56% of all branches        
S0-C2           1              60.33 msec cpu-clock                 #    0.995 CPUs utilized          
S0-C2           1                 10      context-switches          #    0.166 K/sec                  
S0-C2           1                  4      cpu-migrations            #    0.066 K/sec                  
S0-C2           1                  0      page-faults               #    0.000 K/sec                  
S0-C2           1            1329088      cycles                    #    0.022 GHz                    
S0-C2           1             198904      instructions              #    0.15  insn per cycle         
S0-C2           1              28505      branches                  #    0.472 M/sec                  
S0-C2           1               7048      branch-misses             #   24.73% of all branches        
S0-C3           1              60.33 msec cpu-clock                 #    0.995 CPUs utilized          
S0-C3           1                 40      context-switches          #    0.663 K/sec                  
S0-C3           1                  0      cpu-migrations            #    0.000 K/sec                  
S0-C3           1                580      page-faults               #    0.010 M/sec                  
S0-C3           1           53372811      cycles                    #    0.885 GHz                    
S0-C3           1           29578626      instructions              #    0.55  insn per cycle         
S0-C3           1            3651449      branches                  #   60.520 M/sec                  
S0-C3           1             274220      branch-misses             #    7.51% of all branches        

       0.060640175 seconds time elapsed

================================================================================
perf stat -o multiload.log --per-core -a taskset -c 0-3 ./multiload -m 4g -n 3 -t 4
mmap: Cannot allocate memory
# started on Fri Mar 12 13:02:23 2021


 Performance counter stats for 'system wide':

S0-C0           1              62.78 msec cpu-clock                 #    0.994 CPUs utilized          
S0-C0           1                 98      context-switches          #    0.002 M/sec                  
S0-C0           1                  4      cpu-migrations            #    0.064 K/sec                  
S0-C0           1                 41      page-faults               #    0.653 K/sec                  
S0-C0           1            8205683      cycles                    #    0.131 GHz                    
S0-C0           1            2055261      instructions              #    0.25  insn per cycle         
S0-C0           1             279751      branches                  #    4.456 M/sec                  
S0-C0           1              55781      branch-misses             #   19.94% of all branches        
S0-C1           1              62.78 msec cpu-clock                 #    0.994 CPUs utilized          
S0-C1           1                 38      context-switches          #    0.605 K/sec                  
S0-C1           1                  1      cpu-migrations            #    0.016 K/sec                  
S0-C1           1                539      page-faults               #    0.009 M/sec                  
S0-C1           1           49598288      cycles                    #    0.790 GHz                    
S0-C1           1           28656712      instructions              #    0.58  insn per cycle         
S0-C1           1            3521371      branches                  #   56.089 M/sec                  
S0-C1           1             230950      branch-misses             #    6.56% of all branches        
S0-C2           1              62.78 msec cpu-clock                 #    0.994 CPUs utilized          
S0-C2           1                 55      context-switches          #    0.876 K/sec                  
S0-C2           1                  8      cpu-migrations            #    0.127 K/sec                  
S0-C2           1                  0      page-faults               #    0.000 K/sec                  
S0-C2           1            3557356      cycles                    #    0.057 GHz                    
S0-C2           1             726105      instructions              #    0.20  insn per cycle         
S0-C2           1              91673      branches                  #    1.460 M/sec                  
S0-C2           1              23326      branch-misses             #   25.44% of all branches        
S0-C3           1              62.78 msec cpu-clock                 #    0.994 CPUs utilized          
S0-C3           1                 48      context-switches          #    0.765 K/sec                  
S0-C3           1                  5      cpu-migrations            #    0.080 K/sec                  
S0-C3           1                  0      page-faults               #    0.000 K/sec                  
S0-C3           1            2746250      cycles                    #    0.044 GHz                    
S0-C3           1             496061      instructions              #    0.18  insn per cycle         
S0-C3           1              62279      branches                  #    0.992 M/sec                  
S0-C3           1              19257      branch-misses             #   30.92% of all branches        

       0.063163256 seconds time elapsed

================================================================================
================================================================================
Printing results
File: arm_core_benchmarks.txt
instructions: 71082751145
=(17744933227+17750259784+17856278476+17731279658)
frequencies: 1.191
=(1.187+1.189+1.199+1.187)/4
ipcs:0.46
=1*(0.46+0.46+0.46+0.46)/4

File: 130_li.txt
instructions: 193081018197
=(48269848171+48251245035+48330903354+48229021637)
frequencies: 1.197
=(1.197+1.197+1.198+1.197)/4
ipcs:0.47
=1*(0.47+0.47+0.47+0.47)/4

File: run_forest_importances_faces.txt
instructions: 369996749458
=(61824529600+52295709175+147167164772+108709345911)
frequencies: 0.596
=(0.471+0.398+0.862+0.654)/4
ipcs:0.32
=1*(0.28+0.28+0.36+0.35)/4

File: word2vec_perf_output_no_branch_1615551018068751435.txt
instructions: 166491960988
=(40642867119+41176012324+43229815258+41443266287)
frequencies: 1.148
=(1.126+1.135+1.193+1.137)/4
ipcs:0.35
=1*(0.35+0.35+0.35+0.35)/4

File: 146_wave5.txt
instructions: 78792786985
=(20321628800+19619923925+19460216754+19391017506)
frequencies: 1.169
=(1.172+1.154+1.173+1.178)/4
ipcs:0.24
=1*(0.25+0.24+0.24+0.24)/4

File: lda_perf_output_1615551372079921332.txt
instructions: 30338068841
=(7481720964+7631389651+7556511892+7668446334)
frequencies: 1.189
=(1.189+1.190+1.188+1.189)/4
ipcs:0.53
=1*(0.52+0.53+0.52+0.53)/4

File: kmeans_perf_output_1615551433216780505.txt
instructions: 41888585690
=(11160184739+11230201784+8321548389+11176650778)
frequencies: 1.176
=(1.192+1.193+1.125+1.193)/4
ipcs:0.59
=1*(0.62+0.62+0.49+0.62)/4

File: 101_tomcatv.txt
instructions: 67324775924
=(16769181499+17181170109+16592888550+16781535766)
frequencies: 1.134
=(1.131+1.130+1.131+1.142)/4
ipcs:0.17
=1*(0.17+0.18+0.17+0.17)/4

File: 145_fpppp.txt
instructions: 410014132285
=(102216905511+102738962578+102365550602+102692713594)
frequencies: 1.195
=(1.194+1.195+1.192+1.200)/4
ipcs:0.58
=1*(0.58+0.58+0.58+0.58)/4

File: run_plot_svm_nonlinear.txt
instructions: 36102070420
=(8996360128+9033900859+9089070425+8982739008)
frequencies: 1.165
=(1.161+1.167+1.168+1.162)/4
ipcs:0.46
=1*(0.46+0.46+0.46+0.46)/4

File: go_word2vec_4_threads.txt
instructions: 89826030747
=(20343641969+20419437525+20550679673+28512271580)
frequencies: 0.966
=(0.891+0.890+0.892+1.189)/4
ipcs:0.59
=1*(0.58+0.58+0.58+0.61)/4

File: 103_su2cor.txt
instructions: 85824989187
=(21587612461+21531367857+21295562349+21410446520)
frequencies: 1.180
=(1.186+1.181+1.177+1.178)/4
ipcs:0.14
=1*(0.14+0.14+0.14+0.14)/4

File: sort_perf_output_1615551492466512473.txt
instructions: 41218681260
=(10114534525+10391784611+10478289613+10234072511)
frequencies: 0.853
=(0.846+0.859+0.862+0.843)/4
ipcs:0.48
=1*(0.48+0.48+0.48+0.48)/4

File: multichase.txt
instructions: 30925160
=(583754+563876+198904+29578626)
frequencies: 0.249
=(0.045+0.043+0.022+0.885)/4
ipcs:0.28
=1*(0.21+0.22+0.15+0.55)/4

File: 134_perl.txt
instructions: 91834852697
=(22775872076+23149410669+22872292525+23037277427)
frequencies: 1.181
=(1.184+1.191+1.182+1.167)/4
ipcs:0.55
=1*(0.55+0.55+0.55+0.56)/4

File: 125_turb3d.txt
instructions: 248367221271
=(62031459831+62049236726+62216371148+62070153566)
frequencies: 1.199
=(1.199+1.198+1.199+1.199)/4
ipcs:0.48
=1*(0.48+0.48+0.48+0.48)/4

File: 132_ijpeg.txt
instructions: 83366353913
=(21074352399+21429756970+21704936418+19157308126)
frequencies: 1.146
=(1.162+1.178+1.193+1.050)/4
ipcs:0.76
=1*(0.76+0.76+0.76+0.77)/4

File: libquatum_shor.txt
instructions: 1439775336447
=(360055705751+360190162895+358541744376+360987723425)
frequencies: 1.200
=(1.199+1.200+1.200+1.200)/4
ipcs:0.96
=1*(0.96+0.96+0.96+0.97)/4

File: 110_applu.txt
instructions: 87601099761
=(21961814990+21899844488+21938299439+21801140844)
frequencies: 1.195
=(1.200+1.194+1.195+1.191)/4
ipcs:0.21
=1*(0.21+0.21+0.21+0.21)/4

File: NaiveBayes_perf_output_1615551384442115777.txt
instructions: 94543004644
=(23672565890+23406132101+23738354395+23725952258)
frequencies: 1.194
=(1.197+1.192+1.191+1.194)/4
ipcs:0.64
=1*(0.63+0.63+0.64+0.64)/4

File: 102_swim.txt
instructions: 24377473469
=(6158268188+6089156066+6101253734+6028795481)
frequencies: 1.195
=(1.199+1.195+1.196+1.190)/4
ipcs:0.07
=1*(0.07+0.07+0.07+0.07)/4

File: 129_compress.txt
instructions: 142327280479
=(35064646398+35433418559+36414924730+35414290792)
frequencies: 1.188
=(1.182+1.188+1.200+1.182)/4
ipcs:0.18
=1*(0.18+0.18+0.18+0.18)/4

File: run_multioutput_face_completion.txt
instructions: 95552780580
=(22700703743+23060798128+24560225902+25231052807)
frequencies: 0.830
=(0.799+0.791+0.849+0.881)/4
ipcs:0.39
=1*(0.38+0.39+0.39+0.38)/4

File: md5_perf_output_1615551448601554305.txt
instructions: 73460776853
=(18088460847+18268956355+18649991008+18453368643)
frequencies: 0.639
=(0.637+0.635+0.648+0.638)/4
ipcs:0.66
=1*(0.65+0.66+0.66+0.66)/4

File: wordcounts_perf_output_1615551415707756077.txt
instructions: 52256712356
=(13059518171+13228359606+12865918172+13102916407)
frequencies: 1.195
=(1.196+1.195+1.195+1.193)/4
ipcs:0.63
=1*(0.63+0.64+0.62+0.63)/4

File: coremark_benchmark.txt
instructions: 236304298245
=(59103405849+59001239254+59152518129+59047135013)
frequencies: 1.195
=(1.196+1.191+1.200+1.193)/4
ipcs:0.78
=1*(0.77+0.78+0.77+0.78)/4

File: 107_mgrid.txt
instructions: 121112378978
=(30304583591+30346221577+30278940640+30182633170)
frequencies: 1.196
=(1.200+1.199+1.194+1.193)/4
ipcs:0.27
=1*(0.27+0.27+0.27+0.27)/4

File: multiload.txt
instructions: 31934139
=(2055261+28656712+726105+496061)
frequencies: 0.256
=(0.131+0.790+0.057+0.044)/4
ipcs:0.30
=1*(0.25+0.58+0.20+0.18)/4

File: sqlite_4_threads.txt
instructions: 19750801315
=(4944262988+4934688786+4922842744+4949006797)
frequencies: 1.188
=(1.185+1.186+1.194+1.185)/4
ipcs:0.48
=1*(0.48+0.48+0.48+0.49)/4

File: grep_perf_output_1615551223461916882.txt
instructions: 196922569844
=(41401281790+48112578211+53837948354+53570761489)
frequencies: 0.530
=(0.468+0.519+0.570+0.564)/4
ipcs:0.62
=1*(0.60+0.62+0.64+0.64)/4

File: run_plot_theilsen.txt
instructions: 30089812050
=(8101390068+7624528914+8508898432+5854994636)
frequencies: 0.881
=(0.964+0.892+0.967+0.701)/4
ipcs:0.28
=1*(0.28+0.28+0.29+0.28)/4

File: 147_vortex.txt
instructions: 239653613800
=(60214374384+59697873334+59984135701+59757230381)
frequencies: 1.182
=(1.196+1.167+1.186+1.180)/4
ipcs:0.52
=1*(0.52+0.53+0.52+0.52)/4

File: 141_apsi.txt
instructions: 77098712065
=(19293445101+19356460849+19213257734+19235548381)
frequencies: 1.162
=(1.149+1.154+1.150+1.196)/4
ipcs:0.29
=1*(0.29+0.29+0.29+0.28)/4

File: 099_go.txt
instructions: 108372400233
=(27176790242+27061560509+27050525683+27083523799)
frequencies: 1.188
=(1.199+1.180+1.186+1.186)/4
ipcs:0.48
=1*(0.48+0.48+0.48+0.48)/4

File: 104_hydro2d.txt
instructions: 128498657680
=(32085857248+32177471539+32218094112+32017234781)
frequencies: 1.185
=(1.191+1.185+1.187+1.177)/4
ipcs:0.27
=1*(0.27+0.27+0.27+0.27)/4

File: libquantum_groover.txt
instructions: 461029493414
=(115134517736+114927053254+115403213435+115564708989)
frequencies: 1.199
=(1.199+1.199+1.199+1.199)/4
ipcs:0.92
=1*(0.92+0.92+0.92+0.92)/4

File: word2vec_perf_output_1615551018059637436.txt
instructions: 235878142416
=(57891202003+60131884422+59376171981+58478884010)
frequencies: 1.151
=(1.144+1.169+1.155+1.135)/4
ipcs:0.51
=1*(0.51+0.51+0.51+0.51)/4

File: 126_gcc.txt
instructions: 15225724992
=(3704504643+3897789733+3917257298+3706173318)
frequencies: 1.154
=(1.147+1.190+1.146+1.135)/4
ipcs:0.43
=1*(0.42+0.43+0.45+0.43)/4

File: aes_benchmark.txt
instructions: 30918061564
=(7731672812+7728899382+7725632448+7731856922)
frequencies: 1.193
=(1.195+1.192+1.191+1.194)/4
ipcs:0.92
=1*(0.92+0.92+0.92+0.92)/4

================================================================================
Finished running benchmarks
================================================================================
